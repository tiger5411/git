##############################
# Other topics (not my code) #
##############################

## Emily's new hook topic on top of my base topic. Picket it from the
## RHS of a5bb6b06ba3...984c5d4fc10 (saw it in git fetch).
##
## NEEDS: es-avar/config-based-hooks-5. Emily's is at
## https://github.com/nasamuffin/git/tree/config-based-hooks-restart
##
## TODO: The *-2 is mine, on top of my es-avar/config-based-hooks-5,
## using nasamuffin/config-based-hooks-restart @ cf660c5b754
##
## NOTE: I've got significant outstanding feedback on the core design
## at https://lore.kernel.org/git/87bl6ttmlv.fsf@evledraar.gmail.com
##
## NOTE: Also this, mentioned on IRC:

##    00:08 < avar> Consider leaving the RUN_HOOKS_OPT_INIT and not
##    doing the rename to RUN_HOOKS_OPT_INIT_ASYNC, makes the diff
##    smaller, and is consistent with other cases where we have
##    "struct foo_bar" and a corresponding FOO_BAR_INIT for the
##    default settings, i.e. jobs=0 being the default init behavior
##
##    00:08 < avar> ..makes the patch more narrowly focused on dealing
##    with the "sync" cases
##
## My version here has this^
##
##    00:11 < avar> Your "hook: include hooks from the config" adds
##    t1360*.sh again, should be renamed/squashed into the t1800*.sh I
##    renamed it to.

##    00:11 < avar> (FWIW I did that because "Second digit tells the
##    particular command we are testing" in t/README, i.e. t13* is
##    "git config", but it's testing a new "git hook", so I found a
##    new "namespace" for it)
##
##    00:12 < avar> (We don't always follow that convention
##    unfortunately, the namespace is getting too busy, but since it
##    was easy in this case...)
##
## Not this^
##
##    00:12 < avar> The tests that deal with "git hook list"
##    etc. should be squashed earlier into that commit..
##
##    00:13 < avar> In general this really needs to spread around the
##    tests, seems there's just test changs in the later part of the
##    series, but earlier parts introduce behavior chang tested for in
##    the one big test update there (or maybe there aren't tests...?)
##
##    00:14 < avar> Is there any in-tree user for the "allow running
##    non-native hooks" at the end, or just a nice-to-have?
##
## Also outstanding^
##
##    00:14 < avar> I think the git-send-email special snowflake is
##    also entirely untested for / needs updating for the multi-hook
##    case, maybe...
##
## Ditto^
##
##    00:16 < avar> Aside from that this at a glance seems in pretty
##    good shape to me mechanically speaking, thanks.
##
##    00:17 < avar> Mechanically because of my outstanding comments in
##    https://lore.kernel.org/git/87bl6ttmlv.fsf@evledraar.gmail.com
##    on some fundimentals of the design, i.e. I worry that this
##    config-based approach is overly complex for no particularly good
##    reason, and we could do with a much simpler version of it...
##
## The "significant feedback" mentioned above^
##
# => https://lore.kernel.org/git/20210715232603.3415111-1-emilyshaffer@google.com
avar-nasamuffin/config-based-hooks-restart-2

## Initially submitted as
## https://lore.kernel.org/git/20210805230321.532218-1-mathstuf@gmail.com/
## (saved as avar-ben-boeckel/refactor-advice-globals-orig).
##
avar-ben-boeckel/refactor-advice-globals

#########################################################
# Has a "Will merge to 'master'" note in What's Cooking #
#########################################################

############################
# Merged to 'next' already #
############################

## Drop support for ancient curl versions
##
## Junio rewrote the commit message of "http: drop support for curl <
## 7.19.3 and < 7.17.0 (again)" while picking it up.
##
# => https://lore.kernel.org/git/cover-v4-0.5-00000000000-20210730T175650Z-avarab@gmail.com
avar-jk/no-ancient-curl-3

## Improve the intro section of "git-bundle"
##
## TODO: Have a v9 ready locally, for rebasing, not submitted yet.
##
# https://lore.kernel.org/git/cover-v8-0.4-00000000000-20210731T082120Z-avarab@gmail.com
avar/bundle-doc-generalize-9

## Remove dead "(!resolved && errno == EISDIR)" code in
## refs/files-backend.c and "reflog expire: don't lock reflogs using
## previously seen OID"
##
## NOTE: Was marked for next in
## https://lore.kernel.org/git/87sg00qfbp.fsf@evledraar.gmail.com/;
## but Junio unmarked it in
## https://lore.kernel.org/git/87wnp4p4xo.fsf@evledraar.gmail.com/
##
# => https://lore.kernel.org/git/cover-00.11-0000000000-20210726T234237Z-avarab@gmail.com
avar/files-backend-remove-dead-errno-eisdir-4

## Pass "failure_errno" up from refs.c and refs/files-backend.c. I
## helped / took over submission of this from Han-Wen.
##
## NEEDS: avar/files-backend-remove-dead-errno-eisdir
##
## NOTE: Really a "v5" + N now, i.e. I picked up his v5, submitted 2x
## on top (there was a "v6?", note the question mark), so v7, v8...
##
## TODO: I made a v10 beacuse I'd made a v4 of
## avar/files-backend-remove-dead-errno-eisdir-4, but there's no
## changes, so it won't be needed probably:
##
##    git range-diff \
##    avar/files-backend-remove-dead-errno-eisdir-3..avar-review/pr-git-1012/hanwen/einval-sideband-v5-4 \
##    avar/files-backend-remove-dead-errno-eisdir-4..avar-review/pr-git-1012/hanwen/einval-sideband-v5-5
##
# => https://lore.kernel.org/git/cover-0.7-00000000000-20210720T102644Z-avarab@gmail.com
avar-review/pr-git-1012/hanwen/einval-sideband-v5-5

## Fix a segfault in the recent pack-objects --stdin-pack support and
## test blindspots for avar/setup-revisions-stdin-parsing-api-3
##
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210709T101014Z-avarab@gmail.com
avar/pack-objects-tests-and-stdin-packs-segfault-fix-2

#######################################################
# Has a "Will merge to 'next'" note in What's Cooking #
#######################################################

## Fix various API uses of progress.c, a version+rebase of
## https://lore.kernel.org/git/20210620200303.2328957-1-szeder.dev@gmail.com
##
## I re-rolled this and submitted it.
##
## TODO?: https://lore.kernel.org/git/xmqqbl6slmer.fsf@gitster.g/
## asked Junio @ 2021-07-27 if he wanted it re-rolled:
## https://lore.kernel.org/git/87sg00qfbp.fsf@evledraar.gmail.com/
##
## TODO: Feedback from SZEDER:
## https://public-inbox.org/git/20210802210759.GD23408@szeder.dev/ &
## https://public-inbox.org/git/20210802214827.GE23408@szeder.dev/
#
# https://lore.kernel.org/git/cover-v2-0.3-0000000000-20210805T105720Z-avarab@gmail.com
avar-szeder/progress-bar-fixes-2

#####################################################################
# Most active -- Things I'm actively pursuing & have been submitted #
#####################################################################

## Colorize man pages in "git help xyz"
#
# => https://lore.kernel.org/git/patch-1.1-a950ef49e28-20210621T083254Z-avarab@gmail.com/
avar-fc/color-man

## Report problems with loose objects better
##
# => https://lore.kernel.org/git/cover-00.21-00000000000-20210710T133203Z-avarab@gmail.com
avar/fsck-error-on-completely-invalid-5

## Per https://lore.kernel.org/git/87lf80l1m6.fsf@evledraar.gmail.com/
## I re-did this myself to change over to the new hook API without any
## config change behavior.
##
## Maybe I want es-avar/config-based-hooks-2-after-gently after this?
##
## The version is -1 in public, due to my screwing around.
##
## TODO: Submit a v6 with at least the bash -> sh fixup:
## https://lore.kernel.org/git/87zgtxms4s.fsf@evledraar.gmail.com/
#
# => https://lore.kernel.org/git/cover-v4-00.36-00000000000-20210803T191505Z-avarab@gmail.com
es-avar/config-based-hooks-6

## A rescue of the splitting of the t/helper/test-read-cache.c RFC
## patch from
## https://lore.kernel.org/git/20210317132814.30175-6-avarab@gmail.com/
#
## TODO: Small comment from Junio @
## https://lore.kernel.org/git/xmqqr1hdthla.fsf@gitster.g/ (seems he
## squashed that in)
##
## TODO: Re-roll a v2 with my clarifications per:
## https://lore.kernel.org/git/87pmw3dlkl.fsf@evledraar.gmail.com/ and
## https://lore.kernel.org/git/87sg00qfbp.fsf@evledraar.gmail.com/
#
# => https://lore.kernel.org/git/cover-0.4-0000000000-20210607T115454Z-avarab@gmail.com
avar/split-up-test-tool-read-cache-2

## Prep for changes I need for "bundle create --stdin". Soft-depends
## on avar/pack-objects-tests-and-stdin-packs-segfault-fix, applies on
## master, but better tested in combination with the test series.
##
## TODO: Is this good enough? Per
## https://lore.kernel.org/git/87sg00qfbp.fsf@evledraar.gmail.com/;
## have a v6 locally for rebasing.
##
# https://lore.kernel.org/git/cover-0.5-00000000000-20210726T124425Z-avarab@gmail.com
avar/setup-revisions-stdin-parsing-api-6

## Refactor test-lib.sh testing into a lib-subtest.sh.
##
## Needed in preparation for avar/support-test-verbose-under-prove-2
##
## NOTE: Have a -3 ready, rebased on master this time
#
# https://lore.kernel.org/git/cover-v3-0.9-0000000000-20210805T103237Z-avarab@gmail.com
avar/t0000-lib-subtest-split-and-refactor-3

## General API cleanup of serve.[ch], started as a series to add and
## use a git_config() callback function instead of manual
## configuration.
##
## That's ejected from avar/transport-use-git-config-callback-4,
## including the call_{command,advertise}() patch. Maybe bring it back
## later?
##
# => https://lore.kernel.org/git/cover-v4-00.10-00000000000-20210805T011823Z-avarab@gmail.com
avar/transport-use-git-config-callback-4

## Add correct dependencies for the tags targets
#
# => https://lore.kernel.org/git/cover-v4-0.5-00000000000-20210804T225222Z-avarab@gmail.com
avar/makefile-tags-targets-deps-4

## Documentation/Makefile: don't re-build on 'git version' changes
##
## TODO: Junio likes the "regression", maybe formalize the "build with
## a custom git version" part of this?
##
# => https://lore.kernel.org/git/patch-1.1-911881ce19f-20210702T115617Z-avarab@gmail.com
avar/make-asciidoc-flags

## Add a SANITIZE=leak test mode
##
## See also avar/tests-add-sanitize-leak-test-mode-wip and
## avar/test-add-sanitize-leak-test-mode-ejected-progress-fix-todo
##
## TODO: Go over the substantial feedback @
## https://lore.kernel.org/git/cover-0.4-0000000000-20210714T172251Z-avarab@gmail.com/
#
# => https://lore.kernel.org/git/cover-0.4-0000000000-20210714T172251Z-avarab@gmail.com
avar/tests-add-sanitize-leak-test-mode-3

## Improve parse_options() patterns in builtin/commit-graph.c
##
## TODO: Send a v4; Seemed Taylor suggested picking it up (or maybe
## not?) and then didn't:
## https://lore.kernel.org/git/87im14unfd.fsf@evledraar.gmail.com/
##
# => https://lore.kernel.org/git/cover-0.6-00000000000-20210720T113707Z-avarab@gmail.com
avar/commit-graph-usage-4

## Fix a reported segfault in "git [fetch|pull] --set-upstream" on detached HEAD
##
## TODO: *Sigh* submitted it with a whitespace issue, fixed in
## unsubmitted *-2, maybe a re-roll won't be needed.
##
## NOTE: Submitted it without noticing
## https://lore.kernel.org/git/xmqqsg0anxix.fsf@gitster.g; maybe
## there'll be something to extract from it.
##
# => https://lore.kernel.org/git/patch-1.1-2d8f3e59e1f-20210719T142808Z-avarab@gmail.com
avar/fetch-pull-set-upstream-segfault-2

## Add GIT_TEST_COLUMNS to fix a regression in my 49a177beca
## (test-lib.sh: set COLUMNS=80 for --verbose repeatability,
## 2021-06-29)
#
# => https://lore.kernel.org/git/cover-v3-0.3-00000000000-20210804T230335Z-avarab@gmail.com
avar/use-git-test-columns-in-test-lib-3

## Be more gentle in setup_git_directory_gently()
#
# => https://lore.kernel.org/git/patch-1.1-fc26c46d39-20210722T140648Z-avarab@gmail.com
avar/do-not-die-on-setup-gently

## fetch-negotiator: don't annoyingly segfault on API misuse
# => https://lore.kernel.org/git/patch-1.1-f1da49de63-20210727T000203Z-avarab@gmail.com
avar/fetch-negotiator-bug-not-segfault-on-api-misuse

## Emit stray http.c error with error_errno()
##
## TODO: Junio did not pick this up for whatever reason. Re-submit a
## v2 after v2.33.
##
# => https://lore.kernel.org/git/patch-1.1-ad71faa6da-20210727T000657Z-avarab@gmail.com
avar/packfile-uri-use-error-errno-2

## Show progress output on "git bundle unbundle" + API I need for
## bundle-uri to show progress in index-pack.
##
## TODO: Junio did not pick this up for whatever reason. Re-submit
## after v2.33. I rebased it on master this time.
#
# => https://lore.kernel.org/git/cover-0.4-0000000000-20210727T004015Z-avarab@gmail.com
avar/bundle-progress-2

##########################
# Ready? but unsubmitted #
##########################

## Fix a buggy/redundant init pattern in "test-tool run-command"
avar/test-tool-run-command-buggy-init-pattern

## Add some more --verbose --verbose output to fetch-pack
avar/fetch-pack-debug-friendlier

## Move http-fetch.c over to parse_options() and clean it up.
avar/http-fetch-parse-options

## Remove the ancient code from http-fetch.c only needed to support
## git-clone.sh
##
## NEEDS: avar/http-fetch-parse-options
##
avar/http-fetch-parse-options-remove-ancient

## Free memory in various transport, http and curl related functions
##
## See avar/http-curl-transport-add-missing-free-post-wip for some
## more which segfaults, it's to do with do_take_over() and struct
## casting etc. Memory management mess.
avar/http-curl-transport-add-missing-free

## Refactor builtin/checkout.c to a better *_INIT pattern
avar/checkout-refactor-memset-to-init

## Refactor out the nasty "ln || ln -s || cp" inline installation
## scripts in the Makefile into a helper script, and fix bugs.
##
## TODO: Send the v2
##
# => https://lore.kernel.org/git/cover-0.7-00000000000-20210329T162327Z-avarab@gmail.com/
avar/makefile-ln-or-cp-script-2

## A handy strbuf utility that makes a few lines of code easier, worth
## it?
avar/strbuf-chomp

## Don't be so lazy about updating the progress bar
avar/progress-bar-more-frequent-updates

#####
##### This whole greater progress topic was initially submitted as
##### https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##### i.e. ending in 795187b3824 (entry: deal with unexpected
##### "Filtering content" total, 2021-06-23)
#####
#####
##### TODO: Maybe d7e79d9702 (avar/progress-support-old-style-usage) helps?
#####
### These are all bundled, and need each other in turn:

## Add a "global progress" variable and some prep refactoring
##
## Needs the test-mode from avar/test-progress-helper
#
# https://lore.kernel.org/git/cover-0.8-0000000000-20210722T125012Z-avarab@gmail.com
avar/global-progress

## Get rid of the "sparse" mode
##
## NEEDS: avar-szeder/progress-bar-fixes, or rather has a trivial conflict in midx.c
avar/progress-bar-remove-sparse-mode

## Make the "struct progress" be declared in progress.h, and refactor the test code.
avar/progress-make-progress-h-public-and-change-tests-code
## Change how "is it done?" is passed
avar/progress-is-done-passing
## Refactor "title" to strbuf and refactor/fix display() logic
avar/progess-strbuf-display-refactoring
## Emit progress on first signal, show "stalled"
avar/emit-progress-on-first-signal-if-stalled
## Assertions of progress.c usage,split from
## https://lore.kernel.org/git/20210620200303.2328957-1-szeder.dev@gmail.com
#avar-szeder/progress-bar-assertions
## Needs avar/emit-progress-on-first-signal-if-stalled, show spinner
## etc. on stalled progress.
#avar/wip-nodejs-like-spinner-on-stalling

## Fix the caller in entry.c which may abort its progress, but still
## wants stop_progress()
avar/stop-progress-early-fix
## Add an increment_progress() function for the common
## display_progress(progress, i + 1) cases.
##
## NEEDS: avar-szeder/progress-bar-fixes
avar/add-and-use-increment-progress-function

## TODO: Depended on now-merged avar/test-lib-various-6; Split up from
## avar/test-lib-functions-argument-checking-4
avar/test-lib-helper-file-size-split-to-file-sizes

## TODO: Was waiting on now-merged
## avar/t4018-diff-hunk-header-regex-tests-4-beginning-2, was held off
## as too large per:
##
# => https://lore.kernel.org/git/cover-00.11-00000000000-20210324T014604Z-avarab@gmail.com/
avar/t4018-diff-hunk-header-regex-tests-5

## Support creating bundles from starting points that aren't current
## refs.
##
## STACKED ON: avar/bundle-doc-generalize-6
avar/bundle-create-stdin-take-ref-names

# TODO: utility to dump header etc.
#avar/bundle-wip

## Trivial "git help" usage fixes
avar/help-builtin-usage-fixes

## Split up the user guides into guides and "formats"
##
## Needs avar/help-builtin-usage-fixes
#
avar/doc-help-split-up-guides-into-format

## Make a gitformats(5) and e.g. gitformat-bundle(5).
##
## Needs avar/doc-help-split-up-guides-into-format
avar/doc-gitformats

## Fix behavior in the .gitmodules check to not report sections in
## .gitmodules once for each key in the section.
##
## NEEDS avar/add-serve-upload-pack-protocol-tests
avar/gitmodulesdisallowed-section-names-warning-fix-2

## Refactor how protocol v2 code does init, and add an OO version of
## packet_write() called packet_writer_write_len().
avar/object-info-pkt-line-upload-pack-minor-refactoring-init

## Set GIT_TRACE_PACKET identity for ls-remote
avar/trace-ls-remote-identity

## Bundle URI design doc
##
## STACKED ON avar/add-basic-blobpackfileuri-test
#avar/bundle-uri-design-doc

## Implement uploadpack.bundleURI support for the server
##
## WAS e63f219b20a (avar/bundle-uri-server-old) before massive rebase
avar/bundle-uri-server

## Implement uploadpack.bundleURI support for the client
##
## NEEDS: avar/bundle-uri-server
avar/bundle-uri-client

## Actually implement the "clone" support (and almost incremental
## "fetch" support)
##
## Prior discussion:
##
## * Jeff King's 2011 patches:
##   https://lore.kernel.org/git/20111110074330.GA27925@sigill.intra.peff.net/
##
## * Me talking with Jonathan Tan about early packfile-uri:
##   https://lore.kernel.org/git/87k1hv6eel.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87pnpbsra8.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87zh35okzy.fsf@evledraar.gmail.com/
##
## * Discussion about early .gitmodules checks for packfile-uri:
##   https://lore.kernel.org/git/87o8hk820f.fsf@evledraar.gmail.com/
##
## NEEDS: avar/bundle-uri-client
# => https://lore.kernel.org/git/RFC-cover-00.13-0000000000-20210805T150534Z-avarab@gmail.com
avar/bundle-uri-client-clone

##############################################
# Waiting on the above (or other dependency) #
##############################################

# Make advise() always emit the config blurb at the end. Has a
# semantic conflict with es-avar/config-based-hooks-6.
#
# NEEDS: avar-ben-boeckel/refactor-advice-globals
# CONFLICTS: es-avar/config-based-hooks-6
es-avar/config-based-hooks-6-on-top-of-avar/make-advice-always-emit-config-blurb
avar/make-advice-always-emit-config-blurb

## Post-avar/files-backend-remove-dead-errno-eisdir-2, cleanup the
## builtin/reflog.c etc. code.
##
## NEEDS: avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir
avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir

## Refactor refs API users from refs_resolve_ref_unsafe() to
## refs_resolve_ref_unsafe_with_errno(). Ejected from v7 of
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-2
##
## NEEDS: avar-review/pr-git-1012/hanwen/einval-sideband-v5-2
avar/refs-change-refs_resolve_ref_unsafe-to-errno-form

## Simplify prepare_repo_settings
##
## Has a trivial conflict with current in-flight fsmonitor work (as of
## 2021-06-14). Re-roll and submit it afterwards.
#
# => https://lore.kernel.org/git/patch-1.1-e1d8c842c70-20210428T161817Z-avarab@gmail.com/
avar/repo-settings-cleanup

## Post avar/t4018-diff-hunk-header-regex-tests-5
# => https://lore.kernel.org/git/20210215155020.2804-1-avarab@gmail.com/
avar/diff-W-context-4

## Post avar/pcre2-fixes-diffcore-pickaxe-pcre-etc-4
avar/pcre2-conversion-of-diffcore-pickaxe

## Post avar/tree-walk-api-refactor-prep
avar/tree-walk-api-refactor-6
avar/tree-walk-api-canon-mode-switch

## Post avar/test-lib-various-4 and avar/t0000-lib-subtest-split-and-refactor
avar/support-test-verbose-under-prove-2

## Post avar/doc-make-lint-fixes-2
avar/doc-config-includes

## Post avar/object-as-type-simplified-3
##
## In a WIP state, see the discussion at
## https://lore.kernel.org/git/YGV8UOsYUQt7Lpto@coredump.intra.peff.net/
## and the messy branch I have here. Test case at
## https://lore.kernel.org/git/YGTGgFI19fS7Uv6I@coredump.intra.peff.net/
avar/object-is-type-error-refactor-4

## Post avar/fsck-error-on-completely-invalid-4
avar/cat-file-and-other-allow-unknown-type-refactoring

#############################################
# Work in progress, but barely passes tests #
#############################################

## Better free() behavior and general better string-list.h API. See
## avar/string-list-strmap-api-free-etc-fixes-old for some strmap
## etc. changes
avar/string-list-strmap-api-free-etc-fixes

## Clarify the "advertise" callback in serve.c. I had a WIP of
## avar/bundle-uri where I did:
##
## int bundle_uri_advertise(struct repository *r, struct strbuf *value)
## {
## 	if (!advertise_bundle_uri
## 		die(_("we support 'bundle-uri' but do not have it configured"));
## 	return advertise_bundle_uri;
## }
##
avar/serve-add-comment-about-advertise-caveat

## A WIP patch to respect NO_GETTEXT=Y in Windows CI. See
## https://lore.kernel.org/git/878s2m8ns9.fsf@evledraar.gmail.com/
avar/makefile-respect-no-gettext-in-artifacts-tar

## Optimize cat-file --batch-check, see my
## https://lore.kernel.org/git/87eecf8ork.fsf@evledraar.gmail.com/
## (this one is slightly improved)
##
avar/optimize-cat-filebatch-object-write-for-common-case

## Miscellanious designated initializer & initializer cleanup. Related
## to avar/modern-init, but they don't inter-depend.
avar/initializer-cleanup

## Make the "git remote -v" output prettier and more dense. Align the
## remote names, and don't show both "fetch" and "push" URL lines in
## the common case where they're the same.
avar/remote-prettier-show-v-output

## Build command-list.h incrementally, see
## https://lore.kernel.org/git/87r1gqxqxn.fsf@evledraar.gmail.com/
#avar/generate-cmdlist-incrementally

## Stress test the test suite under a new GC racy mode, and fix racy
## bugs.
##
## Needs to be made to pass under GIT_TEST_GC=true
## GIT_TEST_GC_AUTO_DETACH=true
##
#avar/more-gc-detach-under-lock

####################
# TODO: Categorize #
####################

avar/fsck-doc

## Will segfault on orphan + post-checkout hook (the "to" OID is null)
#avar/worktree-add-orphan
avar/sh-remove-sha1-variables
avar/format-patch-prettier-message-id
#avar/makefile-misc-crap-improved-make-clean
avar/test-lib-test-oid-to-dir

#########################################################
# Not picked up (or later ejected) by Junio, re-pursue? #
#########################################################

## Stop saying "write new commands in Perl or SH"
##
# => https://lore.kernel.org/git/patch-1.1-98b1f938f7d-20210417T122959Z-avarab@gmail.com/
avar/doc-codingguidelines-2

## Do "mv $@+ $@" for object files, so I can run "make test" while git
## builds, and AIX builds don't suck. Now on top of my
## avar/makefile-delete-on-error. Junio didn't like it:
## https://lore.kernel.org/git/xmqqmtuj6ttn.fsf@gitster.g/
avar/makefile-rename-git-binary-not-in-place-2

## TODO: Needs a v2 re-roll per https://lore.kernel.org/git/875z15kor5.fsf@evledraar.gmail.com/
## TODO@2021-05-19: Needs fsck.c and notes.c conflict resolution with master
##
## TODO@2021-07-30: Re-started and re-based a v3, not submitted yet
##
# => https://lore.kernel.org/git/cover-00.19-00000000000-20210331T190531Z-avarab@gmail.com/
avar/tree-walk-api-refactor-prep-3

## TODO: Re-roll per https://lore.kernel.org/git/87o8eogs2r.fsf@evledraar.gmail.com/ etc.
## Refactor "git config" tristate
# => https://lore.kernel.org/git/cover-0.6-0000000000-20210408T133125Z-avarab@gmail.com/
avar/git-config-bool-or-auto

## Various object.c refactoring (stacked one on top of
## another).
##
## There's a textual conflict with BMC's hash-object.c changes. See
## https://lore.kernel.org/git/87mttx121j.fsf@evledraar.gmail.com/
#

## TODO: Send a v3
#
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T124428Z-avarab@gmail.com
avar/object-api-misc-small-3

# TODO: Send a v3
#
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T125415Z-avarab@gmail.com
avar/object-api-enum-object-type-misc-3

# TODO: Send a v3
#
# => https://lore.kernel.org/git/cover-0.8-0000000000-20210420T133218Z-avarab@gmail.com
avar/object-as-type-simplified-3

## TODO: Address these and send a v4:
## => https://lore.kernel.org/git/xmqqr1it92da.fsf@gitster.g/
## => https://lore.kernel.org/git/xmqqmtth91wx.fsf@gitster.g/
##
## Use 'test -f "$@"' for argument checking
#
# => https://lore.kernel.org/git/cover-0.4-00000000000-20210423T072824Z-avarab@gmail.com
avar/test-lib-functions-argument-checking-4

################################
# Ejected by Junio, re-pursue? #
################################

## Get rid of "Alice" and "Bob" references in our documentation.
##
## "Let's shelve this one for now, as it does not seem to solve any
## real problems (other than ceasing to use Alice and Bob in contexts
## that do not call for Eve)." --
## https://lore.kernel.org/git/xmqq8s2ga19f.fsf@gitster.g
#
# => https://lore.kernel.org/git/cover-0.6-00000000000-20210615T161330Z-avarab@gmail.com
#avar/doc-get-rid-of-alice-and-bob

## Junio had avar/progress-api-use-minor~1 is in next @ 2021-07-03 and
## merged it to master @ 2021-07-09. This tip was ejected. Revisit it
## along with my other "progress" topic(s).
##
## Has a gient thread at
## https://lore.kernel.org/git/8f336b1b-6cb7-8277-79d5-0f331159b00c@gmail.com/
## about whether 2/2 was off by one or not.
avar/progress-api-use-minor-maybe-again

avar/makefile-do-not-build-fuzz-under-all
avar/test-lib-bail-out-on-accidental-prove-invocation-2
avar/lookup-object-init-to-NULL

## Not accepted per: https://lore.kernel.org/git/xmqqeeffe669.fsf@gitster.g/
##
## Declare C99 variadic macros a hard dependency
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210412T105422Z-avarab@gmail.com/
avar/variadic-macros

#################
# Ejected by me #
#################

## Less hardcoded 8192 in strbuf.c + make strbuf_fread() use a default
##
## Related to but does not interdepend on
## avar/imap-send-refactor-stdin-reading
##
## TODO: A bunch of feedback for a v2, seems to be a non-starter. Dropped it.
##
# => https://lore.kernel.org/git/cover-0.3-00000000000-20210707T103712Z-avarab@gmail.com
#avar/strbuf-hint-hardcoding-and-strbuf-fread-hint-default

## Ejected b00e7c02aee (serve.c: add call_{advertise,command}()
## indirection, 2021-06-28) and 271b4650d27 (serve: add support for a
## "startup" git_config() callback, 2021-03-24) from
## avar/transport-use-git-config-callback-5. Maybe I'll want it back?
#
#avar/transport-use-git-config-callback-4

## Adjust Makefile and config.mak.uname to stop hardcoding
## command-list.h and config-list.h; Needed for eventually adding
## hook-list.h in avar/add-hook-list-h
##
## NOTE: Created v3 to rebase on master, not sent yet (and maybe won't
## be)
##
## NOTE: Re-folded into es-avar/config-based-hooks-5, Junio wasn't
## picking it up separately.
##
# => https://lore.kernel.org/git/cover-0.3-0000000000-20210629T190137Z-avarab@gmail.com
#avar/stop-hardcoding-generated-h-3

## Add a hook-list.h source of truth, and some prep for
## es-avar/config-based-hooks-4
##
## TODO: Remove René's SOB?
## https://lore.kernel.org/git/76bd9738-65e8-3696-7934-8090b5912427@web.de/
## Junio did it already when he queued it.
##
## NOTE: Created v3 to rebase on master, not sent yet (and maybe won't
## be)
##
## NOTE: Re-folded into es-avar/config-based-hooks-5, Junio wasn't
## picking it up separately.
#
# => https://lore.kernel.org/git/cover-0.3-0000000000-20210629T183325Z-avarab@gmail.com
#avar/add-hook-list-h-3

## Adds various tests for "fetch", "ls-refs", "object-info"
## etc. etc. Used to be fetch-etc-testbasic-blobpackfileuri-test,
## that's now a part of this.
##
## TODO: Has a couple of tests in avar/test-lib-get-rid-of-packetize-3
## that could go back in.
##
## Let's have this wait for the whole bundle-uri etc. saga
#avar/add-serve-upload-pack-protocol-tests

## Don't just die() in upload-pack.c and friends, instead transmit ERR
## packets in most/all cases.
##
## See prior art (discovered after I wrote this) and discussion at:
## https://public-inbox.org/git/20190305041139.GA19800@sigill.intra.peff.net/
## and
## https://lore.kernel.org/git/20190829141307.GE1797@sigill.intra.peff.net/
##
## NEEDS avar/add-serve-upload-pack-protocol-tests, but on top of
## avar/object-info-pkt-line-upload-pack-minor-refactoring-init for
## stacking.
#avar/serve-upload-pack-protocol-error-handling

## WIP -3 of dropping old "curl" support. Ejected out of
## avar-jk/no-ancient-curl-3 per Junio's commenta about feature creep.
#avar-jk/no-ancient-curl-3-with-7.18.0-patch

## Rewrite [de]packetize() to use test-tool pkt-line instead, and
## refactor various test scripts + add a couple of more tests.
##
## The v4 of this topic dropped most of that, maybe pick it up again?
##
# => https://lore.kernel.org/git/cover-0.5-0000000000-20210714T005115Z-avarab@gmail.com
#avar/test-lib-get-rid-of-packetize-3

## The v2 version of this ejected the strftime() format attribute
## checking. See
## https://lore.kernel.org/git/cover-0.6-0000000000-20210713T080411Z-avarab@gmail.com
#avar/add-missing-format-specifiers

## Make the progress tests work under -v on a wide (or narrow, COLUMNS
## != 80) terminal
##
## Was submitted as part of the 25 patch
## https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##
## Replaced with avar/test-lib-set-columns-80 per the discussion on
## the patch.
##
# => https://lore.kernel.org/git/patch-1.1-cba5d88ca35-20210621T070114Z-avarab@gmail.com
#avar/progress-tests-80-columns

## Improve t4013 reliability
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210413T122645Z-avarab@gmail.com
avar/t4013-reliability-2

## Pick it up if I ever care about coccicheck again
# => https://lore.kernel.org/git/877dlwotjc.fsf@evledraar.gmail.com/
#avar/fix-coccicheck-4

## Folded into avar/send-email-fixes-and-speedup. Junio wasn't
## interested in it stand-alone. See
## https://lore.kernel.org/git/87a6peyfry.fsf@evledraar.gmail.com/
##
## Remove support for sendemail.smtpssl
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210411T144128Z-avarab@gmail.com/
#avar/send-email-smtp-config-minor

## The 1/2 of this was picked up, 2/2 wasn't OK'd
##
## Minor sparse-index.c fixes
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210505T121028Z-avarab@gmail.com
#avar/sparse-index-fixup

## Fix for a regression in my $remove_trash change
##
## Replaced with 560bf518923 (test-lib: avoid accidental globbing in
## match_pattern_list(), 2021-06-16)
##
# => https://lore.kernel.org/git/patch-1.1-436c723f4f8-20210616T082030Z-avarab@gmail.com
#avar/test-lib-scratch-directory

############################################
# TODO replaced by another un-landed topic #
############################################

## Don't check an enum value by doing negative comparisons in
## builtin/reflog.c. Split off from a WIP
## avar/files-backend-remove-dead-errno-eisdir-2, but then
## re-integrated
##
#avar/reflog-no-negative-comparison-against-enum

## Move raceproof_create_file() around, found it while working on
## avar-review/pr-git-1012/hanwen/einval-sideband-v5.
##
## Dropped, moved into
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-3 itself.
##
#avar/refs-backend-file-move-raceproof-create-file

############################################
# TODO (doesn't compile, fails tests etc.) #
############################################

## Log the N parents on Linux as well on Windows, WIP patch from
## http://lore.kernel.org/git/87o8agp29o.fsf@evledraar.gmail.com
##
#avar-nasamuffin/trace2-log-parent-process-name

## Should index-pack --check-self-contained-and-connected be some
## combination of --strict and --fix-thin instead? The ret = 1 return
## is used in fetch-pack.c
#avar/index-pack-connectivity-check-wip

## Post-avar/files-backend-remove-dead-errno-eisdir-2, fix up
## string-list API some more with common free patterns.

## Post-avar/tests-add-sanitize-leak-test-mode
#avar/tests-add-sanitize-leak-test-mode-wip
#avar/test-add-sanitize-leak-test-mode-ejected-progress-fix-todo

## Post-avar/git-config-bool-or-auto, fails on
## t4021-format-patch-numbered.sh
#avar/git-config-bool-or-auto-wip-enum

## Log the client-agent (and need to work on server-agent?) in serve.c
#avar/wip-agent-trace2-in-serve

#make-dot-not-HEAD-warn-3
## TODO: handle -t "some garbage" case
#avar/object-api-to-no-string-argument
#unconditional-abbrev-redo-2021-rebase
#avar/no-templates
#avar/test-lib-add-GIT_TEST_TIMEOUT-2
#avar/send-email-wip-drop-Git-pm-prereq

## Folded into avar/progress-bar-remove-sparse-mode, except for the
## last patch
#
#avar/get-rid-of-progress-special-snowflake

## My old WIP avar/bundle-uri code
#avar/bundle-uri-wip

######################
# TODO old bkng work #
######################

#reflog-expire-do-not-assert-oid-when-locking-refs
#hash-object-no-zlib
#check-collisions-config-5

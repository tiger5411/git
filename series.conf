##############################
# Other topics (not my code) #
##############################

## Derrick's ds/partial-bundle-more
##
## CONFLICTS (SEMANTICALLY): avar/add-and-use-revisions-release-3
#
# => https://lore.kernel.org/git/pull.1186.git.1647970119.gitgitgadget@gmail.com/
ds/partial-bundle-more

## A rebased-on-master version of pr-1134/neerajsi-msft/ns/batched-fsync-v4
#
# => https://lore.kernel.org/git/pull.1134.v4.git.1648514552.gitgitgadget@gmail.com/
avar-neerajsi-msft/ns/batched-fsync-v4
## My fixup on top
avar-neerajsi-msft/ns/batched-fsync-v4-fixup

## My twist to avar-ns/batched-fsync. See also downthread
## https://lore.kernel.org/git/220323.86sfr9ndpr.gmgdl@evledraar.gmail.com/
##
## NEEDS: ns/batched-fsync
##
## TODO: Some minor fixes in *-3
##
## TODO: Rebase on avar-neerajsi-msft/ns/batched-fsync-v3
##
## => https://lore.kernel.org/git/RFC-cover-v2-0.7-00000000000-20220323T140753Z-avarab@gmail.com
#avar-ns/batched-fsync-3

## Han Xin's streaming loose objects, which I stole in v10. Initial
## discussion at:
## https://lore.kernel.org/git/20211203093530.93589-1-chiyutianyi@gmail.com/
##
## The v7: https://lore.kernel.org/git/20211221115201.12120-1-chiyutianyi@gmail.com/
## The v8: https://lore.kernel.org/git/20220108085419.79682-1-chiyutianyi@gmail.com
## The v9: https://lore.kernel.org/git/20220120112114.47618-1-chiyutianyi@gmail.com/
## The v10: https://lore.kernel.org/git/cover-v10-0.6-00000000000-20220204T135538Z-avarab@gmail.com
##
## The range-diff from v10..v11:
##
##     git range-diff avar/object-file-object-type-2..han-xin-avar/unpack-loose-object-streaming-10 origin/master..han-xin-avar/unpack-loose-object-streaming-11
#
# => https://lore.kernel.org/git/cover-v12-0.8-00000000000-20220329T135446Z-avarab@gmail.com
han-xin-avar/unpack-loose-object-streaming-12

## Emily's submodule cache thing (https://github.com/nasamuffin/git/actions/runs/1469463328)
##
## CONFLICTS WITH: avar/ci-unroll-make-commands-to-ci-recipe, ejeceted
##
# => https://lore.kernel.org/git/20211117005701.371808-1-emilyshaffer@google.com/
#nasamuffin/submodule-detection-v6
## My RFC on top
##
## CONFLICTS WITH: See above
#
# => https://lore.kernel.org/git/RFC-cover-0.2-00000000000-20211117T113134Z-avarab@gmail.com
#avar-nasamuffin/submodule-detection

#########################################################
# Has a "Will merge to 'master'" note in What's Cooking #
#########################################################

## add and use the test_hook wrapper
##
## <s>TODO: A v4 (but maybe Junio fixes it up?): </s>UPDATE: Seems he did!
#
# => https://lore.kernel.org/git/cover-v3-00.13-00000000000-20220317T100820Z-avarab@gmail.com
avar/test-add-test_hook-wrapper-4

## Have "--immediate" not ruin the TAP output
#
# => https://lore.kernel.org/patch-1.1-47b236139e6-20220323T204410Z-avarab@gmail.com
avar/test-lib-emit-valid-TAP-on-immediate-failure

## Finish up the parse_options() migration of reflog.c that's in
## "master" already. Conflicts with outstanding stuff from John Cai.
##
## The 8d0eb17bca6 (reflog expire: remove -$(printf "\01") synonym for
## --single-worktree, 2022-01-14) was cherry-picked into
## avar/parse-options-sanity-and-validation
##
## INCLUDES: avar/reflog-c-indent-argument-lists
##
## <s>TODO: A minor v2</s> was merged to next already, but check out
## https://lore.kernel.org/git/xmqqczikcasz.fsf@gitster.g/ &
## https://lore.kernel.org/git/xmqq35jgcail.fsf@gitster.g/ &
## https://lore.kernel.org/git/xmqqy218av2s.fsf@gitster.g/ for
## follow-ups?
#
# => https://lore.kernel.org/git/cover-0.8-00000000000-20220317T180439Z-avarab@gmail.com
avar/reflog-parse-options-fixes

## A small fix for a leftover wspfx_SQ variable
#
# => https://lore.kernel.org/git/patch-1.1-05949221e3f-20220319T002715Z-avarab@gmail.com
avar/Makefile-wspfx_SQ-fix-up

## A bug in my just-landed TOCTOU topic :(
#
# => https://lore.kernel.org/git/patch-1.1-d0c9b430b2c-20220321T230933Z-avarab@gmail.com
avar/fix-TOCTOU-bug-unused-run-commit-hook

############################
# Merged to 'next' already #
############################

## Portability fix for xlc on gcc111
#
# => https://lore.kernel.org/git/patch-1.1-98267695418-20220328T190642Z-avarab@gmail.com
avar/AIX-71-xlc-portability

## A fix-up for ds/partial-bundle-more
##
## NEEDS: ds/partial-bundle-more
## FIXES (SEMANTIC) CONFLICT: avar/add-and-use-revisions-release-3
#
# => https://lore.kernel.org/git/patch-v2-1.1-9951d92176e-20220328T154049Z-avarab@gmail.com
avar-ds/partial-bundle-more-fixup-2

#######################################################
# Has a "Will merge to 'next'" note in What's Cooking #
#######################################################

#############################################################################
# Proposed for 'next' (has a "Will merge to 'next'?" note in What's Cooking #
#############################################################################

#####################################################
# Has a "Expecting a reroll" note in What's Cooking #
#####################################################

#####################################################################
# Most active -- Things I'm actively pursuing & have been submitted #
#####################################################################

## Makefile: Fix Perl and Python rules, unify
##
## TODOO Ejected: bb168df2b74 (Makefile: stop needing @@GIT_VERSION@@
## in *.perl scripts, 2021-10-19)
##
## SPLIT FROM: avar/Makefile-perl-python-shell-quote-various-fixes-5
##
## PICKED UP: No, sent a reminder at 2022-02-21
##
## REBASING: v2
#
# => https://lore.kernel.org/git/cover-00.11-00000000000-20211217T002023Z-avarab@gmail.com
avar/Makefile-perl-python-rules-fixes-2

## Fix a warning new in GCC 12.0
##
## PICKED UP: Yes
##
# => https://lore.kernel.org/git/patch-v3-1.1-69190804c67-20220325T143322Z-avarab@gmail.com
avar/gcc-12.0-warning-slot-finished-dangling-pointer-3

## The greater variadic macros topic. SUBMITTED IN STACKED PIECES. All
## quoted here for convenience.
##
## Add and use a non-fatal bug() function for existing (and new) cases
## of a deferred BUG().
##
## INCLUDES: avar/usage-add-bug-use-for-optbug (never submitted stand-alone)
##
## WAS STACKED ON: avar/usage-misc-small-fixes (TODO: Re-home that topic?)
avar/add-and-use-non-fatal-bug-and-BUG-if-bug
## Refactor usage.c related code, add a usage.h. In preparation for
## the below.
##
## TODO?: I've had various linker errors in my personal build due to
## changes like this that split-out things from git-compat-util.h. The
## root cause is that e.g. pager.c needs die(), but the updated
## ".depend/pager.o.d" will only list usage.h, not usage.c
##
## So when a symbol changes or whatever due to usage.c changing the
## dependant files aren't re-generated?
##
## INCLUDES: avar/usage-misc-small-fixes, which was previously
## submitted as
## https://lore.kernel.org/git/patch-1.1-7551daf131b-20220221T160719Z-avarab@gmail.com
##
## NEEDS: avar/add-and-use-non-fatal-bug-and-BUG-if-bug
avar/usage-api-split-into-own-file-api-docs-and-refactor
## Now that we hard-depend on variadic macros, we can emit meaningful
## file/line numbers in trace2 events.
##
## This whole greater series was originally submitted as an RFC. Split
## it up to trickle it in incrementally.
##
## ORIGINAL RFC: avar/usage-hard-dep-variadic-macros-die-message-and-BUG-fixes
## ORIGINAL RFC URL: https://lore.kernel.org/git/RFC-cover-00.21-00000000000-20211115T220831Z-avarab@gmail.com
avar/use-c99-macros-for-usage-functions
## NEEDS: avar/use-c99-macros-for-usage-functions
avar/usage-api-make-translatable
## NEEDS: avar/usage-api-make-translatable
## REPLACES: avar/usage-hard-dep-variadic-macros-die-message-and-BUG-fixes-2
avar/usage-api-add-core-usageAddSource-config
## TODO?: Have a WIP version to use the strbuf API at
## avar/usage-hard-dep-variadic-macros-die-message-and-BUG-fixes-wip-with-strbuf,
## needs to be made malloc() failure safe, proably not worth it.

## Make a couple of tests in builtin/commit.c pass, and remove two UNLEAK()
##
## PICKED UP: Yes, "expecting a re-roll":
## https://lore.kernel.org/git/xmqqczjbj0nf.fsf@gitster.g/
##
## PICKED UP: Yes, "Expecting a reroll. I think
## UNLEAK->strbuf_release() is a regression."
##
## REBASING: v2
#
# => https://lore.kernel.org/git/cover-0.2-00000000000-20220216T081844Z-avarab@gmail.com
avar/leak-fixes-builtin-commit-2

## Change the ci/ and .github/workflows/main.yml to set variables via
## the GitHub CI mechanism before steps, and make the steps just be
## "make", "make test" etc. without needing to invoke ci/lib.sh every
## time.
##
## This gives an alternate approach to the more complex "grouping"
## that Johannes implemented in
## https://lore.kernel.org/git/pull.1117.git.1643050574.gitgitgadget@gmail.com/
##
## INCLUDES: avar/ci-more-dead-travis-code
## INCLUDES (partially): avar/ci-remove-azure-pipelines-2
##
## PICKED UP: Yes, "needs review" @ 2022-03-29
##
## NOTE: Old "build fail" branches: avar/ci-unroll-make-commands-to-ci-recipe-FAIL-BUILD & dscho/use-grouping-in-ci-v1-FAIL-BUILD
##
## REBASING: 3
#
# => https://lore.kernel.org/git/cover-v2-00.25-00000000000-20220325T182534Z-avarab@gmail.com
avar/ci-unroll-make-commands-to-ci-recipe-3
# avar/ci-unroll-make-commands-to-ci-recipe-FAIL-TEST

## A version of pr-1117/dscho/use-grouping-in-ci-v2 rebased on top of
## my avar/ci-unroll-make-commands-to-ci-recipe-2
##
## NEEDS: avar/ci-unroll-make-commands-to-ci-recipe-2
##
## PICKED UP: Yes, "needs review" @ 2022-03-29
##
## REBASING: 2
#
# => https://lore.kernel.org/git/RFC-cover-v3-0.6-00000000000-20220325T183946Z-avarab@gmail.com
avar-dscho/use-grouping-in-ci-v2-2
## Cherry-picks on top for demo-ing the output:
# avar-dscho/use-grouping-in-ci-v2-FAIL-TEST
## Johannes's original code (rebased on master)
# avar-pr-1117/dscho/use-grouping-in-ci-v2
## Johannes's original code (rebased on master) with FAIL TEST
# avar-pr-1117/dscho/use-grouping-in-ci-v2-FAIL-TEST

## Implement my plan in
## https://lore.kernel.org/git/87tuhmk19c.fsf@evledraar.gmail.com/ of
## having a less shitty "test_expect_failure", and convert some tests
## over to that more precise assertion.
##
## TODO: A v2?
#
# => https://lore.kernel.org/git/cover-0.7-00000000000-20220318T002951Z-avarab@gmail.com
avar/add-a-better-test_expect_failure
# TODO: wip-avar/add-a-better-test_expect_failure-2

## Remove the SHA1 PPC implementation
##
## NEEDS: avar/Makefile-wspfx_SQ-fix-up
#
# => https://lore.kernel.org/git/patch-v2-1.1-e77fd23a824-20220321T170412Z-avarab@gmail.com
avar/remove-sha1-ppc-asm-2

## Mark up those tests on "master" that need a
## TEST_PASSES_SANITIZE_LEAK=true
##
## STACKED ON: avar/test-lib-emit-valid-TAP-on-immediate-failure
##
## REBASING: 2
#
# => https://lore.kernel.org/git/patch-1.1-45f76fbd8c5-20220323T203725Z-avarab@gmail.com
avar/master-mark-tests-as-TEST_PASSES_SANITIZE_LEAK-eq-true-2

## Remove various dead code
## INCLUDES:
##
##  ## A cleanup of xdiff's XDL_PTRFREE
##  avar/remove-unused-XDL_PTRFREE
##
##  ## A cleanup of unused bitmap reset function
##  avar/remove-unused-bitmap-reset
##
##  ## A cleanup of unused code that someone might complain about
##  avar/remove-unused-code-but-maybe-someone-cares
##
##  ## A cleanup of has_sha1_file()
##  avar/remove-unused-has_sha1_file
##  avar/remove-various-dead-code
##
#
# => https://lore.kernel.org/git/cover-v3-0.7-00000000000-20220326T171200Z-avarab@gmail.com
avar/remove-various-dead-code-3

## Replace check-builtins and the static part of check-docs with
## t0012-help.sh checks
#
# => https://lore.kernel.org/git/patch-1.1-4a5d219dfe7-20220327T131751Z-avarab@gmail.com
avar/Makefile-replace-old-ad-hoc-check

##########################
# Ready? but unsubmitted #
##########################

## A bug in my just-landed TOCTOU topic, but now with a CI check that
## would have caught it.
##
## NEEDS: avar/fix-TOCTOU-bug-unused-run-commit-hook
avar/fix-TOCTOU-bug-unused-run-commit-hook-with-ci

## Make t/Makefile faster by removing "check-chainlint" fixed-cost in
## favor of proper Makefile dependencies.
##
## WAS WAITING ON:
## avar/Makefile-perl-python-shell-quote-various-fixes-4 and then
## avar/Makefile-add-shared-mak-centralize-QUOTE-add-mkdir-p-3 (for
## using the "mkdir" trick)
#
# => https://lore.kernel.org/git/RFC-patch-1.1-bb3f1577829-20211213T095456Z-avarab@gmail.com/
avar/t-Makefile-use-dependency-graph-for-check-chainlint

## Make a advice-list.h
##
## REPLACES: avar/advice-basic-api-cleanups-2 (range-diff to that one
## on submission)
##
## NEEDS: avar/remove-sha1-ppc-asm
avar/generate-advice-h-add-missing-docs

## Make git-imap-send hard depend on libcurl, removes a special-case
## (and unconditional shell-out!) in the Makefile.
avar/git-imap-send-curl-only
avar/git-imap-send-curl-only-plus-avar/parse-options-sanity-and-validation

## Make IBM XLC not fail whale on DEVELOPER=1
avar/support-DEVELOPER-with-xlc

## Split up the user guides into guides and "userformats" and
## "gitformats". On top of the trivial
## tz/doc-link-to-bundle-format-fix.
##
## PICKED UP: NO
##
## TODO: Submit the v3; Was waiting on
## avar/help-doc-tests-and-output-whitespace to graduate.
##
# => https://lore.kernel.org/git/cover-v2-0.5-00000000000-20211212T194047Z-avarab@gmail.com
avar/doc-help-split-up-guides-into-format-3

## The most obscure overflow change ever, handle possible 2^32 overlow
## in gettext.h
##
## I suggested this in
## https://lore.kernel.org/git/220307.86wnh5zwe0.gmgdl@evledraar.gmail.com/
avar/gettext-h-cast-n-to-ngettext

## Don't have test_cmp_config be so sloppy
avar/test-cmp-config-use-get-all

## A bit of grep.[ch] cleanup post now-landed
## avar/drop-grep-prefix-length-12.
avar/grep-post-drop-prefix-cleanup

## Delete an optimization that's only needed for PCREv2 pre-10.30
##
## NEEDS: avar/grep-post-drop-prefix-cleanup
avar/grep-delete-pcre2-pre-10-30-code

## Add a REV_INFO_INIT for the revisions API
##
## NEEDS: avar/grep-post-drop-prefix-cleanup
avar/revisions-add-REV_INFO_INIT

## Since avar/global-progress-8 we didn't quite get to the "global
## progress" part of that topic. This is the one commi that was peeled
## off from -7..8.
avar/add-global-progress-bug

## Convert pickaxe to use PCRE. Needed now-landed
## avar/drop-grep-prefix-length-12
avar/pcre2-conversion-of-diffcore-pickaxe

## Start nuking test_i18ngrep, doing only those files that have 1..10
## occurances of it, one commit at a time.
avar/nuke-test_i18ngrep
avar/nuke-test_i18ngrep-again

## Prepare the tests for the avar/test-no-templates topic, add a
## "test_hook" helper, and get rid of various implicit dependencies on
## .git/<dir>.
##
## NEEDS (or STACKED ON?): avar/test-add-test_hook-wrapper
avar/test-refactor-for-no-templates
## HOTFIX: Merging avar/support-test-verbose-under-prove-2 below
## conflicts with avar/test-refactor-for-no-templates, but not if
## avar/test-no-templates-2 is on top of it, which I'll do eventually
## anyway...
avar/test-no-templates-2

## Use error_errno() in config.c API
avar/git-config-use-error-errno

## Make SunCC happier when compiling the code by fixing its
## preventable compiler whining.
##
## This was originally avar/v2.35.0-compiler-complaints, a part of
## which made it during the v2.35.0-rc* period. For that
## submission/discussion:
## https://lore.kernel.org/git/cover-0.3-00000000000-20220111T163908Z-avarab@gmail.com
avar/suncc-compiler-complaints

## Remove OPT_ALIAS(), drop other dead code. Sort out "help" for
## OPT_HIDDEN_*(), add more OPT_HIDDEN_*(). Remove OPTION_BITOP().
##
## INCLUDES: avar/parse-options-no-alias
## INCLUDES: avar/parse-options-remove-pointless-help-param-for-opt-hidden
## INCLUDES: avar/parse-options-add-long-name-duplicate-check
## INCLUDES: avar/parse-options-more-narrow-abbreviation-disallow
## INCLUDES: avar/parse-options-ambiguous-option-error
##
##
## Includes avar/parse-options-more-narrow-abbreviation-disallow whith
## is to "make the disallowing of abbreviation more narrow. Cleaned up
## version of a reply to Linus at
## https://lore.kernel.org/git/220311.867d90j2vj.gmgdl@evledraar.gmail.com/",
## and which was submitted already as
## https://lore.kernel.org/git/patch-1.1-d2ae423d1ad-20220311T094315Z-avarab@gmail.com
## (but not picked up).
avar/parse-options-sanity-and-validation

## The successor to the now-landed
## avar/dead-git-sh-setup-code-and-move-to-last-users-4. In
## avar/dead-git-sh-setup-code-and-move-to-last-users-2 I ejected
## these, rebased & ready for submission.
##
## See https://lore.kernel.org/git/87tuiwjfvi.fsf@evledraar.gmail.com/
## for where it left off.
avar/cleanup-more-dead-sh-setup-code-or-move-to-its-last-users

## Remove the "return_block" from the "struct
## reftable_block_source_vtable" in favor of using free()
avar/reftable-remove-return_block-abstraction

## Add new SANITIZE=leak modes: GIT_TEST_PASSING_SANITIZE_LEAK=check
##
## NOTE: I ejected 03d85e21951 (leak tests: mark remaining leak-free
## tests as such, 2021-12-17)
##
## NEEDS: avar/test-lib-emit-valid-TAP-on-immediate-failure
avar/add-new-sanitize-leak-test-modes

## Makefile: Add the "TRACK" template, do shell escaping via functions
##
## SPLIT FROM: avar/Makefile-perl-python-shell-quote-various-fixes-5
avar/Makefile-add-TRACK_template-do-shell-escaping-via-functions

## Do what I suggested in
## https://lore.kernel.org/git/211111.86tugjpn1x.gmgdl@evledraar.gmail.com/
avar/redo-url-redacted

## Clean up an ancient comment in configure.ac whose corresponding
## code was removed in 2006.
##
## INCLUDED IN: avar/remove-various-dead-code-3
avar/remove-USE_PIC-comment

## Minor API doc fix for strvec.h
avar/strvec-api-items-to-v-doc-fix

## Fix -h edge cases in grep, show-ref and ls-remote
##
## TODO: This is completely broken, *-2 should address it
##
## NOTE: A v1 of this was submitted as
## https://lore.kernel.org/git/cover-0.3-00000000000-20210924T164820Z-avarab@gmail.com,
## but this is a complete rewrite to that buggy approach.
##
## A v2 of this at avar/parse-options-h-2 was never submitted, but
## went on top of avar/usage-api-add-core-usageAddSource-config
##
## NEEDS: avar/parse-options-sanity-and-validation
## STACKED ON: avar/parse-options-add-long-name-duplicate-check
## PARTIALLY USURPED BY: avar/parse-options-sanity-and-validation (the rev-parse flag)
##
avar/parse-options-h-3

## Add a "CONFIGURATION" section with includes from config/**.txt
##
## NOTE: Not really "ready", needs better commit messages/rebasing,
## but no longer blocked on anything.
avar/doc-config-includes

## Slim down git-sh-setup by moving one-use-not-documented functions to their users
avar/slim-down-one-use-git-sh-setup-functions-move-to-their-users

## Add the ability to test the --color output of test-lib.sh, and add
## some minor improvements of its output.
avar/test-lib-color-tests-and-minor-improvements

## More color and output improvements for test-lib.sh, and eventually
## pass all TAP output through a new "tee" helper for validation.
##
## NEEDS: avar/test-lib-color-tests-and-minor-improvements
## CONFLICTS: A *lot*, eject it for now
#avar/support-test-verbose-under-prove-2
## Hotfix for "#\tfalse" v.s. new "#false" in output
#avar/add-a-better-test_expect_failure-plus-avar/support-test-verbose-under-prove-2
#avar/add-new-sanitize-leak-test-modes-plus-avar/support-test-verbose-under-prove-2

## Get rid of the test-lib-functions.sh "test_file_size" function in
## favor of using a helper directly, and make glob patterns that want
## N or 1 file size clearer.
avar/test-lib-helper-file-size-split-to-file-sizes

## Have cat-file support a verb mode like upload-pack by stealing its
## code.
##
## NOTE: John Cai's version of this REPLACES this one. See
## https://lore.kernel.org/git/pull.1212.v3.git.git.1644353884.gitgitgadget@gmail.com/
#
#avar/cat-file-stdin-cmd-mode

## Fix some things with APIs introduced in
## avar/cat-file-usage-and-options-handling.
##
## NEEDS: avar/cat-file-usage-and-options-handling
#avar/post-cat-file-usage-refactor

## Refactor cache-tree.[ch] to return an enum and de-dupe/reword some
## errors.
##
## NEEDS: avar/double-error-on-permissions-cache-tree
avar/refactor-cache-tree-to-use-enum-and-normalize-messaging

## Don't emit permission errors (e.g. in /etc/ on vm.nix.is) twice
avar/grep-double-error

## Document the CC variable at the top of the Makefile
avar/Makefile-document-CC-variable

## Implement "git --config-key foo.bar --config-value value <cmd>"
avar/git-config-key-value-params

## Refactor object* related code into its own split-up headers/files
## for legibility, and then add and use a "struct object_list" (used
## to be "struct object_array_bare", hence the branch name).
avar/object-file-and-header-move-around-add-object-array-bare

## Refactor packfile.h a bit for consistency with
## avar/fsck-error-on-completely-invalid-7 changes.
##
## Doesn't conflict now, but maybe also pick up 5b9278e7bb4 (cache.h:
## move object functions to object-store.h, 2021-03-27) from
## avar/fsck-error-on-completely-invalid-6
avar/move-for-each-object-flags-to-packfile-h

## Add a test mode for a bash "set -o pipefail" mode. See
## https://lore.kernel.org/git/20210120130447.GB8396@szeder.dev/ for
## the initial submission.
##
## This patch was in avar/tests-add-bash-pipefail-mode-2, but was
## split off from avar/tests-add-bash-pipefail-mode-3, which landed as
## 2c873f97913 (Merge branch 'ab/tests-various-fixup', 2021-02-12)
##
avar/tests-add-bash-set-o-pipefail-mode-restart

## A stray cleanup of strvec_push() return value in environment.c
avar/strvec-use-push-return-value

## Further strvec.[ch] API fixes, change it to use size_t. See
## https://lore.kernel.org/git/87v93i8svd.fsf@evledraar.gmail.com/ and
## http://lore.kernel.org/git/87o88z82pc.fsf@evledraar.gmail.com
##
## Jeff King submitted this in
## https://lore.kernel.org/git/YTzEvLHWcfuD20x4@coredump.intra.peff.net/
##
## I then submitted a proposed v2:
#
# => https://lore.kernel.org/git/cover-v2-0.7-00000000000-20210912T001420Z-avarab@gmail.com
avar-jk/strvec-as-size-t-not-int

## Add and use a parse-options.c PARSE_OPT_ERROR_AT_NON_OPTION flag.
##
## Waiting on tb/commit-graph-usage-fix, was waiting on
## lh/systemd-timers, but that landed and I did the fixup
##
## NEEDS: avar/parse-options-h-3
avar/parse-options-add-and-use-error-at-non-option-flag

## WIP: Remove teh "help" for hidden options, it's pointless.
##
## Needs "avar/parse-options-add-and-use-error-at-non-option-flag"
## since it needs to deal with rev-parse --parseopt, see "|hidden1* A
## hidden switch" test case.
##
## NEEDS: avar/parse-options-add-and-use-error-at-non-option-flag
#avar/parse-options-remove-pointless-help-param-for-opt-hidden

## Change the --range-diff --creation-factor for format-patch to 100,
## up from 60.
avar/range-diff-creation-factor-for-format-patch

## Fix a memory leak in builtin/repack.c
##
## TODO: Has failures in t0410-partial-clone.sh etc.
#avar/repack-plug-memory-leak

## Fix a memory leak in builtin/show-branch.c
##
## TODO: Has failures in t3202-show-branch.sh
#avar/show-branch-plug-memory-leak

## Refactor format-patch tests a bit to make them more readable
avar/format-patch-test-prep

## Change strvec.[ch] to expose strvec_push_nodup()
avar/strvec-expose-strvec_push_nodup

## Add some more --verbose --verbose output to fetch-pack
avar/fetch-pack-debug-friendlier

## Move http-fetch.c over to parse_options() and clean it up.
avar/http-fetch-parse-options

## Remove the ancient code from http-fetch.c only needed to support
## git-clone.sh
##
## NEEDS: avar/http-fetch-parse-options
##
avar/http-fetch-parse-options-remove-ancient

## Refactor builtin/checkout.c to a better *_INIT pattern
avar/checkout-refactor-memset-to-init

## Refactor out the nasty "ln || ln -s || cp" inline installation
## scripts in the Makefile into a helper script, and fix bugs.
##
## TODO: Send the v2
##
# => https://lore.kernel.org/git/cover-0.7-00000000000-20210329T162327Z-avarab@gmail.com/
avar/makefile-ln-or-cp-script-2

## A handy strbuf utility that makes a few lines of code easier, worth
## it?
avar/strbuf-chomp

## Don't be so lazy about updating the progress bar
avar/progress-bar-more-frequent-updates

#####
##### This whole greater progress topic was initially submitted as
##### https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##### i.e. ending in 795187b3824 (entry: deal with unexpected
##### "Filtering content" total, 2021-06-23)
#####
#####
##### TODO: Maybe d7e79d9702 (avar/progress-support-old-style-usage) helps?
#####
### These are all bundled, and need each other in turn:

## Get rid of the "sparse" mode
##
## STACKED ON: avar/add-global-progress-bug
avar/progress-bar-remove-sparse-mode

## Make the "struct progress" be declared in progress.h, and refactor the test code.
avar/progress-make-progress-h-public-and-change-tests-code
## Change how "is it done?" is passed
avar/progress-is-done-passing
## Refactor "title" to strbuf and refactor/fix display() logic
avar/progess-strbuf-display-refactoring
## Emit progress on first signal, show "stalled"
avar/emit-progress-on-first-signal-if-stalled
## Assertions of progress.c usage,split from
## https://lore.kernel.org/git/20210620200303.2328957-1-szeder.dev@gmail.com
#avar-szeder/progress-bar-assertions
## Needs avar/emit-progress-on-first-signal-if-stalled, show spinner
## etc. on stalled progress.
#avar/wip-nodejs-like-spinner-on-stalling

## Fix the caller in entry.c which may abort its progress, but still
## wants stop_progress()
avar/stop-progress-early-fix
## Add an increment_progress() function for the common
## display_progress(progress, i + 1) cases.
##
## NEEDS: avar-szeder/progress-bar-fixes
avar/add-and-use-increment-progress-function

## TODO: Was waiting on now-merged
## avar/t4018-diff-hunk-header-regex-tests-4-beginning-2, was held off
## as too large per:
##
# => https://lore.kernel.org/git/cover-00.11-00000000000-20210324T014604Z-avarab@gmail.com/
avar/t4018-diff-hunk-header-regex-tests-5

# TODO: utility to dump header etc.
#avar/bundle-wip

## Fix behavior in the .gitmodules check to not report sections in
## .gitmodules once for each key in the section.
##
## NEEDS avar/add-serve-upload-pack-protocol-tests
avar/gitmodulesdisallowed-section-names-warning-fix-2

## Refactor how protocol v2 code does init, and add an OO version of
## packet_write() called packet_writer_write_len().
##
## STACKED ON: avar-jk/reduce-malloc-in-v2-servers
##
## BUG Failing tests, 9ab8e40185c (ls-refs: move to "struct
## packet_writer" API, 2021-07-05) is the first bad commit!
#avar/object-info-pkt-line-upload-pack-minor-refactoring-init

## Actually implement the "clone" support (and almost incremental
## "fetch" support)
##
## Prior discussion:
##
## * Jeff King's 2011 patches:
##   https://lore.kernel.org/git/20111110074330.GA27925@sigill.intra.peff.net/
##
## * Me talking with Jonathan Tan about early packfile-uri:
##   https://lore.kernel.org/git/87k1hv6eel.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87pnpbsra8.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87zh35okzy.fsf@evledraar.gmail.com/
##
## * Discussion about early .gitmodules checks for packfile-uri:
##   https://lore.kernel.org/git/87o8hk820f.fsf@evledraar.gmail.com/
##
## * The February 2022 RFC by Stolee:
##   https://lore.kernel.org/git/pull.1160.git.1645641063.gitgitgadget@gmail.com/
##
##   + d684c84e6b6...cdc81b2160e bundle/clone           -> derrickstolee/*  (forced update)
##   + 425b5b689a9...42d351f4aae bundle/fetch           -> derrickstolee/*  (forced update)
##   + 9187254d876...a2d64f369d0 bundle/rfc             -> derrickstolee/*  (forced update)
##
## NOTE: Started big change around 2021-11-04, tagged as
## avar/bundle-uri-client-clone-2021-11-04.
##
## NOTE: Another pre-consolidation (March 2022) tip was f462ba84c84
## (make the bundle downloading program configurable, 2021-11-05)
##
## CONTAINS: avar/bundle-uri-client
## CONTAINS: avar/bundle-uri-server-2
## CONTAINS: avar/bundle-verify-api
# => https://lore.kernel.org/git/RFC-cover-00.13-0000000000-20210805T150534Z-avarab@gmail.com
#
# => https://lore.kernel.org/git/RFC-cover-v2-00.13-00000000000-20220311T155841Z-avarab@gmail.com
avar/bundle-uri-client-clone
## TODO: Doesn't handle the lazyness quite correctly, e.g. giving it
## 2x bundles for a "clone" when one is needed.
#avar/bundle-uri-client-incremental

## WIP fetch/bundle header reader etc.
#avar/bundle-uri-client-incremental-fetch

###############################################################################
# Submitted but not picked up by Junio (after a while). Re-submit or re-roll? #
###############################################################################

## Add a "git [clone|init] --no-template" option, and a
## GIT_NO_TEMPLATE_DIR=true setting and run the tests with it.
##
## TODO: I submitted a v1 of this which wasn't based on
## avar/test-refactor-for-no-templates, submit that topic, and then
## submit a v2 of this one.
##
## NEEDS: avar/test-refactor-for-no-templates
##
## REBASING: v2
#
# => https://lore.kernel.org/git/cover-00.13-00000000000-20211212T201308Z-avarab@gmail.com
avar/test-no-templates-2

## Remove the dead code supporting CI via Azure Pipelines
##
## STACKED ON: avar/perl-fix-ignored-abort-in-cmd-close
##
## REBASING: v2
##
## PARTIALLY ROLLED INTO: avar/ci-unroll-make-commands-to-ci-recipe
#
# => https://lore.kernel.org/git/patch-1.1-eec0a8c3164-20211217T000418Z-avarab@gmail.com
#avar/ci-remove-azure-pipelines-2

## The range-diff command will segfault on e.g.:
##
##     GIT_PROGRESS_DELAY=0 ~/g/git/git -P --exec-path=$PWD range-diff --progress --creation-factor=100 origin/master...git-for-windows/main
##
## Narrowly fix that segfault. I have the WIP
## avar/string-list-overflow-range-diff with a tangle of doing
## progress output etc.
##
## Submitted as an RFC due to the rationale (last couple of
## paragraphs) in the CL.
##
## PICKED UP: No, RFC
##
## TODO: Re-submit. Now that avar/string-list-use-size_t-for-nr has
## landed make sense of how the string_list size_t fits into this. See
## 9e50ee5e2c6 (range-diff.c: use "size_t" to refer to "struct
## string_list"'s "nr", 2021-12-02) for the previous version.
##
## REBASING: v3
#
# https://lore.kernel.org/git/RFC-cover-v2-0.5-00000000000-20211210T122901Z-avarab@gmail.com
avar/range-diff-int-overflow-segfault-3

## Remove the "untracable" mode for test-lib.sh: TODO: There are still
## tests (and were before) that fail with -x, but not --verbose-log. See:
##
##    make -j1 -C t GIT_TEST_OPTS=-x DEFAULT_TEST_TARGET=test
##
## UPDATE: Only one, I think:
## https://lore.kernel.org/git/211125.86pmqoifp8.gmgdl@evledraar.gmail.com/
##
## UPDATE@2022-02-21: Has been sitting on-list for a while, sent a
## reminder in
## https://lore.kernel.org/git/220221.86v8x89ebo.gmgdl@evledraar.gmail.com
#
# => https://lore.kernel.org/git/cover-v4-0.3-00000000000-20211213T013559Z-avarab@gmail.com
#avar/test-lib-remove-test-untracable-4

## A restart of avar-dscho/scalar-the-beginning-normalize-Makefile on
## upstream, without depending on various Makfile crap I had going.
##
## NOTE: v2 unsubmitted, rebased on
## https://lore.kernel.org/git/pull.1005.v7.git.1637158762.gitgitgadget@gmail.com/
##
## NOTE: Rebased on origin/master with landed js/scalar
#
# => https://lore.kernel.org/git/patch-1.1-86fb8d56307-20211028T185016Z-avarab@gmail.com
avar/scalar-move-build-from-contrib-2

## fetch-negotiator: don't annoyingly segfault on API misuse
##
## OUTSTANDING: Not picked up, poked Junio at
## https://lore.kernel.org/git/87v93wflm0.fsf@evledraar.gmail.com and
## @ 2021-09-09 at
## https://lore.kernel.org/git/87fsuedl5x.fsf@evledraar.gmail.com
##
# => https://lore.kernel.org/git/patch-1.1-f1da49de63-20210727T000203Z-avarab@gmail.com
avar/fetch-negotiator-bug-not-segfault-on-api-misuse
#WIP: avar/fetch-negotiator-various-fixes

## Emit stray http.c error with error_errno()
##
## OUTSTANDING: Not picked up, poked Junio at
## https://lore.kernel.org/git/87v93wflm0.fsf@evledraar.gmail.com and
## @ 2021-09-09 at
## https://lore.kernel.org/git/87fsuedl5x.fsf@evledraar.gmail.com
##
# => https://lore.kernel.org/git/patch-1.1-ad71faa6da-20210727T000657Z-avarab@gmail.com
avar/packfile-uri-use-error-errno-2

#####################################################
# Waiting on a cooking series (or other dependency) #
#####################################################

## Sort builtin.h, and check that it's sorted.
##
## NEEDS: avar/generate-advice-h-add-missing-docs
avar/builtin-h-check-sorted

## Support creating bundles from starting points that aren't current
## refs. Previously depended on
## avar/setup-revisions-stdin-parsing-api-6
##
## TODO: Fixed the memory leaks, but now the branch is full of WIP
## crap!
##
## TODO: 2021-11-12: This is one of the main piles of mess...
##
## STACKED ON: avar/bundle-verify-api
##
## CONFLICTS: avar-derrickstolee/bundle/partial
#avar/bundle-create-stdin-take-ref-names

## WIP: Refactor revision.c itself to not need various "object_array"
## things (e.g. slobuf), make inroad for "object_array_bare".
##
## STACKED ON: avar/bundle-create-stdin-take-ref-names
#avar/revision-object-array-refactor

## A small "static" helper to reduce some repetitive code in
## trace2/tr2_tgt_perf.c; See
## https://lore.kernel.org/git/211220.86czlrurm6.gmgdl@evledraar.gmail.com/
avar/trace2-tr2_tgt_perf-add-fmt-helper

## Improve the progress output for "git reflog", including not seeming
## to stall when invoked by "git gc"
##
## TODO: Rebase on avar/reflog-parse-options-fixes
## NEEDS: avar/reflog-parse-options-fixes
#avar/reflog-add-progress-and-do-not-stall-on-progress

## Follow-up on my avar/run-command-h-itself-use-args-not-argv-3 and
## rename "env" to "env_array".
##
## Mentioned in
## https://lore.kernel.org/git/211216.868rwkbv1b.gmgdl@evledraar.gmail.com/
##
## COMMENTED-OUT: Painful local dependency resolutions, skipping it for now.
avar/cocci-child_process-env_array-to-env

## FIXUP avar/serve-api-refactoring + avar/bundle-uri-client-clone
avar/serve-api-refactoring-plus-avar/bundle-uri-client-clone
## Refactor serve.c some more, fix various bugs
##
## Used to be on top of bundle-uri, so that one has more validations +
## a merge: c1d3c3dcff6 (serve API: split up protocol_v2_serve_loop(),
## 2021-10-14)
avar/serve-api-refactoring

## Update the COPYING file in response to
## https://lore.kernel.org/git/xmqqtui4k1j5.fsf@gitster.g/
##
## BLOCKED ON: Feedback from Bradley M. Kuhn. See
## <87y26uejg3.fsf@evledraar.gmail.com> in my mailbox.
##
## NEEDS: avar/tests-do-not-use-top-level-COPYING-and-readme
#
# => https://lore.kernel.org/git/cover-v2-0.5-00000000000-20211005T170031Z-avarab@gmail.com
avar/COPYING-update-for-modern-era-3

## Make a gitformats(5) and e.g. gitformat-bundle(5).
##
##0 NEEDS: avar/doc-help-split-up-guides-into-format
avar/doc-gitformats

## The greater "config-based hooks base" topic. See
## https://lore.kernel.org/git/87lf80l1m6.fsf@evledraar.gmail.com/ for
## my initial stealing of it.
##
## NEEDS: avar/config-based-hooks-base-part-two
##
## NOTE: Maybe I want es-avar/config-based-hooks-2-after-gently after
## this?
##
## The version is -1 in public, due to my screwing around.
##
## NOTE: The *-7 here is a WIP v6, not needed/sent yet (and won't be,
## sending it in pieces now).
##
## NOTE: Major rebase on. See the (tagged) push
## 3335b5a8811...2353b02042e for old...new.
##
## NOTE: Major rewrite on February 15, 2022:
##    git range-diff 7b99a4b633c..0aaa9e5de9e b80121027d1..33901f46388
## UPDATE:
##    git range-diff 7b99a4b633c..0aaa9e5de9e b80121027d1..98fd2ad83b4
#
# => https://lore.kernel.org/git/cover-v5-00.36-00000000000-20210902T125110Z-avarab@gmail.com
es-avar/config-based-hooks-7

## Emily's new hook topic on top of my base topic. Picked it from
## 30ffe98601e (hook: allow out-of-repo 'git hook' invocations,
## 2021-07-11), or nasamuffin/config-based-hooks-restart. That's v3
## here:
## https://lore.kernel.org/git/20210819033450.3382652-1-emilyshaffer@google.com/
##
## NEEDS: es-avar/config-based-hooks-7
##
## UPDATE @ 2021-09-01: "30ffe98601e...cf1f8e34a34 config-based-hooks-restart -> nasamuffin/*"
##
## I publicly mentioned the *-3 in:
## https://lore.kernel.org/git/cover-v5-00.36-00000000000-20210902T125110Z-avarab@gmail.com/;
## so I created the *-4.
##
## I then submitted the *-4 per
## https://lore.kernel.org/git/87sfyfgtfh.fsf@evledraar.gmail.com/ and
## Emily's inactivity:
##
## TODO: The *-5 is my WIP with fixups *sigh*, submitted a fixup for
## the v4:
##
## The range-diff between Emily's initial "not base topic" and mine:
##
##  git range-diff gitster/ab/config-based-hooks-base..gitster/es/config-based-hooks avar/es-avar/config-based-hooks-7..avar/avar-nasamuffin/config-based-hooks-restart-5
#
## TODO: The cc on e.g. gcc135 hates "struct hook my_hook = { 0 }" in
## hook.c, needs "struct hook my_hook = { {0} }" instead. The first
## member is a struct (non-pointer).
#
# https://lore.kernel.org/git/cover-v4-0.5-00000000000-20210909T122802Z-avarab@gmail.com
# https://lore.kernel.org/git/patch-1.1-38b21b65bee-20210909T125613Z-avarab@gmail.com
## Merge with avar/test-refactor-for-no-templates
avar-nasamuffin/config-based-hooks-restart-5-plus-avar/test-refactor-for-no-templates
avar-nasamuffin/config-based-hooks-restart-5

## Add and use an API to free revisions.[ch] assets
##
## The WIP version at
## avar/post-sanitize-leak-test-mode-add-and-use-revisions-release has
## some more (including unrelated or semi-related leaks). See
## avar/add-and-use-revisions-release-extra below.
##
## TODO: v4
#
# => https://lore.kernel.org/git/cover-v3-00.27-00000000000-20220325T171340Z-avarab@gmail.com
avar/add-and-use-revisions-release-4
## HOTFIX for merge with avar/object-file-and-header-move-around-add-object-array-bare
avar/add-and-use-revisions-release-plus-avar/object-file-and-header-move-around-add-object-array-bare
## HOTFIX for merge with avar-ds/partial-bundle-more-fixup
avar/add-and-use-revisions-release-plus-avar-ds/partial-bundle-more-fixup

## Things I ejected from avar/add-and-use-revisions-release,
## originally all in
## avar/post-sanitize-leak-test-mode-add-and-use-revisions-release
##
## NEEDS: avar/add-and-use-revisions-release
avar/add-and-use-revisions-release-extra

## Fix a memory leak in test-prio-queue.c and test-parse-options.c
##
## NEEDS: avar/tests-add-sanitize-leak-test-mode
##
## TODO: I ejected
## avar/tests-post-add-sanitize-leak-test-mode-fix-leaks-wip from
## this.
##
## NOTE: The avar/tests-post-add-sanitize-leak-test-mode-fix-leaks
## name was referenced in a ML post at
## https://lore.kernel.org/git/87a6k8daeu.fsf@evledraar.gmail.com/,
## renamed
##
## TODO: Pick up and test the ejected
## avar/tests-post-add-sanitize-leak-test-mode-fix-leaks-redux-wip-ref-filter-release
##
## TODO: I folded all of
## avar/tests-post-add-sanitize-leak-test-mode-fix-leaks-redux into
## above leak fixes, nothing to do there?

## Simplify the logic around the config, --strict and --verify for
## index-pack and pack-object writing of *.idx and *.rev.
##
## A WIP version of this was pasted inline as part of
## https://lore.kernel.org/git/87v93bidhn.fsf@evledraar.gmail.com/;
## referenced at
## https://lore.kernel.org/git/87r1dziczs.fsf@evledraar.gmail.com/
##
## CONFLICTS: avar-tb/idx-rename-race-2
avar/pack-h-simplify-writing-idx-and-rev

# WIP mark more things as passing under SANITIZE=leak. Ejected from
# avar/tests-add-sanitize-leak-test-mode-3
#avar/tests-add-sanitize-leak-test-mode-3

## WIP make the format-patch Message-IDs prettier.
##
## Had some WIP for %(if) and %(else) in the format in
## avar/format-patch-prettier-message-id-wip
##
## NEEDS: avar/format-patch-test-prep
avar/format-patch-prettier-message-id

# Make advise() always emit the config blurb at the end. Has a
# semantic conflict with es-avar/config-based-hooks-6.
#
## NEEDS: avar/generate-advice-h-add-missing-docs
##
## TODO: Need to make advice.objectAmbiguous=false work? (UPDATE @
## 2022-03-15: is this an old note??) Fails:
##
##	test_expect_success 'ambiguous blob output with -c advice.objectAmbiguous=false' '
##		cat >expect <<-\EOF &&
##		error: short object ID beef... is ambiguous
##		fatal: ambiguous argument '\''beef...'\'': unknown revision or path not in the working tree.
##		Use '\''--'\'' to separate paths from revisions, like this:
##		'\''git <command> [<revision>...] -- [<file>...]'\''
##		EOF
##
##		test_must_fail git -C repo -c advice.objectAmbiguous=false rev-parse beef 2>actual.raw &&
##		sed "s/\(beef\)[0-9a-f]*/\1.../g" <actual.raw >actual &&
##		cat actual &&
##		test_cmp expect actual
##	'
##
avar/make-advice-always-emit-config-blurb

## Post avar/t4018-diff-hunk-header-regex-tests-5
# => https://lore.kernel.org/git/20210215155020.2804-1-avarab@gmail.com/
avar/diff-W-context-4

## Post avar/tree-walk-api-refactor-prep
avar/tree-walk-api-refactor-6
## TODO: No tests fails on this, but building this at cd6c70171f2
## (tree-walk.h API: move canon_mode() back out of
## decode_tree_entry(), 2021-03-04) fails with:
##
##    ~/g/git/git -P blame builtin/init-db.c
##
## It's something to do with the old git.git entries that have odd modes:
##
## diff --git a/tree-walk.c b/tree-walk.c
## index 35a1683d801..e761cec542d 100644
## --- a/tree-walk.c
## +++ b/tree-walk.c
## @@ -52,6 +52,12 @@ static int decode_tree_entry(struct tree_desc *desc, const char *buf, unsigned l
##         desc->entry.pathlen = len - 1;
##         oidread(&desc->entry.oid, (const unsigned char *)path + len);
##
## +       if (mode != canon_mode(mode))
## +               error("%s (%o to %o; %d to %d, %o to %o): %s", oid_to_hex(&desc->entry.oid),
## +                     mode, canon_mode(mode), S_ISDIR(mode), S_ISDIR(canon_mode(mode)),
## +                     (mode & 0777), (canon_mode(mode) & 0777),
## +                     path);
## +
##         return 0;
##  }
##
## vm git (avar/tree-walk-api-canon-mode-switch $>) 0 $ ~/g/git/git -P blame -M0 builtin/init-db.c
## error: cf550e258cff644726561052d129a03c4f7d2717 (100664 to 100644; 0 to 0, 664 to 644): README
## error: 88c2fa8d95b2cf6c0b2cd78c074659885625766d (100664 to 100644; 0 to 0, 664 to 644): cache.h
## error: 3c47d79a16305d326a65768fe9f37ee25928510b (100664 to 100644; 0 to 0, 664 to 644): cat-file.c
## error: 7d16691aa9d51b5b4670d5837b3527ee7c7da79c (100664 to 100644; 0 to 0, 664 to 644): check-files.c
## error: 8d5e4cd148f6111ab7e0bfb7f9142693e08f66bd (100664 to 100644; 0 to 0, 664 to 644): checkout-cache.c
## error: 50fe19652f1b440c4123f92af886e47bb418bb11 (100664 to 100644; 0 to 0, 664 to 644): commit-tree.c
## error: 826812af83f1f267014860f285fc03286bc5329e (100664 to 100644; 0 to 0, 664 to 644): diff-tree.c
## error: 3fbcd2c7e99fa5e27fa7edad0e2bd65d3b557fe7 (100664 to 100644; 0 to 0, 664 to 644): fsck-cache.c
## error: ff2b11a3b33ecba970f59bef3ba63dcc29b53855 (100664 to 100644; 0 to 0, 664 to 644): init-db.c
## error: feeding unmodified init-db.c to diffcore
## fatal: internal error in blame::find_origin (X)
avar/tree-walk-api-canon-mode-switch

## Post avar/object-as-type-simplified-3
##
## In a WIP state, see the discussion at
## https://lore.kernel.org/git/YGV8UOsYUQt7Lpto@coredump.intra.peff.net/
## and the messy branch I have here. Test case at
## https://lore.kernel.org/git/YGTGgFI19fS7Uv6I@coredump.intra.peff.net/
##
## There used to be a *-4 but it was misnumbered, moved to *-3. Some
## version of this was on-list as
## https://lore.kernel.org/git/cover-00.11-00000000000-20210328T021238Z-avarab@gmail.com/
##
## STACKED ON: avar/avar/fsck-error-on-completely-invalid-11
avar/object-is-type-error-refactor-3

## Refactor and create an object-file.h header, for
## format_loose_header() et al.
##
## NEEDS: avar/object-file-api-add-format_loose_header-function
##
## CONFLICTS: avar/object-is-type-error-refactor-3
#avar/create-object-file-h-split-from-cache-h

#############################################
# Work in progress, but barely passes tests #
#############################################

## More designated init for hash.h
##
## TODO: Can we skip the NALGOS by just using sizeof(enumvar) /
## sizeof(enum_var[0]) or similar?
##
## TODO: Commit message etc, this was waiting on
## avar/refs-more-designated-init-and-more-debug-backend
avar/hash-algo-enum-and-more-designated-initializer

## Sort out these miscellaneous memory leaks & submit them
avar/various-misc-leaks-on-top-of-avar-private

## Generate the list of builtins
##
## TODO: Needs finishing up, commit message, docs etc.
##
## NEEDS: avar/generate-advice-h-add-missing-docs
avar/generate-builtin-h

## An experiment in using a prove(1) formatter to change the "prove"
## output.
##
## NEEDS: avar/support-test-verbose-under-prove-2
#avar/support-test-verbose-under-prove-2-perl-pm-format-experiment

## Make xdiff memory management suck less by using "goto cleanup"
## patterns, and having owners of variables free them.
avar/have-xdiff-memory-management-suck-less

## Change "git merge-tree" to support a --conflict-fromat instead of
## --exclude-modes-oids-stages.
##
## NEEDS: avar/pr-1122/newren/in-core-merge-tree-v3-fixup
#
# => https://lore.kernel.org/git/220203.86iltw7nhm.gmgdl@evledraar.gmail.com/
#avar/in-core-merge-tree-format-option

## Consolidate "unset" in test-lib.sh, which I suggested in
## https://lore.kernel.org/git/220127.86r18tdeve.gmgdl@evledraar.gmail.com/
avar/test-lib-consolidate-unset

## An ad-hoc patch to build on HP/UX
avar/build-on-hpux

## Remove unused run-command.h field
##
## INCLUDED IN: avar/remove-various-dead-code-3
avar/run-command-h-remove-clean_on_exit_handler_cbdata

## Change "merge --continue" to add a "merge (continue)" message to
## the reflog, rather than just a "merge". This makes it behave like
## "rebase --continue" in that regard.
##
## TODO: It should be more guarded about the setenv() probably, like
## set_reflog_action() in builtin/rebase.c
avar/reflog-add-merge-continue-message

## Move builtin/ls-tree.c to strbuf_expand() and support --format.
##
## My original version of this was avar/ls-tree-format. What's here is
## based on top of Teng Long's version posted at
## http://lore.kernel.org/git/cover.1646390152.git.dyroneteng@gmail.com
##
## The tl/ls-tree-hash-only here was grabbed from
## tenglong/tl/ls-tree-hash-only's ef0f5bd184d (ls-tree: support
## --object-only option for "git-ls-tree", 2022-02-08)
##
# => https://lore.kernel.org/git/211115.86o86lqe3c.gmgdl@evledraar.gmail.com/
# => https://lore.kernel.org/git/RFC-cover-0.7-00000000000-20211217T131635Z-avarab@gmail.com
# => https://lore.kernel.org/git/cover.1646390152.git.dyroneteng@gmail.com/ (the v12, ditto ef0f5bd184d)
# => https://lore.kernel.org/git/cover.1648026472.git.dyroneteng@gmail.com/ (the v14, rebased on master)
tl/ls-tree-hash-only

## A change on top of Teng Long's --oid-only change in
## https://lore.kernel.org/git/63876dbeb7f880c0001649b49d5265b744c42765.1637642029.git.dyroneteng@gmail.com/
## to implement it in terms of hardcoded --format.
##
# => https://lore.kernel.org/git/211123.86mtlvumps.gmgdl@evledraar.gmail.com/
#avar-tl/ls-tree-oid-only

## Make the reflog callbacks take structured
## committer/committer_email, instead of parsing it out.
##
## "Works", and sent inline quoted at
## https://lore.kernel.org/git/211129.86czmjgtfd.gmgdl@evledraar.gmail.com/
##
## As noted there a better approach would be to have the backend do
## the xstrdup()-ing, which along with passing a "const char *" would
## mean that some backends could skip the dup-ing, and we could do it
## in the file backend with mmap().
##
## TODO: Rebase on avar/reflog-parse-options-fixes
## NEEDS: avar/reflog-add-progress-and-do-not-stall-on-progress
#avar/refs-api-make-reflog-callback-get-committer-name-email

## TODO: Find users for this API? The Windows-only user in
## avar/run-command-h-itself-use-args-not-argv is the only one spotted
## so far.
avar/strvec-api-attach

## Try a self-hosted github runner
#avar/self-hosted-runner

## SANITIZE=leak failures that are hidden by existing bad test
## code. Some overlap with
## avar/leak-test-mark-more-existing-passing-tests (but let's deal
## with it later)
####
#### $ grep -c LeakSanitizer test-results/*out|grep -v :0$
#### test-results/t0002-gitfile.out:2
#### test-results/t1001-read-tree-m-2way.out:26
#### test-results/t1002-read-tree-m-u-2way.out:26
#### test-results/t1430-bad-ref-name.out:6
#### test-results/t1503-rev-parse-verify.out:2
#### test-results/t2200-add-update.out:8
#### test-results/t3302-notes-index-expensive.out:398
#### test-results/t3303-notes-subtrees.out:44
#### test-results/t4020-diff-external.out:8
#### test-results/t4027-diff-submodule.out:2
#### test-results/t4123-apply-shrink.out:2
#### test-results/t4128-apply-root.out:10
#### test-results/t6005-rev-list-count.out:42
#### test-results/t6102-rev-list-unexpected-objects.out:4
#### test-results/t7103-reset-bare.out:2
####
avar/leak-fix-broken-test-code-hiding-SANITIZE-leak-failures

## Better free() behavior and general better string-list.h API. See
## avar/string-list-strmap-api-free-etc-fixes-old for some strmap
## etc. changes
##
## Maybe take the approach in
## avar/string-list-better-free-maybe-alternate instead? See
## https://lore.kernel.org/git/CAPig+cRAKJyzuMwPNdmC+BobrMjk5TF-o3Ort8R0E77ij=g6_A@mail.gmail.com/
avar/string-list-strmap-api-free-etc-fixes
#avar/string-list-better-free-maybe-alternate

## Post-avar/refs-change-refs_resolve_ref_unsafe-to-errno-form change
## "branch" to use ref transactions, and probably "reflog" etc. too.
##
## See d43f990fac7 (branch.c: use ref transaction for all ref updates,
## 2014-04-16) for the "create" of git branch migrating to it, surely
## "move+rename" is just that + a bit of config before/after.
##
## STACKED ON: avar/use-failure-errno-in-refs-files-api
avar/branch-and-reflog-use-ref-transactions-nuke-lock_ref_oid_basic

## The range-diff command will segfault on e.g.:
##
##     GIT_PROGRESS_DELAY=0 ~/g/git/git -P --exec-path=$PWD range-diff --progress --creation-factor=100 origin/master...git-for-windows/main
##
## This adds progress to it, and fixes the bug
#avar/string-list-overflow-range-diff

## Make t0027 faster, down from 20s to 13-15s so far.
##
## CONFLICT: avar/leak-fix-broken-test-code-hiding-SANITIZE-leak-failures
#avar/test-faster-t0027

## The WIP inline patch at for a "rerere" segfault reported by brian
## m. carlson:
## https://lore.kernel.org/git/87tuiufr3c.fsf@evledraar.gmail.com/
avar-bc/git-rerere-forget-segfault-fix

## A WIP patch to respect NO_GETTEXT=Y in Windows CI. See
## https://lore.kernel.org/git/878s2m8ns9.fsf@evledraar.gmail.com/
#avar/makefile-respect-no-gettext-in-artifacts-tar

## Make the "git remote -v" output prettier and more dense. Align the
## remote names, and don't show both "fetch" and "push" URL lines in
## the common case where they're the same.
avar/remote-prettier-show-v-output

## Stress test the test suite under a new GC racy mode, and fix racy
## bugs.
##
## Needs to be made to pass under GIT_TEST_GC=true
## GIT_TEST_GC_AUTO_DETACH=true
##
#avar/more-gc-detach-under-lock

########################################################
# Ditto work in progress, but dropped due to conflicts #
########################################################

## WIP version of the same, "works", but commit message, split-up etc.
##
## WAS WAITING ON: avar/various-miscellanious-leaks
avar/wip-various-miscellanious-leaks

## Optimize cat-file --batch-check, see my
## https://lore.kernel.org/git/87eecf8ork.fsf@evledraar.gmail.com/
## (this one is slightly improved)
##
#avar/optimize-cat-filebatch-object-write-for-common-case

####################
# TODO: Categorize #
####################

avar/fsck-doc

## Will segfault on orphan + post-checkout hook (the "to" OID is null)
#avar/worktree-add-orphan
#avar/makefile-misc-crap-improved-make-clean
avar/test-lib-test-oid-to-dir

#########################################################
# Not picked up (or later ejected) by Junio, re-pursue? #
#########################################################

## Be more gentle in setup_git_directory_gently()
##
## TODO: Make this more gentle? Have a per-command flag in git.c?
##
# => https://lore.kernel.org/git/patch-1.1-fc26c46d39-20210722T140648Z-avarab@gmail.com
avar/do-not-die-on-setup-gently-2

## Documentation/Makefile: don't re-build on 'git version' changes
##
## TODO: Junio likes the "regression", maybe formalize the "build with
## a custom git version" part of this?
##
## COMMENTED OUT: Conflicts with new avar/Makefile-* topics.
##
# => https://lore.kernel.org/git/patch-1.1-911881ce19f-20210702T115617Z-avarab@gmail.com
#avar/make-asciidoc-flags

## Stop saying "write new commands in Perl or SH"
##
# => https://lore.kernel.org/git/patch-1.1-98b1f938f7d-20210417T122959Z-avarab@gmail.com/
avar/doc-codingguidelines-2

## TODO: Needs a v2 re-roll per https://lore.kernel.org/git/875z15kor5.fsf@evledraar.gmail.com/
## TODO@2021-05-19: Needs fsck.c and notes.c conflict resolution with master
##
## TODO@2021-07-30: Re-started and re-based a v3, not submitted yet
##
# => https://lore.kernel.org/git/cover-00.19-00000000000-20210331T190531Z-avarab@gmail.com/
avar/tree-walk-api-refactor-prep-3

## TODO: Re-roll per https://lore.kernel.org/git/87o8eogs2r.fsf@evledraar.gmail.com/ etc.
## Refactor "git config" tristate
# => https://lore.kernel.org/git/cover-0.6-0000000000-20210408T133125Z-avarab@gmail.com/
avar/git-config-bool-or-auto

## Various object.c refactoring (stacked one on top of
## another).
##
## There's a textual conflict with BMC's hash-object.c changes. See
## https://lore.kernel.org/git/87mttx121j.fsf@evledraar.gmail.com/
#

## TODO: Send a v3
#
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T124428Z-avarab@gmail.com
avar/object-api-misc-small-3

## TODO: Send a v3
##
## NEEDS: avar/object-api-misc-small-3
##
## NOTE: I ejected the whole strlen() passing of the object type. Was
## 899bc4023e6 (hash-object: pass along type length to object.c,
## 2021-04-16)
##
## NOTE: Ditto 4086a68fe75 (hash-object: show usage on invalid --type,
## 2021-04-16)
##
## NOTE: Ditto f6c9656f16f (object.c: move type_from_string() code to
## its last user, 2021-04-16)
#
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T125415Z-avarab@gmail.com
avar/object-api-enum-object-type-misc-3

## TODO: Send a v3
##
## NEEDS: avar/object-api-enum-object-type-misc-3
# => https://lore.kernel.org/git/cover-0.8-0000000000-20210420T133218Z-avarab@gmail.com
avar/object-as-type-simplified-3

## TODO: Address these and send a v4:
## => https://lore.kernel.org/git/xmqqr1it92da.fsf@gitster.g/
## => https://lore.kernel.org/git/xmqqmtth91wx.fsf@gitster.g/
##
## Use 'test -f "$@"' for argument checking
##
## CONFLICTS: avar/add-a-better-test_expect_failure-no-test-external-change
#
# => https://lore.kernel.org/git/cover-0.4-00000000000-20210423T072824Z-avarab@gmail.com
#avar/test-lib-functions-argument-checking-4

## Refactor tests related to old test variables. This was larger but
## partially rolled into
## avar/dead-git-sh-setup-code-and-move-to-last-users4, rebased on it.
##
## TODO: Send a v2 with what's left here? Need to address the comments
## in the v1 review.
##
# => https://lore.kernel.org/git/20210311001447.28254-1-avarab@gmail.com/
avar/sh-remove-sha1-variables-2

################################
# Ejected by Junio, re-pursue? #
################################

## An rc2 bug in my 9081a421a6
##
## Junio replaced this with his 519947b69a9 (checkout: avoid BUG()
## when hitting a broken repository, 2022-01-21), which has a
## watered-down version of the regression test here (maybe re-pursue
## the test, if/when that BUG() condition is "really" fixed).
#
# https://lore.kernel.org/git/patch-1.1-21ddf7c628d-20220120T212233Z-avarab@gmail.com
#avar/checkout-9081a421a6-regression-in-skip-prefix

## Fix up the issue I reported in
## https://lore.kernel.org/git/211026.8635oo11jk.gmgdl@evledraar.gmail.com/
##
## PICKED UP: NO, re-roll?
##
# => https://lore.kernel.org/git/patch-1.1-90172a8ddcc-20211102T142351Z-avarab@gmail.com
avar/t7900-v2.34.0-rc-regression-systemd-detection-2

## Fix git_prompt() uses, prompted (har har!) by an issue in avar/global-progress-6..7
##
## Junio & Jeff didn't like it, semantic conflict with
## avar/run-command-h-itself-use-args-not-argv
##
# => https://lore.kernel.org/git/cover-0.2-00000000000-20211102T155046Z-avarab@gmail.com
#avar/git-prompt-api-and-tests

## Do "mv $@+ $@" for object files, so I can run "make test" while git
## builds, and AIX builds don't suck. Now on top of my
## avar/makefile-delete-on-error. Junio didn't like it:
##
## TODO: The *-3 is a rebased unsubmitted version.
#
# => https://lore.kernel.org/git/cover-0.6-00000000000-20210329T161723Z-avarab@gmail.com/
#avar/makefile-rename-git-binary-not-in-place-3

## Get rid of "Alice" and "Bob" references in our documentation.
##
## "Let's shelve this one for now, as it does not seem to solve any
## real problems (other than ceasing to use Alice and Bob in contexts
## that do not call for Eve)." --
## https://lore.kernel.org/git/xmqq8s2ga19f.fsf@gitster.g
#
# => https://lore.kernel.org/git/cover-0.6-00000000000-20210615T161330Z-avarab@gmail.com
#avar/doc-get-rid-of-alice-and-bob

## Junio had avar/progress-api-use-minor~1 is in next @ 2021-07-03 and
## merged it to master @ 2021-07-09. This tip was ejected. Revisit it
## along with my other "progress" topic(s).
##
## Has a gient thread at
## https://lore.kernel.org/git/8f336b1b-6cb7-8277-79d5-0f331159b00c@gmail.com/
## about whether 2/2 was off by one or not.
avar/progress-api-use-minor-maybe-again

avar/test-lib-bail-out-on-accidental-prove-invocation-2
avar/lookup-object-init-to-NULL

## Split the building of "fuzz" objects to only run in CI, not needed
## to build "git"
#avar/makefile-do-not-build-fuzz-under-all

#################
# Ejected by me #
#################

## A comment fix and API fix related to usage.[ch]
##
## PICKED UP: No
##
## REPLACED BY: avar/usage-api-split-into-own-file-api-docs-and-refactor
#
# => https://lore.kernel.org/git/patch-1.1-7551daf131b-20220221T160719Z-avarab@gmail.com
#avar/usage-misc-small-fixes

## Fix the FreeBSD C11 issue with -std=gnu99
##
## This is a more narrow version of the fix Junio/Johannes
## wrote/tested; See
## https://lore.kernel.org/git/nycvar.QRO.7.76.6.2201181308540.2121@tvgsbejvaqbjf.bet/
#
# => https://lore.kernel.org/git/patch-1.1-06cc12be94d-20220118T151234Z-avarab@gmail.com
avar/freebsd-c11-generic-portability

## Refactor fetch.c to make a couple of variables be lazily generated
## by their users.
##
## EJECTED: Had a conflict
#avar/fetch-format-lazy

## Trivial cleanup of dead Travis CI code
##
## REPLACED BY: avar/ci-unroll-make-commands-to-ci-recipe
#avar/ci-more-dead-travis-code

## Waiting on various generic memory leaks? Failed in combination with
## them.
##
## Made redundant by upstream ee4a1d63d7e (builtin/multi-pack-index.c:
## don't leak concatenated options, 2021-10-26).
##
#avar/multi-pack-index-free-options-leak

## Get rid of OPT_ALIAS
##
## PICKED UP: NO, re-submit?
##
## REPLACED BY: avar/parse-options-sanity-and-validation
##
# => https://lore.kernel.org/git/patch-1.1-b09bf423694-20211115T220334Z-avarab@gmail.com
#avar/parse-options-no-alias

## Cleanup and refactor builtin/reflog.c, make refs API "verbose"
## independent, and fix/improve verbose/progress output in reflog/gc
##
## RENAMED FROM: avar/reflog-cmd-parse-options-usage-etc
## INCLUDES: avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir
##
## PICKED UP: NO, re-submit?
##
## REBASING: v2
##
## REPLACED BY: avar/reflog-refactor-and-move-verbose-out-of-refs-API
## REPLACED BY: avar/reflog-add-progress-and-do-not-stall-on-progress
##
# => https://lore.kernel.org/git/cover-00.12-00000000000-20211130T213319Z-avarab@gmail.com
#avar/reflog-refactor-and-api-and-progress-2

## Fix various issues with the (over-)dependencies of the *.sh, *.perl
## and *.py targets, add back "shellquote", and simplify the CFLAGS macro
##
## Combined this with the previous
## avar/Makefile-use-template-for-FORCE-defined-dep-pattern. This used
## to be called avar/Makefile-fix-script-perl-python-dependencies
##
## NOTE: Folded
## avar/Makefile-use-gmake-4.2-features-for-TRACK-template into this
## in v3. I ejected the 104d99fa4aa (Revert "GIT-VERSION-GEN: adjust
## for ancient git", 2021-11-07) when doing so.
#
## NOTE: v5 for rebasing
##
## PICKED UP: YES, "needs review"
##
## REPLACED BY: avar/Makefile-small-misc-fixes
## REPLACED BY: avar/Makefile-perl-python-rules-fixes
## REPLACED BY: avar/Makefile-add-shared-mak-centralize-QUOTE-add-mkdir-p
## REPLACED BY: avar/Makefile-add-TRACK_template-do-shell-escaping-via-functions
##
# => https://lore.kernel.org/git/cover-v4-00.23-00000000000-20211117T101807Z-avarab@gmail.com
#avar/Makefile-perl-python-shell-quote-various-fixes-5

## Post-avar/files-backend-remove-dead-errno-eisdir-2, cleanup the
## builtin/reflog.c etc. code.
##
## ABSORBED BY: avar/reflog-refactor-and-api-and-progress
#avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir

## Follow-up to Make being slow; see
## https://lore.kernel.org/git/874kdn1j6i.fsf@evledraar.gmail.com/
##
## FOLDED INTO: avar/Makefile-perl-python-shell-quote-various-fixes
##
## Have the old WIP makefile version check at
## avar/Makefile-get-rid-of-FORCE-rules-for-gmake-4.2-dependency-wip
## avar/Makefile-get-rid-of-FORCE-rules-for-gmake-4.2-dependency
#avar/Makefile-use-gmake-4.2-features-for-TRACK-template

## Change optbug() to use bug()
##
## REPLACED BY: avar/usage-hard-dep-variadic-macros-die-message-and-BUG-fixes
##
#avar/usage-add-bug-use-for-optbug

## Declare C99 variadic macros a hard dependency
##
## Not accepted in early 2021 per:
## https://lore.kernel.org/git/xmqqeeffe669.fsf@gitster.g/; let's try
## again!
##
## REPLACED BY: avar/usage-hard-dep-variadic-macros-die-message-and-BUG-fixes
#
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210412T105422Z-avarab@gmail.com/
#avar/variadic-macros-2

## Workaround using -O3 during the build
##
## TODO: Submit a v4?
##
## NEEDS: avar/die-message-routine
# => https://lore.kernel.org/git/cover-v3-0.6-00000000000-20211022T175227Z-avarab@gmail.com
#avar/optimize-O3-leaks-4

## Remove hardcoded lists of BUILTIN_OBJS, LIB_OBJS,
## TEST_BUILTINS_OBJS, also starts addressing the code duplication
## we've got around "cmake".
##
## EJECTED: To make room for
## avar/Makefile-perl-python-shell-quote-various-fixes and due to not
## much excitement about it. See
## https://lore.kernel.org/git/cover-00.16-00000000000-20211106T205717Z-avarab@gmail.com
#
# => https://lore.kernel.org/git/cover-v2-0.3-00000000000-20211101T191231Z-avarab@gmail.com
#avar/Makefile-remove-hardcoded-lists-in-favor-of-globs-2

## In v2 of this I dropped the "Makefile-powered" cmdlist, I'll
## probably want to dig that up again, but in the meantime.
##
## This used to be called avar/generate-cmdlist-incrementally,
## re-titled it and based it on top of
## avar/generate-cmdlist-incrementally-2
#
# TODO: I broke this when re-rebasing on v3, around commit e86323df411
# (Makefile: don't call "grep" when making the cmdlist,
# 2021-10-22). Eject it for now.
# avar/generate-cmdlist-with-make-graph

## Makefile: Sort and assert the sort of various target lists, and use
## manual list instead of "ls-files" and "find" commands.
##
## NEEDS: avar/makefile-tags-targets-deps-5
## STACKED ON: avar/generate-cmdlist-incrementally
##
## EJECTED: Due to creating avar/scalar-move-build-from-contrib, too
## lazy for the merge conflict
#
#avar/sort-targets-and-no-more-find-or-ls-files

## Clean up various installation-related variables in the Makefile
##
## REPLACED: avar/makefile-respect-no-gettext-in-artifacts-tar
## INCORPORATES: avar/Makefile-delete-check-racy-again
## STACKED ON: avar/sort-targets-and-no-more-find-or-ls-files
#
## EJECTED: Due to creating avar/scalar-move-build-from-contrib, too
## lazy for the merge conflict
#
#avar/Makefile-install-variable-cleanup

## Support whitelisting parts of stack traces as "OK" for leak
## purposes.
##
## NOTE: Only the "avar/lsan-suppressions" here is submitted, the rest
## are all
##
## STACKED ON: tb/plug-pack-bitmap-leaks
##
## TODO: A v2 re-roll? Created *-2 for rebasing
##
## EJECTED: On-list disagreement about the relative utility of
## UNLEAK() v.s. these per-test whitelists, and in any case I don't
## care much for now since tb/plug-pack-bitmap-leaks doesn't
## semantically conflict with my upcoming work. See also
## https://lore.kernel.org/git/211027.86v91iyis4.gmgdl@evledraar.gmail.com/
#
# https://lore.kernel.org/git/patch-1.1-9190f3c128f-20211022T102725Z-avarab@gmail.com
#tb/plug-pack-bitmap-leaks
#avar/lsan-suppressions-2
## https://lore.kernel.org/git/211027.86zgquyk52.gmgdl@evledraar.gmail.com/
#avar/lsan-suppressions-plus-tb/plug-pack-bitmap-leaks

## Junio merged my "sparse" target fixes, but I can rebase this v4 if
## we ever need a "sparse-incr" in the Makefile.
##
## NOTE: Junio merged the v2, not the v3 or v4, fine I guess...?
## See https://lore.kernel.org/git/871r4xio37.fsf@evledraar.gmail.com/
##
# => https://lore.kernel.org/git/patch-v4-1.1-f31fa3e8282-20210928T014023Z-avarab@gmail.com
#avar/Makefile-make-sparse-non-phony-5

## Clarify the "advertise" callback in serve.c. I had a WIP of
## avar/bundle-uri where I did:
##
## int bundle_uri_advertise(struct repository *r, struct strbuf *value)
## {
## 	if (!advertise_bundle_uri
## 		die(_("we support 'bundle-uri' but do not have it configured"));
## 	return advertise_bundle_uri;
## }
##
## REPLACED BY: avar/serve-api-refactoring; WIP replaced/re-done work
#avar/serve-add-comment-about-advertise-caveat

## Don't just add a comment, split these up in a sensible way.
##
## REPLACED BY: avar/serve-api-refactoring; WIP replaced/re-done work
## NEEDS: avar/serve-add-comment-about-advertise-caveat
#avar/serve-split-up-advertise

## Support "env" matching in the includeIf syntax
##
## TODO: Forgot the [3] reference in commit message, have a WIP *-2 already.
##
## NEEDS (in v2): avar/git-config-key-value-params
##
## TODO: Send a v2?
##
## TODO: Semantic conflict with
## avar/usage-hard-dep-variadic-macros-die-message-and-BUG-fixes
##
# => https://lore.kernel.org/git/patch-1.1-1fe6f60d2bf-20210924T005553Z-avarab@gmail.com
#avar/include-by-env-2

## Jeff King's grep.c const correctness in
## https://lore.kernel.org/git/YUlVZk1xXulAqdef@coredump.intra.peff.net/
#avar-jk/grep-const

## My proposed patch-on-top which does "const char *" -> "const char *
## const" etc. where possible.
##
## NEEDS: avar-jk/grep-const
##
# => https://lore.kernel.org/git/patch-1.1-c317e6e125e-20210921T124416Z-avarab@gmail.com
#avar-jk/grep-const-more

## Was part of v1 of avar/Makefile-make-sparse-non-phony, but ejected
## in later iterations.
#avar/Makefile-hcc-rule-do-one-append-in-brackets

## Make GENERATE_COMPILATION_DATABASE=yes error properly when not
## under clang
##
## I thought it would be replaced by cb/make-compdb-fix, he submitted
## his first (I didn't notice), but Junio picked up 1/2 here of mine
## instead.
##
## Re-pursue as a bigger code deletion in
## https://lore.kernel.org/git/87tuic5cdo.fsf@evledraar.gmail.com/ ?
##
#avar/Makefile-error-on-GENERATE_COMPILATION_DATABASE-yes-failure

## Prep for changes I need for "bundle create --stdin".
##
## Stalled for a while, re-rolled
##
# => https://lore.kernel.org/git/cover-0.5-00000000000-20210726T124425Z-avarab@gmail.com
#avar/setup-revisions-stdin-parsing-api-6

## Try to make the "hdr-check" target non-.PHONY, but I can't just
## depend on the *.o like the "sparse" target, since some *.h don't
## have a corresponding *.c.
##
## EJECTED FROM: avar/Makefile-make-sparse-non-phony-2
##
## Also change "echo >f; echo >>f" to { echo; echo; } >f
#
# => https://lore.kernel.org/git/cover-0.3-00000000000-20210921T224944Z-avarab@gmail.com
#avar/Makefile-make-sparse-non-phony

## My review of Eric Sunshine's notes leading whitespace fixes. See
## http://lore.kernel.org/git/20210830072118.91921-1-sunshine@sunshineco.com
## for his.
#avar-es/notes-leading-whitespace-on-empty-lines

## Ejected 82db40ebf8a (rev-list tests: test for behavior with invalid
## object types, 2021-05-18) from
## avar/fsck-error-on-completely-invalid-7 (was in
## avar/fsck-error-on-completely-invalid-6) in response to
## http://lore.kernel.org/git/YUOryeVj1WNk1Sqd@nand.local
#avar/fsck-error-on-completely-invalid-6

## In v2 the "while we're at it" designated initializer change + code
## formating was ejected. See
## https://lore.kernel.org/git/patch-v2-1.1-0ddf38b47ac-20210911T182631Z-avarab@gmail.com/
#
#avar/test-tool-run-command-buggy-init-pattern

## Fully remove the "test-tool run-command testsuite" sub-sub-command,
## it's unused.
##
## UPDATE: It's unused, but Johannes would prefer for it to stay per
## https://lore.kernel.org/git/nycvar.QRO.7.76.6.2109091323150.59@tvgsbejvaqbjf.bet/
#
# => https://lore.kernel.org/git/patch-1.1-d1e464da0a9-20210906T002938Z-avarab@gmail.com
#avar/test-run-command-testsuite-nuke

## Actual nuking of unused git-sh-setup code, ejected from
## avar/dead-git-sh-setup-code-and-move-to-last-users-2 per
## https://lore.kernel.org/git/xmqqbl5aip0e.fsf@gitster.g/
#
#avar/dead-git-sh-setup-code-and-move-to-last-users

## A rescue of the splitting of the t/helper/test-read-cache.c RFC
## patch from
## https://lore.kernel.org/git/20210317132814.30175-6-avarab@gmail.com/
##
## EJECTED per my
## https://lore.kernel.org/git/87tuj7xhqo.fsf@evledraar.gmail.com/
#
# => https://lore.kernel.org/git/cover-v2-0.4-00000000000-20210824T091204Z-avarab@gmail.com
#avar/split-up-test-tool-read-cache-2

## Less hardcoded 8192 in strbuf.c + make strbuf_fread() use a default
##
## Related to but does not interdepend on
## avar/imap-send-refactor-stdin-reading
##
## TODO: A bunch of feedback for a v2, seems to be a non-starter. Dropped it.
##
# => https://lore.kernel.org/git/cover-0.3-00000000000-20210707T103712Z-avarab@gmail.com
#avar/strbuf-hint-hardcoding-and-strbuf-fread-hint-default

## Ejected b00e7c02aee (serve.c: add call_{advertise,command}()
## indirection, 2021-06-28) and 271b4650d27 (serve: add support for a
## "startup" git_config() callback, 2021-03-24) from
## avar/transport-use-git-config-callback-4. Maybe I'll want it back?
#
#avar/transport-use-git-config-callback-3

## Adds various tests for "fetch", "ls-refs", "object-info"
## etc. etc. Used to be fetch-etc-testbasic-blobpackfileuri-test,
## that's now a part of this.
##
## TODO: Has a couple of tests in avar/test-lib-get-rid-of-packetize-3
## that could go back in.
##
## Let's have this wait for the whole bundle-uri etc. saga
#avar/add-serve-upload-pack-protocol-tests

## Don't just die() in upload-pack.c and friends, instead transmit ERR
## packets in most/all cases.
##
## See prior art (discovered after I wrote this) and discussion at:
## https://public-inbox.org/git/20190305041139.GA19800@sigill.intra.peff.net/
## and
## https://lore.kernel.org/git/20190829141307.GE1797@sigill.intra.peff.net/
##
## NEEDS avar/add-serve-upload-pack-protocol-tests, but on top of
## avar/object-info-pkt-line-upload-pack-minor-refactoring-init for
## stacking.
#avar/serve-upload-pack-protocol-error-handling

## Rewrite [de]packetize() to use test-tool pkt-line instead, and
## refactor various test scripts + add a couple of more tests.
##
## The v4 of this topic dropped most of that, maybe pick it up again?
##
# => https://lore.kernel.org/git/cover-0.5-0000000000-20210714T005115Z-avarab@gmail.com
#avar/test-lib-get-rid-of-packetize-3

## The v2 version of this ejected the strftime() format attribute
## checking. See
## https://lore.kernel.org/git/cover-0.6-0000000000-20210713T080411Z-avarab@gmail.com
#avar/add-missing-format-specifiers

## Make the progress tests work under -v on a wide (or narrow, COLUMNS
## != 80) terminal
##
## Was submitted as part of the 25 patch
## https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##
## Replaced with avar/test-lib-set-columns-80 per the discussion on
## the patch.
##
# => https://lore.kernel.org/git/patch-1.1-cba5d88ca35-20210621T070114Z-avarab@gmail.com
#avar/progress-tests-80-columns

## Improve t4013 reliability
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210413T122645Z-avarab@gmail.com
avar/t4013-reliability-2

## Pick it up if I ever care about coccicheck again
# => https://lore.kernel.org/git/877dlwotjc.fsf@evledraar.gmail.com/
#avar/fix-coccicheck-4

## Folded into avar/send-email-fixes-and-speedup. Junio wasn't
## interested in it stand-alone. See
## https://lore.kernel.org/git/87a6peyfry.fsf@evledraar.gmail.com/
##
## Remove support for sendemail.smtpssl
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210411T144128Z-avarab@gmail.com/
#avar/send-email-smtp-config-minor

## The 1/2 of this was picked up, 2/2 wasn't OK'd
##
## Minor sparse-index.c fixes
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210505T121028Z-avarab@gmail.com
#avar/sparse-index-fixup

## Fix for a regression in my $remove_trash change
##
## Replaced with 560bf518923 (test-lib: avoid accidental globbing in
## match_pattern_list(), 2021-06-16)
##
# => https://lore.kernel.org/git/patch-1.1-436c723f4f8-20210616T082030Z-avarab@gmail.com
#avar/test-lib-scratch-directory

############################################
# TODO replaced by another un-landed topic #
############################################

## A minor fix for the reflog.c converison
##
## REPLACED BY: avar/reflog-parse-options-fixes
#avar/reflog-c-indent-argument-lists

## Finish up the migration in avar/test-add-test_h
##
## REPLACED BY: avar/test-add-test_hook-wrapper (was folded in)
##
## NEEDS: avar/test-add-test_hook-wrapper
#avar/test-add-test_hook-wrapper-more

## Move raceproof_create_file() around, found it while working on
## avar-review/pr-git-1012/hanwen/einval-sideband-v5.
##
## Dropped, moved into
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-3 itself.
##
#avar/refs-backend-file-move-raceproof-create-file

## Fix leaks in index-pack
##
## STACKED ON: avar/object-file-and-header-move-around-add-object-array-bare
##
## REPLACED BY: avar/various-miscellanious-leaks
#avar/index-pack-leak-fixes

## Leaks in the bundle code
##
## NEEDS: avar/index-pack-leak-fixes
##
## REPLACED BY: avar/various-miscellanious-leaks
#avar/bundle-leak-fixes

## Fix a memory leak in builtin/commit-graph.c
##
## REPLACED BY: avar/various-miscellanious-leaks
#avar/commit-graph-plug-memory-leak

## Fix a memory leak in builtin/merge-base.c
##
## REPLACED BY: avar/various-miscellanious-leaks
#avar/merge-base-plug-memory-leak

## Fix common memory leak in range-diff
##
## REPLACED BY: avar/various-miscellanious-leaks
#avar/range-diff-apply-free-memory-for-SANITIZE-leak

## Add a bit of extra sanity checking to parse-options.c, check for
## duplicate long option names.
##
## STACKED ON: avar/parse-options-sanity-and-validation
##
## REPLACED BY: avar/parse-options-sanity-and-validation
#avar/parse-options-add-long-name-duplicate-check

## Basic API cleanups
##
## OUTSTANDING: Not picked up as of https://lore.kernel.org/git/YVuT2aOzcjmgX+K0@nand.local/
##
## TODO: Send a
## v2. avar/object-make-ambiguous-object-advice-translatable-9
## dependency landed on 2022-02-26.
##
## REPLACED BY: avar/generate-advice-h-add-missing-docs
## REPLACED BY: avar/make-advice-always-emit-config-blurb
##
# => https://lore.kernel.org/git/cover-0.5-00000000000-20211004T015432Z-avarab@gmail.com
#avar/advice-basic-api-cleanups-2

## make the disallowing of abbreviation more narrow. Cleaned up
## version of a reply to Linus at
## https://lore.kernel.org/git/220311.867d90j2vj.gmgdl@evledraar.gmail.com/a1
##
## REPLACED BY: avar/parse-options-sanity-and-validation
# => https://lore.kernel.org/git/patch-1.1-d2ae423d1ad-20220311T094315Z-avarab@gmail.com
#avar/parse-options-more-narrow-abbreviation-disallow

## Make the ambiguous option error more useful
##
## SEE ALSO: avar/parse-options-more-narrow-abbreviation-disallow
##
## NEEDS: avar/parse-options-more-narrow-abbreviation-disallow
##
## REPLACED BY: avar/parse-options-sanity-and-validation
#avar/parse-options-ambiguous-option-error

###################################
# TODO replaced bundle-uri topics #
###################################

## My old WIP avar/bundle-uri code
#avar/bundle-uri-wip

## Bundle URI design doc
##
## STACKED ON avar/add-basic-blobpackfileuri-test
#avar/bundle-uri-design-doc

## Implement uploadpack.bundleURI support for the client
##
## REPLACED BY: avar/bundle-uri-client-clone
#avar/bundle-uri-client

## Add an API for "git bundle verify" so I can streamp it
##
## TODO: Make this a prereq of avar/bundle-uri-client etc.
##
## TODO: Ejected 76e7e155a98 (bundle: don't make a copy of "struct
## rev_info *", 2021-11-18) from this, use in conjunction with
## avar/add-and-use-revisions-release-extra?
##
## REPLACED BY: avar/bundle-uri-client-clone
#avar/bundle-verify-api

## Implement uploadpack.bundleURI support for the server
##
## WAS e63f219b20a (avar/bundle-uri-server-old) before massive rebase
##
## 2022-03-08 WAS 34c215c4290 (bundle-uri client: add "bundle-uri"
## parsing + tests, 2021-07-13) before massive rebase
##
## NEEDS: avar/bundle-verify-api
##
## REPLACED BY: avar/bundle-uri-client-clone
##
# => https://lore.kernel.org/git/cover-0.3-00000000000-20211025T211159Z-avarab@gmail.com
#avar/bundle-uri-server-2

############################################
# TODO (doesn't compile, fails tests etc.) #
############################################

## Makefile: have "check-coccicheck" and friends use Makefile magic
##
## NEEDS: avar/ci-unroll-make-commands-to-ci-recipe-2
#
#avar/Makefile-incremental-check-coccicheck

## Make the git-sh-i18n.sh code happen in C instead:
##
##	git grep -w -e gettext -e eval_gettext -e gettextln -e eval_gettextln --  ':!t/' ':!ci/' '*.sh'
#avar/builtin-i18n-helper

## t/Makefile: complete the dependency graph
##
## NEEDS: avar/t-Makefile-use-dependency-graph-for-check-chainlint
#avar/t-Makefile-WIP-use-deps-for-all

## Convert more stuff to size_t from int or unsigned int
##
## TODO: Completely broken (at least on avar/private merge)
#avar/misc-unsigned-int-and-int-alloc-to-size_t

## Add a BUG_ARITY helper to test-lib-functions.sh
##
## CONFLICTS: avar/add-a-better-test_expect_failure
#
#avar/test-lib-functions-add-BUG_ARITY
## This hotfix for avar/add-a-better-test_expect_failure was needed
## until I ejected avar/test-lib-functions-add-BUG_ARITY out of that
## series
##
## hotfix so I don't need to deal with a semantic conflict with
## avar/support-test-verbose-under-prove-2 +
## avar/test-lib-helper-file-size-split-to-file-sizes
#avar/add-a-better-test_expect_failure-hotfix

## WIP: Implement my "OPT_INCOMPATIBLE" suggestion in
## https://lore.kernel.org/git/220201.86a6fa9tmr.gmgdl@evledraar.gmail.com/
##
## NEEDS: avar/parse-options-sanity-and-validation
#
#avar/parse-options-sanity-and-validation-opt-incompatible

## Make cache.h smaller?
#avar/cache-h-fewer-includes

## Free memory in various transport, http and curl related functions
##
## See avar/http-curl-transport-add-missing-free-post-wip for some
## more which segfaults, it's to do with do_take_over() and struct
## casting etc. Memory management mess.
##
## NEEDS: avar/http-curl-transport-add-missing-free
##
## TODO: Has an unresolved edge case/bug, see mid-series TODO hack.
## PARTIALLY REPLACED BY: avar/various-miscellanious-leaks
#avar/http-curl-transport-add-missing-free

## Very rough start at fixing leaks in "git help" and "t0014-alias.sh"
#avar/help-do-not-exit-in-api

## Make the verbosity of run-command.c a bit easier to read, failing
## CI (uninitialized warnings on some compilers?):
## https://github.com/avar/git/runs/5206729501?check_suite_focus=true
#avar/run-command-name-anonymous-children-struct-and-variables

## Try to make vs-build not use cmake
#avar/gnu-make-vs-build

## Remove "struct strbuf;" from git-compat-util.h
##
## TODO?: Not worth it, and semantically conflicts with
## avar/date-mode-release-function-2
#avar/no-struct-strbuf-in-git-compat-util

## Follow-up avar/range-diff-int-overflow-segfault?
##
## NEEDS: avar/range-diff-int-overflow-segfault
#avar/range-diff-int-overflow-segfault-wip
## Do this more narrowly?
#avar/range-diff-segfault-overflow-narrow

## Start splitting up cache.h
#avar/split-up-cache.h

## WIP move unpack-trees.c to fsck-like error callbacks
#avar/unpack-trees-i18n

## Needs a better commit message, in reply to
## <20211025212707.188151-2-tbperrotta@gmail.com>
##
## Needs rebasing on now-landed git-send-email changes from "tp" on
## master.
#avar-tp/send-email-parse-options

## Have strbuf_getcwd() also consider getenv("PWD") optionally. See
## https://lore.kernel.org/git/211124.86sfvld4cl.gmgdl@evledraar.gmail.com/
#avar/setup-handle-gone-directory

## Try to set LSAN_OPTIONS in C
#avar/wip-asan-lsan-options-experiment

## A pure-*.sh version of avar/generate-cmdlist-incrementally-2, maybe
## useful for Windows or something? Slower than the binutils-invoking
## version
#avar/generate-cmdlist-incrementally-2-wip-pure-sh

## DEBUG avar/use-failure-errno-in-refs-files-api-2
## OBSOLETED BY: a test in avar/use-failure-errno-in-refs-files-api-2
#avar/reflog-updateref-tests

## Follow-up to
## http://lore.kernel.org/git/87tuhmk19c.fsf@evledraar.gmail.com about
## test_expect_failure, if Junio can decide what he'd like out of a
## working implementation of it.
#avar/wip-fix-test-expect-failure

## Fix/clean up some stale cocci stuff
#avar/misc-cocci-fixes-wip

## Make the iconv warning Peff added suck less, see
## https://lore.kernel.org/git/871r4umfnm.fsf@evledraar.gmail.com
#avar/log-better-no-iconv-etc

## Should there be a parse_options() die_usagef() or ERROR_USAGE()
## variadic macro? Split off from some cat-file WIP
#avar/parse-options-die-usagef-or-variadic-macro

## A test mode to check if we return -1 from main? See
## https://lore.kernel.org/git/871r5e45jw.fsf@evledraar.gmail.com/
##
## Per http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf
## 7.20.4.3 the return value of main() is implementation defineed, in
## POSIX it's defined as ret & 0xff, so -1 becomes 255.
#avar/cmd-main-return-zero-or-positive

## A WIP based on
## avar/Makefile-error-on-GENERATE_COMPILATION_DATABASE-yes-failure to
## properly add *.dep files to the dependency graph, maybe a stupid
## idea. See
## https://lore.kernel.org/git/8735pw6w8z.fsf@evledraar.gmail.com/
#avar/Makefile-COMPUTE_HEADER_DEPENDENCIES-in-two-steps

## Post avar/fsck-error-on-completely-invalid-7?
##
## TODO: Rebase on avar/fsck-error-on-completely-invalid-7
#avar/cat-file-and-other-allow-unknown-type-refactoring

## Try to make "git help" deal with "git" and "git -h". Leaks with
## SANITIZE=leak, as simple as realloc on the munged argv array?
#avar/git-cmd-dispatch-to-help-instead-of-hardcoding

## scalar: MSFT "git-ng". Re-did the whole Makefile bits to be much
## simpler. See
## http://lore.kernel.org/git/87r1dydp4m.fsf@evledraar.gmail.com
##
## Fails compiling with:
##     make: *** No rule to make target 'scalar.o', needed by 'scalar'.  Stop.
#avar/dscho/scalar-the-beginning-v3

## A refactoring of how we do getopts stuff on top of
## ttaylorr/tb/midx-bitmap-hashcache
##
## See https://lore.kernel.org/git/87v93bidhn.fsf@evledraar.gmail.com/
## and https://lore.kernel.org/git/87v93adr8r.fsf@evledraar.gmail.com/
## where this patch was inlined.
##
## NEEDS: ttaylorr/tb/midx-bitmap-hashcache
##
## NOTE @ 2021-09-09: Can't be bothered to solve the current
## conflicts, re-visit.
#
# => https://lore.kernel.org/git/87v93adr8r.fsf@evledraar.gmail.com/
#avar-tb/midx-bitmap-hashcache-opts-refactor

## Should index-pack --check-self-contained-and-connected be some
## combination of --strict and --fix-thin instead? The ret = 1 return
## is used in fetch-pack.c
#avar/index-pack-connectivity-check-wip

## Post-avar/files-backend-remove-dead-errno-eisdir-2, fix up
## string-list API some more with common free patterns.

## Post-avar/tests-add-sanitize-leak-test-mode
#avar/tests-add-sanitize-leak-test-mode-wip
#avar/test-add-sanitize-leak-test-mode-ejected-progress-fix-todo

## Post-avar/git-config-bool-or-auto, fails on
## t4021-format-patch-numbered.sh
#avar/git-config-bool-or-auto-wip-enum

## Log the client-agent (and need to work on server-agent?) in serve.c
#avar/wip-agent-trace2-in-serve

#make-dot-not-HEAD-warn-3
## TODO: handle -t "some garbage" case
#avar/object-api-to-no-string-argument
#unconditional-abbrev-redo-2021-rebase
#avar/test-lib-add-GIT_TEST_TIMEOUT-2
#avar/send-email-wip-drop-Git-pm-prereq

## Folded into avar/progress-bar-remove-sparse-mode, except for the
## last patch
#
#avar/get-rid-of-progress-special-snowflake

## Fix tree mode fsck-ing. Will rely on
## avar/tree-walk-api-canon-mode-switch etc.
#avar/fix-tree-mode-fsck

## Date overflow checks and fixes
#fsck-date-overflow-with-tz

## Old security test that was left hanging. Needs forward-porting to
## t7450-bad-git-dotfiles.sh
#v2.17.1-extra-security-test

######################
# TODO old bkng work #
######################

#reflog-expire-do-not-assert-oid-when-locking-refs
#hash-object-no-zlib
#check-collisions-config-5

#######################################################################################
# Others work I rebased / tried out etc. but outstanding. hopefully re-rolled by them #
#######################################################################################

## A gitster/hn/reftable rebased on
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-5 + fixups. For
## the original see pr-git-1054/hanwen/libreftable-v3 at:
## https://lore.kernel.org/git/pull.1054.v3.git.git.1629207607.gitgitgadget@gmail.com/
##
## To diff the two:
##
##    git range-diff origin/master..pr-git-1054/hanwen/libreftable-v3 avar-review/pr-git-1012/hanwen/einval-sideband-v5-5..avar-hanwen/reftable
##
## See https://lore.kernel.org/git/87a6lbgqey.fsf@evledraar.gmail.com/
## for a side discussion about the greater status of this topic
## v.s. avar/files-backend-remove-dead-errno-eisdir-5 and
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-5
##
## See https://lore.kernel.org/git/877dgch4rn.fsf@evledraar.gmail.com/
## for my general skepticism that this is anywhere near ready.
##
## This has fixups on top to make it work with my base serieses noted
## above.
##
## NOTE: The *-2 is unsubmitted, created for a rebase, hopefully
## Han-Wen picks it up from me again...
##
## NOTE: Ejected @ 2021-09-02, has SANITIZE=leak failures in core
## tests, and Han-Wen will re-roll eventually...
#
# => https://lore.kernel.org/git/cover-v4-00.28-00000000000-20210823T120208Z-avarab@gmail.com
# => https://lore.kernel.org/git/patch-1.1-f7d9c8af0c-20210827T055608Z-avarab@gmail.com (fixup)
#avar-hanwen/reftable-2

####################
# TODO: bugs/notes #
####################

## TODO: Debug possible rebase bug seen with
## avar/very-odd-rebase-bug-see-series-notes
##
## History is:
##
## $ git log --oneline --no-decorate HEAD~4..
## 5fd5e7d4478 need another beer
## 722269bfaee the rest
## 661b92a9f74 just flags
## 56b20f6024b commit: fix duplication regression in permission error output
##
## With @{u} pointing to 56b20f6024b, just running "git rebase" will
## nuke the whole thing away, even though the diff since 56b20f6024b
## is " 9 files changed, 75 insertions(+), 49 deletions(-) "
##
## Happened with both git version 2.33.0.1446.g6af949f83bd and Debian
## /usr/bin/git 2.30.2.
#avar/very-odd-rebase-bug-see-series-notes

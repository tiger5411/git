##############################
# Other topics (not my code) #
##############################

## I'd like this sooner than later.
#
# => https://lore.kernel.org/git/20210829092536.2582899-1-szeder.dev@gmail.com/
szeder/test-set-ceiling-directory

## My review of Eric Sunshine's notes leading whitespace fixes. See
## http://lore.kernel.org/git/20210830072118.91921-1-sunshine@sunshineco.com
## for his.
avar-es/notes-leading-whitespace-on-empty-lines

## Emily's new hook topic on top of my base topic. Picket it from
## 30ffe98601e (hook: allow out-of-repo 'git hook' invocations,
## 2021-07-11), or nasamuffin/config-based-hooks-restart. That's v3
## here:
## https://lore.kernel.org/git/20210819033450.3382652-1-emilyshaffer@google.com/
##
## UPDATE @ 2021-09-01: "30ffe98601e...cf1f8e34a34 config-based-hooks-restart -> nasamuffin/*"
##
## NOTE: The *-4 here has not been submitted / is locally rebased,
## created because I publicly mentioned the *-3:
## https://lore.kernel.org/git/cover-v5-00.36-00000000000-20210902T125110Z-avarab@gmail.com/
##
## NEEDS: es-avar/config-based-hooks-7
avar-nasamuffin/config-based-hooks-restart-4

#########################################################
# Has a "Will merge to 'master'" note in What's Cooking #
#########################################################

## Set GIT_TRACE_PACKET identity for ls-remote
##
# => https://lore.kernel.org/git/patch-1.1-5d3a2b96500-20210823T131533Z-avarab@gmail.com
avar/trace-ls-remote-identity

## Change die("fatal: xxx") message to die("xxx")
##
# => https://lore.kernel.org/git/patch-1.1-54eb94f6e7a-20210823T130724Z-avarab@gmail.com
avar/rebase-no-fatal-fatal-in-die

############################
# Merged to 'next' already #
############################

## Remove dead "(!resolved && errno == EISDIR)" code in
## refs/files-backend.c and "reflog expire: don't lock reflogs using
## previously seen OID"
##
## Note: The *-6 is unsubmitted, for rebasing
#
# => https://lore.kernel.org/git/cover-v5-00.13-00000000000-20210823T113115Z-avarab@gmail.com
avar/files-backend-remove-dead-errno-eisdir-6

## Pass "failure_errno" up from refs.c and refs/files-backend.c. I
## helped / took over submission of this from Han-Wen.
##
## NEEDS: avar/files-backend-remove-dead-errno-eisdir
##
## NOTE: Really a "v5" + N now, i.e. I picked up his v5, submitted 2x
## on top (there was a "v6?", note the question mark), so v7, v8...
##
## Note: The *-6 is unsubmitted, for rebasing
##
# => https://lore.kernel.org/git/cover-v10-0.8-00000000000-20210823T114712Z-avarab@gmail.com
avar-review/pr-git-1012/hanwen/einval-sideband-v5-6

## A gitster/hn/reftable rebased on
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-5 + fixups. For
## the original see pr-git-1054/hanwen/libreftable-v3 at:
## https://lore.kernel.org/git/pull.1054.v3.git.git.1629207607.gitgitgadget@gmail.com/
##
## To diff the two:
##
##    git range-diff origin/master..pr-git-1054/hanwen/libreftable-v3 avar-review/pr-git-1012/hanwen/einval-sideband-v5-5..avar-hanwen/reftable
##
## See https://lore.kernel.org/git/87a6lbgqey.fsf@evledraar.gmail.com/
## for a side discussion about the greater status of this topic
## v.s. avar/files-backend-remove-dead-errno-eisdir-5 and
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-5
##
## See https://lore.kernel.org/git/877dgch4rn.fsf@evledraar.gmail.com/
## for my general skepticism that this is anywhere near ready.
##
## This has fixups on top to make it work with my base serieses noted
## above.
##
## NOTE: The *-2 is unsubmitted, created for a rebase, hopefully
## Han-Wen picks it up from me again...
##
## NOTE: Ejected @ 2021-09-02, has SANITIZE=leak failures in core
## tests, and Han-Wen will re-roll eventually...
#
# => https://lore.kernel.org/git/cover-v4-00.28-00000000000-20210823T120208Z-avarab@gmail.com
# => https://lore.kernel.org/git/patch-1.1-f7d9c8af0c-20210827T055608Z-avarab@gmail.com (fixup)
#avar-hanwen/reftable-2

#######################################################
# Has a "Will merge to 'next'" note in What's Cooking #
#######################################################

# A hotfix merge for avar-nasamuffin/config-based-hooks-restart plus
# avar-ben-boeckel/refactor-advice-globals
avar-nasamuffin/config-based-hooks-restart-plus-avar-ben-boeckel/refactor-advice-globals

## Initially submitted as
## https://lore.kernel.org/git/20210805230321.532218-1-mathstuf@gmail.com/
## (saved as avar-ben-boeckel/refactor-advice-globals-orig).
##
## I then submitted a RFC v3 at
## https://lore.kernel.org/git/RFC-cover-v3-0.4-0000000000-20210806T191231Z-avarab@gmail.com;
## so the version here is 2 + N
##
## TODO: Submit avar-ben-boeckel/refactor-advice-globals-3? Created it
## for rebasing.
##
## => https://lore.kernel.org/git/cover-v4-0.4-00000000000-20210823T103719Z-avarab@gmail.com
avar-ben-boeckel/refactor-advice-globals-3

## Fix a memory leak in mailmap.c
##
## NOTE: Junio reworded the commit message per feedback on the patch, see:
##       git range-diff origin/master avar/fix-memory-leak-in-mailmap gitster/ab/mailmap-leakfix
##
# => https://lore.kernel.org/git/patch-1.1-f11eb44e4c5-20210831T134023Z-avarab@gmail.com
avar/fix-memory-leak-in-mailmap

## Fix a memory leak in protocol-caps.c
##
# => https://lore.kernel.org/git/patch-1.1-9acbc21cdd3-20210831T134632Z-avarab@gmail.com
avar/fix-memory-leak-in-protocol-caps

## Fix various API uses of progress.c, a version+rebase of
## https://lore.kernel.org/git/20210620200303.2328957-1-szeder.dev@gmail.com
##
# https://lore.kernel.org/git/cover-v3-0.2-00000000000-20210823T102722Z-avarab@gmail.com
avar-szeder/progress-bar-fixes-3

#####################################################################
# Most active -- Things I'm actively pursuing & have been submitted #
#####################################################################

## Report problems with loose objects better
##
# => https://lore.kernel.org/git/cover-00.21-00000000000-20210710T133203Z-avarab@gmail.com
avar/fsck-error-on-completely-invalid-5

## Per https://lore.kernel.org/git/87lf80l1m6.fsf@evledraar.gmail.com/
## I re-did this myself to change over to the new hook API without any
## config change behavior.
##
## Maybe I want es-avar/config-based-hooks-2-after-gently after this?
##
## The version is -1 in public, due to my screwing around.
##
## NOTE: The *-7 here is a WIP v6, not needed/sent yet.
#
# => https://lore.kernel.org/git/cover-v5-00.36-00000000000-20210902T125110Z-avarab@gmail.com
es-avar/config-based-hooks-7

## Prep for changes I need for "bundle create --stdin". Soft-depends
## on avar/pack-objects-tests-and-stdin-packs-segfault-fix, applies on
## master, but better tested in combination with the test series.
##
## TODO: Is this good enough? Per
## https://lore.kernel.org/git/87sg00qfbp.fsf@evledraar.gmail.com/;
## have a v6 locally for rebasing.
##
# https://lore.kernel.org/git/cover-0.5-00000000000-20210726T124425Z-avarab@gmail.com
avar/setup-revisions-stdin-parsing-api-6

## Refactor test-lib.sh testing into a lib-subtest.sh.
##
## Needed in preparation for avar/support-test-verbose-under-prove-2
#
# https://lore.kernel.org/git/cover-v3-0.9-0000000000-20210805T103237Z-avarab@gmail.com
avar/t0000-lib-subtest-split-and-refactor-3

## General API cleanup of serve.[ch], started as a series to add and
## use a git_config() callback function instead of manual
## configuration.
##
## That's ejected from avar/transport-use-git-config-callback-4,
## including the call_{command,advertise}() patch. Maybe bring it back
## later?
##
## TODO: Have unsent v5, send it?
##
# => https://lore.kernel.org/git/cover-v4-00.10-00000000000-20210805T011823Z-avarab@gmail.com
avar/transport-use-git-config-callback-5

## Add correct dependencies for the tags targets
#
# => https://lore.kernel.org/git/cover-v4-0.5-00000000000-20210804T225222Z-avarab@gmail.com
avar/makefile-tags-targets-deps-4

## Add a SANITIZE=leak test mode
##
## See also avar/tests-add-sanitize-leak-test-mode-wip and
## avar/test-add-sanitize-leak-test-mode-ejected-progress-fix-todo
##
## NOTE: Split up into avar/fix-memory-leak-in-mailmap,
## avar/fix-memory-leak-in-protocol-caps and other
## avar/fix-memory-leak-* or avar/*-plug-memory-leak below.
#
# => https://lore.kernel.org/git/cover-v3-0.8-00000000000-20210831T132546Z-avarab@gmail.com
avar/tests-add-sanitize-leak-test-mode-3

## Improve parse_options() patterns in builtin/commit-graph.c
##
# => https://lore.kernel.org/git/cover-v4-0.7-00000000000-20210823T122854Z-avarab@gmail.com
avar/commit-graph-usage-4

## Fix a reported segfault in "git [fetch|pull] --set-upstream" on detached HEAD
##
## Submitted it without noticing
## https://lore.kernel.org/git/xmqqsg0anxix.fsf@gitster.g; As of
## 2021-08-23 that one's languishing, so I sent a v2 of mine with
## s/die/warning/ and whitespace fixes.
##
# => https://lore.kernel.org/git/patch-v4-1.1-0caa9a89a86-20210831T135212Z-avarab@gmail.com
avar/fetch-pull-set-upstream-segfault-4

## fetch-negotiator: don't annoyingly segfault on API misuse
##
## OUTSTANDING: Not picked up, poked Junio at
## https://lore.kernel.org/git/87v93wflm0.fsf@evledraar.gmail.com
##
# => https://lore.kernel.org/git/patch-1.1-f1da49de63-20210727T000203Z-avarab@gmail.com
avar/fetch-negotiator-bug-not-segfault-on-api-misuse

## Emit stray http.c error with error_errno()
##
## OUTSTANDING: Not picked up, poked Junio at
## https://lore.kernel.org/git/87v93wflm0.fsf@evledraar.gmail.com/T/#m9ef0620879bd1463e185473f0704f6856717b17d
##
# => https://lore.kernel.org/git/patch-1.1-ad71faa6da-20210727T000657Z-avarab@gmail.com
avar/packfile-uri-use-error-errno-2

## Show progress output on "git bundle unbundle" + API I need for
## bundle-uri to show progress in index-pack.
##
## TODO: Re-roll per feedback at
## https://lore.kernel.org/git/cover-v3-0.5-00000000000-20210826T140414Z-avarab@gmail.com/
##
# => https://lore.kernel.org/git/cover-v3-0.5-00000000000-20210826T140414Z-avarab@gmail.com
avar/bundle-progress-3

## Log the N process parents on Linux, an improved version of
## https://lore.kernel.org/git/87o8agp29o.fsf@evledraar.gmail.com/
##
## OUTSTANDING: Not picked up, re-poke?
#
# https://lore.kernel.org/git/cover-v3-0.6-0000000000-20210827T080054Z-avarab@gmail.com
avar/trace2-log-n-process-parents-on-linux-3

## Implement a user request to remove the trailing dot from the
## message where we whine about the gc.log file.
##
# => https://lore.kernel.org/git/patch-1.1-27f00a664e6-20210831T143536Z-avarab@gmail.com
avar/git-gc-log-message-no-trailing-dot

## Align output such as "git stash -h" which has continued "\n" in the
## parse_options() usage messaging.
##
## OUTSTANDING: Not picked up, re-poke?
#
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210901T110917Z-avarab@gmail.com
avar/parse-options-align-newline-continued-output

## Remove USE_PARENS_AROUND_GETTEXT_N
##
## TODO: Re-roll to address feedback
#
# >= https://lore.kernel.org/git/patch-1.1-d24f1df5d49-20210901T112248Z-avarab@gmail.com
avar/remove-use-parens-around-gettext-n

## Print the correct usage message on "git stash -x" and "git stash
## push -x".
##
## OUTSTANDING: Not picked up
#
# => https://lore.kernel.org/git/patch-1.1-47c582f1218-20210901T111930Z-avarab@gmail.com
avar/stash-print-correct-usage-on-assumed-push

## Add a "global progress" variable and some prep refactoring
##
## Needs the test-mode from avar/test-progress-helper
#
# https://lore.kernel.org/git/cover-0.8-0000000000-20210722T125012Z-avarab@gmail.com
avar/global-progress

## Nuke some dead git-sh-setup code and move some of it to its last
## users.
##
## NOTE: Partially stole from avar/sh-remove-sha1-variables at the end
## of the series
#
# => https://lore.kernel.org/git/cover-0.9-00000000000-20210902T155758Z-avarab@gmail.com
avar/dead-git-sh-setup-code-and-move-to-last-users

##########################
# Ready? but unsubmitted #
##########################

## Fix a memory leak in test-prio-queue.c and test-parse-options.c
##
## NEEDS: avar/tests-add-sanitize-leak-test-mode
avar/tests-post-add-sanitize-leak-test-mode-fix-leaks

## Fix a memory leak in builtin/commit-graph.c
avar/commit-graph-plug-memory-leak
## Fixup for merge with avar/commit-graph-plug-memory-leak
avar/commit-graph-usage-4-plus-avar/commit-graph-plug-memory-leak

## Fix a memory leak in builtin/merge-base.c
avar/merge-base-plug-memory-leak

## Fix a memory leak in builtin/repack.c
##
## TODO: Has failures in t0410-partial-clone.sh etc.
#avar/repack-plug-memory-leak

## Fix a memory leak in builtin/show-branch.c
##
## TODO: Has failures in t3202-show-branch.sh
#avar/show-branch-plug-memory-leak

## Refactor format-patch tests a bit to make them more readable
avar/format-patch-test-prep

## Nuke the check_bindir script
avar/nuke-check-bindir

## Change strvec.[ch] to expose strvec_push_nodup()
avar/strvec-expose-strvec_push_nodup

## Post-avar-jk/no-ancient-curl-3, make curl dependency management
## cleaner.
avar/no-ancient-curl-again

## Fix a buggy/redundant init pattern in "test-tool run-command"
avar/test-tool-run-command-buggy-init-pattern

## Add some more --verbose --verbose output to fetch-pack
avar/fetch-pack-debug-friendlier

## Move http-fetch.c over to parse_options() and clean it up.
avar/http-fetch-parse-options

## Remove the ancient code from http-fetch.c only needed to support
## git-clone.sh
##
## NEEDS: avar/http-fetch-parse-options
##
avar/http-fetch-parse-options-remove-ancient

## Free memory in various transport, http and curl related functions
##
## See avar/http-curl-transport-add-missing-free-post-wip for some
## more which segfaults, it's to do with do_take_over() and struct
## casting etc. Memory management mess.
avar/http-curl-transport-add-missing-free

## Refactor builtin/checkout.c to a better *_INIT pattern
avar/checkout-refactor-memset-to-init

## Refactor out the nasty "ln || ln -s || cp" inline installation
## scripts in the Makefile into a helper script, and fix bugs.
##
## TODO: Send the v2
##
# => https://lore.kernel.org/git/cover-0.7-00000000000-20210329T162327Z-avarab@gmail.com/
avar/makefile-ln-or-cp-script-2

## A handy strbuf utility that makes a few lines of code easier, worth
## it?
avar/strbuf-chomp

## Don't be so lazy about updating the progress bar
avar/progress-bar-more-frequent-updates

#####
##### This whole greater progress topic was initially submitted as
##### https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##### i.e. ending in 795187b3824 (entry: deal with unexpected
##### "Filtering content" total, 2021-06-23)
#####
#####
##### TODO: Maybe d7e79d9702 (avar/progress-support-old-style-usage) helps?
#####
### These are all bundled, and need each other in turn:

## Get rid of the "sparse" mode
##
## NEEDS: avar-szeder/progress-bar-fixes, or rather has a trivial conflict in midx.c
avar/progress-bar-remove-sparse-mode

## Make the "struct progress" be declared in progress.h, and refactor the test code.
avar/progress-make-progress-h-public-and-change-tests-code
## Change how "is it done?" is passed
avar/progress-is-done-passing
## Refactor "title" to strbuf and refactor/fix display() logic
avar/progess-strbuf-display-refactoring
## Emit progress on first signal, show "stalled"
avar/emit-progress-on-first-signal-if-stalled
## Assertions of progress.c usage,split from
## https://lore.kernel.org/git/20210620200303.2328957-1-szeder.dev@gmail.com
#avar-szeder/progress-bar-assertions
## Needs avar/emit-progress-on-first-signal-if-stalled, show spinner
## etc. on stalled progress.
#avar/wip-nodejs-like-spinner-on-stalling

## Fix the caller in entry.c which may abort its progress, but still
## wants stop_progress()
avar/stop-progress-early-fix
## Add an increment_progress() function for the common
## display_progress(progress, i + 1) cases.
##
## NEEDS: avar-szeder/progress-bar-fixes
avar/add-and-use-increment-progress-function

## TODO: Depended on now-merged avar/test-lib-various-6; Split up from
## avar/test-lib-functions-argument-checking-4
avar/test-lib-helper-file-size-split-to-file-sizes

## TODO: Was waiting on now-merged
## avar/t4018-diff-hunk-header-regex-tests-4-beginning-2, was held off
## as too large per:
##
# => https://lore.kernel.org/git/cover-00.11-00000000000-20210324T014604Z-avarab@gmail.com/
avar/t4018-diff-hunk-header-regex-tests-5

## Support creating bundles from starting points that aren't current
## refs.
avar/bundle-create-stdin-take-ref-names

# TODO: utility to dump header etc.
#avar/bundle-wip

## Trivial "git help" usage fixes
avar/help-builtin-usage-fixes

## Split up the user guides into guides and "formats"
##
## NEEDS: avar/help-builtin-usage-fixes
#
avar/doc-help-split-up-guides-into-format

## Make a gitformats(5) and e.g. gitformat-bundle(5).
##
## Needs avar/doc-help-split-up-guides-into-format
avar/doc-gitformats

## Fix behavior in the .gitmodules check to not report sections in
## .gitmodules once for each key in the section.
##
## NEEDS avar/add-serve-upload-pack-protocol-tests
avar/gitmodulesdisallowed-section-names-warning-fix-2

## Refactor how protocol v2 code does init, and add an OO version of
## packet_write() called packet_writer_write_len().
avar/object-info-pkt-line-upload-pack-minor-refactoring-init

## Bundle URI design doc
##
## STACKED ON avar/add-basic-blobpackfileuri-test
#avar/bundle-uri-design-doc

## Implement uploadpack.bundleURI support for the server
##
## WAS e63f219b20a (avar/bundle-uri-server-old) before massive rebase
avar/bundle-uri-server

## Implement uploadpack.bundleURI support for the client
##
## NEEDS: avar/bundle-uri-server
avar/bundle-uri-client

## Actually implement the "clone" support (and almost incremental
## "fetch" support)
##
## Prior discussion:
##
## * Jeff King's 2011 patches:
##   https://lore.kernel.org/git/20111110074330.GA27925@sigill.intra.peff.net/
##
## * Me talking with Jonathan Tan about early packfile-uri:
##   https://lore.kernel.org/git/87k1hv6eel.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87pnpbsra8.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87zh35okzy.fsf@evledraar.gmail.com/
##
## * Discussion about early .gitmodules checks for packfile-uri:
##   https://lore.kernel.org/git/87o8hk820f.fsf@evledraar.gmail.com/
##
## NEEDS: avar/bundle-uri-client
# => https://lore.kernel.org/git/RFC-cover-00.13-0000000000-20210805T150534Z-avarab@gmail.com
avar/bundle-uri-client-clone

##############################################
# Waiting on the above (or other dependency) #
##############################################

## WIP make the format-patch Message-IDs prettier.
##
## NEEDS: avar/format-patch-test-prep
avar/format-patch-prettier-message-id

## Refactor parse-options.[ch] and various users to use more enum +
## remove old almost unused OPT_ARGUMENT (refactored) and add a
## PARSE_OPT_ERROR_AT_NON_OPTION flag.
##
## NEEDS: avar/commit-graph-usage-4
avar/parse-options-add-and-use-error-at-non-option-flag

# Make advise() always emit the config blurb at the end. Has a
# semantic conflict with es-avar/config-based-hooks-6.
#
# NEEDS: avar-ben-boeckel/refactor-advice-globals
# CONFLICTS: es-avar/config-based-hooks-6
avar/make-advice-always-emit-config-blurb

## Post-avar/files-backend-remove-dead-errno-eisdir-2, cleanup the
## builtin/reflog.c etc. code.
##
## NEEDS: avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir
avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir

## Refactor refs API users from refs_resolve_ref_unsafe() to
## refs_resolve_ref_unsafe_with_errno(). Ejected from v7 of
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-2
##
## NEEDS: avar-review/pr-git-1012/hanwen/einval-sideband-v5-2
avar/refs-change-refs_resolve_ref_unsafe-to-errno-form

## Simplify prepare_repo_settings
##
## Has a trivial conflict with current in-flight fsmonitor work (as of
## 2021-06-14). Re-roll and submit it afterwards.
#
# => https://lore.kernel.org/git/patch-1.1-e1d8c842c70-20210428T161817Z-avarab@gmail.com/
avar/repo-settings-cleanup

## Post avar/t4018-diff-hunk-header-regex-tests-5
# => https://lore.kernel.org/git/20210215155020.2804-1-avarab@gmail.com/
avar/diff-W-context-4

## Post avar/pcre2-fixes-diffcore-pickaxe-pcre-etc-4
avar/pcre2-conversion-of-diffcore-pickaxe

## Post avar/tree-walk-api-refactor-prep
avar/tree-walk-api-refactor-6
## TODO: No tests fails on this, but building this at cd6c70171f2
## (tree-walk.h API: move canon_mode() back out of
## decode_tree_entry(), 2021-03-04) fails with:
##
##    ~/g/git/git -P blame builtin/init-db.c
##
## It's something to do with the old git.git entries that have odd modes:
##
## diff --git a/tree-walk.c b/tree-walk.c
## index 35a1683d801..e761cec542d 100644
## --- a/tree-walk.c
## +++ b/tree-walk.c
## @@ -52,6 +52,12 @@ static int decode_tree_entry(struct tree_desc *desc, const char *buf, unsigned l
##         desc->entry.pathlen = len - 1;
##         oidread(&desc->entry.oid, (const unsigned char *)path + len);
##
## +       if (mode != canon_mode(mode))
## +               error("%s (%o to %o; %d to %d, %o to %o): %s", oid_to_hex(&desc->entry.oid),
## +                     mode, canon_mode(mode), S_ISDIR(mode), S_ISDIR(canon_mode(mode)),
## +                     (mode & 0777), (canon_mode(mode) & 0777),
## +                     path);
## +
##         return 0;
##  }
##
## vm git (avar/tree-walk-api-canon-mode-switch $>) 0 $ ~/g/git/git -P blame -M0 builtin/init-db.c
## error: cf550e258cff644726561052d129a03c4f7d2717 (100664 to 100644; 0 to 0, 664 to 644): README
## error: 88c2fa8d95b2cf6c0b2cd78c074659885625766d (100664 to 100644; 0 to 0, 664 to 644): cache.h
## error: 3c47d79a16305d326a65768fe9f37ee25928510b (100664 to 100644; 0 to 0, 664 to 644): cat-file.c
## error: 7d16691aa9d51b5b4670d5837b3527ee7c7da79c (100664 to 100644; 0 to 0, 664 to 644): check-files.c
## error: 8d5e4cd148f6111ab7e0bfb7f9142693e08f66bd (100664 to 100644; 0 to 0, 664 to 644): checkout-cache.c
## error: 50fe19652f1b440c4123f92af886e47bb418bb11 (100664 to 100644; 0 to 0, 664 to 644): commit-tree.c
## error: 826812af83f1f267014860f285fc03286bc5329e (100664 to 100644; 0 to 0, 664 to 644): diff-tree.c
## error: 3fbcd2c7e99fa5e27fa7edad0e2bd65d3b557fe7 (100664 to 100644; 0 to 0, 664 to 644): fsck-cache.c
## error: ff2b11a3b33ecba970f59bef3ba63dcc29b53855 (100664 to 100644; 0 to 0, 664 to 644): init-db.c
## error: feeding unmodified init-db.c to diffcore
## fatal: internal error in blame::find_origin (X)
avar/tree-walk-api-canon-mode-switch

## Post avar/test-lib-various-4 and avar/t0000-lib-subtest-split-and-refactor
avar/support-test-verbose-under-prove-2

## Post avar/doc-make-lint-fixes-2
avar/doc-config-includes

## Post avar/object-as-type-simplified-3
##
## In a WIP state, see the discussion at
## https://lore.kernel.org/git/YGV8UOsYUQt7Lpto@coredump.intra.peff.net/
## and the messy branch I have here. Test case at
## https://lore.kernel.org/git/YGTGgFI19fS7Uv6I@coredump.intra.peff.net/
avar/object-is-type-error-refactor-4

## Post avar/fsck-error-on-completely-invalid-4
avar/cat-file-and-other-allow-unknown-type-refactoring

#############################################
# Work in progress, but barely passes tests #
#############################################

## Refactor fetch.c to make a couple of variables be lazily generated
## by their users.
avar/fetch-format-lazy

## Better free() behavior and general better string-list.h API. See
## avar/string-list-strmap-api-free-etc-fixes-old for some strmap
## etc. changes
##
## NEEDS: avar/initializer-cleanup
avar/string-list-strmap-api-free-etc-fixes

## Clarify the "advertise" callback in serve.c. I had a WIP of
## avar/bundle-uri where I did:
##
## int bundle_uri_advertise(struct repository *r, struct strbuf *value)
## {
## 	if (!advertise_bundle_uri
## 		die(_("we support 'bundle-uri' but do not have it configured"));
## 	return advertise_bundle_uri;
## }
##
avar/serve-add-comment-about-advertise-caveat

## A WIP patch to respect NO_GETTEXT=Y in Windows CI. See
## https://lore.kernel.org/git/878s2m8ns9.fsf@evledraar.gmail.com/
avar/makefile-respect-no-gettext-in-artifacts-tar

## Optimize cat-file --batch-check, see my
## https://lore.kernel.org/git/87eecf8ork.fsf@evledraar.gmail.com/
## (this one is slightly improved)
##
avar/optimize-cat-filebatch-object-write-for-common-case

## Miscellanious designated initializer & initializer cleanup. Related
## to avar/modern-init, but they don't inter-depend.
##
## STACKED ON: avar/test-tool-run-command-buggy-init-pattern
avar/initializer-cleanup

## Make the "git remote -v" output prettier and more dense. Align the
## remote names, and don't show both "fetch" and "push" URL lines in
## the common case where they're the same.
avar/remote-prettier-show-v-output

## Build command-list.h incrementally, see
## https://lore.kernel.org/git/87r1gqxqxn.fsf@evledraar.gmail.com/
#avar/generate-cmdlist-incrementally

## Stress test the test suite under a new GC racy mode, and fix racy
## bugs.
##
## Needs to be made to pass under GIT_TEST_GC=true
## GIT_TEST_GC_AUTO_DETACH=true
##
#avar/more-gc-detach-under-lock

####################
# TODO: Categorize #
####################

avar/fsck-doc

## Will segfault on orphan + post-checkout hook (the "to" OID is null)
#avar/worktree-add-orphan
#avar/makefile-misc-crap-improved-make-clean
avar/test-lib-test-oid-to-dir

#########################################################
# Not picked up (or later ejected) by Junio, re-pursue? #
#########################################################

## Be more gentle in setup_git_directory_gently()
#
# => https://lore.kernel.org/git/patch-1.1-fc26c46d39-20210722T140648Z-avarab@gmail.com
avar/do-not-die-on-setup-gently

## Documentation/Makefile: don't re-build on 'git version' changes
##
## TODO: Junio likes the "regression", maybe formalize the "build with
## a custom git version" part of this?
##
# => https://lore.kernel.org/git/patch-1.1-911881ce19f-20210702T115617Z-avarab@gmail.com
avar/make-asciidoc-flags

## Stop saying "write new commands in Perl or SH"
##
# => https://lore.kernel.org/git/patch-1.1-98b1f938f7d-20210417T122959Z-avarab@gmail.com/
avar/doc-codingguidelines-2

## Do "mv $@+ $@" for object files, so I can run "make test" while git
## builds, and AIX builds don't suck. Now on top of my
## avar/makefile-delete-on-error. Junio didn't like it:
## https://lore.kernel.org/git/xmqqmtuj6ttn.fsf@gitster.g/
avar/makefile-rename-git-binary-not-in-place-3

## TODO: Needs a v2 re-roll per https://lore.kernel.org/git/875z15kor5.fsf@evledraar.gmail.com/
## TODO@2021-05-19: Needs fsck.c and notes.c conflict resolution with master
##
## TODO@2021-07-30: Re-started and re-based a v3, not submitted yet
##
# => https://lore.kernel.org/git/cover-00.19-00000000000-20210331T190531Z-avarab@gmail.com/
avar/tree-walk-api-refactor-prep-3

## TODO: Re-roll per https://lore.kernel.org/git/87o8eogs2r.fsf@evledraar.gmail.com/ etc.
## Refactor "git config" tristate
# => https://lore.kernel.org/git/cover-0.6-0000000000-20210408T133125Z-avarab@gmail.com/
avar/git-config-bool-or-auto

## Various object.c refactoring (stacked one on top of
## another).
##
## There's a textual conflict with BMC's hash-object.c changes. See
## https://lore.kernel.org/git/87mttx121j.fsf@evledraar.gmail.com/
#

## TODO: Send a v3
#
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T124428Z-avarab@gmail.com
avar/object-api-misc-small-3

# TODO: Send a v3
#
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T125415Z-avarab@gmail.com
avar/object-api-enum-object-type-misc-3

# TODO: Send a v3
#
# => https://lore.kernel.org/git/cover-0.8-0000000000-20210420T133218Z-avarab@gmail.com
avar/object-as-type-simplified-3

## TODO: Address these and send a v4:
## => https://lore.kernel.org/git/xmqqr1it92da.fsf@gitster.g/
## => https://lore.kernel.org/git/xmqqmtth91wx.fsf@gitster.g/
##
## Use 'test -f "$@"' for argument checking
#
# => https://lore.kernel.org/git/cover-0.4-00000000000-20210423T072824Z-avarab@gmail.com
avar/test-lib-functions-argument-checking-4

## Remove and refactor old test variables
##
## NOTE: Partially rolled into
## avar/dead-git-sh-setup-code-and-move-to-last-users
##
# => https://lore.kernel.org/git/20210311001447.28254-1-avarab@gmail.com/
avar/sh-remove-sha1-variables-2

################################
# Ejected by Junio, re-pursue? #
################################

## Get rid of "Alice" and "Bob" references in our documentation.
##
## "Let's shelve this one for now, as it does not seem to solve any
## real problems (other than ceasing to use Alice and Bob in contexts
## that do not call for Eve)." --
## https://lore.kernel.org/git/xmqq8s2ga19f.fsf@gitster.g
#
# => https://lore.kernel.org/git/cover-0.6-00000000000-20210615T161330Z-avarab@gmail.com
#avar/doc-get-rid-of-alice-and-bob

## Junio had avar/progress-api-use-minor~1 is in next @ 2021-07-03 and
## merged it to master @ 2021-07-09. This tip was ejected. Revisit it
## along with my other "progress" topic(s).
##
## Has a gient thread at
## https://lore.kernel.org/git/8f336b1b-6cb7-8277-79d5-0f331159b00c@gmail.com/
## about whether 2/2 was off by one or not.
avar/progress-api-use-minor-maybe-again

avar/makefile-do-not-build-fuzz-under-all
avar/test-lib-bail-out-on-accidental-prove-invocation-2
avar/lookup-object-init-to-NULL

## Not accepted per: https://lore.kernel.org/git/xmqqeeffe669.fsf@gitster.g/
##
## Declare C99 variadic macros a hard dependency
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210412T105422Z-avarab@gmail.com/
avar/variadic-macros

#################
# Ejected by me #
#################

## A rescue of the splitting of the t/helper/test-read-cache.c RFC
## patch from
## https://lore.kernel.org/git/20210317132814.30175-6-avarab@gmail.com/
##
## EJECTED per my
## https://lore.kernel.org/git/87tuj7xhqo.fsf@evledraar.gmail.com/
#
# => https://lore.kernel.org/git/cover-v2-0.4-00000000000-20210824T091204Z-avarab@gmail.com
#avar/split-up-test-tool-read-cache-2

## Less hardcoded 8192 in strbuf.c + make strbuf_fread() use a default
##
## Related to but does not interdepend on
## avar/imap-send-refactor-stdin-reading
##
## TODO: A bunch of feedback for a v2, seems to be a non-starter. Dropped it.
##
# => https://lore.kernel.org/git/cover-0.3-00000000000-20210707T103712Z-avarab@gmail.com
#avar/strbuf-hint-hardcoding-and-strbuf-fread-hint-default

## Ejected b00e7c02aee (serve.c: add call_{advertise,command}()
## indirection, 2021-06-28) and 271b4650d27 (serve: add support for a
## "startup" git_config() callback, 2021-03-24) from
## avar/transport-use-git-config-callback-4. Maybe I'll want it back?
#
#avar/transport-use-git-config-callback-3

## Adjust Makefile and config.mak.uname to stop hardcoding
## command-list.h and config-list.h; Needed for eventually adding
## hook-list.h in avar/add-hook-list-h
##
## NOTE: Created v3 to rebase on master, not sent yet (and maybe won't
## be)
##
## NOTE: Re-folded into es-avar/config-based-hooks-5, Junio wasn't
## picking it up separately.
##
# => https://lore.kernel.org/git/cover-0.3-0000000000-20210629T190137Z-avarab@gmail.com
#avar/stop-hardcoding-generated-h-3

## Add a hook-list.h source of truth, and some prep for
## es-avar/config-based-hooks-4
##
## TODO: Remove René's SOB?
## https://lore.kernel.org/git/76bd9738-65e8-3696-7934-8090b5912427@web.de/
## Junio did it already when he queued it.
##
## NOTE: Created v3 to rebase on master, not sent yet (and maybe won't
## be)
##
## NOTE: Re-folded into es-avar/config-based-hooks-5, Junio wasn't
## picking it up separately.
#
# => https://lore.kernel.org/git/cover-0.3-0000000000-20210629T183325Z-avarab@gmail.com
#avar/add-hook-list-h-3

## Adds various tests for "fetch", "ls-refs", "object-info"
## etc. etc. Used to be fetch-etc-testbasic-blobpackfileuri-test,
## that's now a part of this.
##
## TODO: Has a couple of tests in avar/test-lib-get-rid-of-packetize-3
## that could go back in.
##
## Let's have this wait for the whole bundle-uri etc. saga
#avar/add-serve-upload-pack-protocol-tests

## Don't just die() in upload-pack.c and friends, instead transmit ERR
## packets in most/all cases.
##
## See prior art (discovered after I wrote this) and discussion at:
## https://public-inbox.org/git/20190305041139.GA19800@sigill.intra.peff.net/
## and
## https://lore.kernel.org/git/20190829141307.GE1797@sigill.intra.peff.net/
##
## NEEDS avar/add-serve-upload-pack-protocol-tests, but on top of
## avar/object-info-pkt-line-upload-pack-minor-refactoring-init for
## stacking.
#avar/serve-upload-pack-protocol-error-handling

## Rewrite [de]packetize() to use test-tool pkt-line instead, and
## refactor various test scripts + add a couple of more tests.
##
## The v4 of this topic dropped most of that, maybe pick it up again?
##
# => https://lore.kernel.org/git/cover-0.5-0000000000-20210714T005115Z-avarab@gmail.com
#avar/test-lib-get-rid-of-packetize-3

## The v2 version of this ejected the strftime() format attribute
## checking. See
## https://lore.kernel.org/git/cover-0.6-0000000000-20210713T080411Z-avarab@gmail.com
#avar/add-missing-format-specifiers

## Make the progress tests work under -v on a wide (or narrow, COLUMNS
## != 80) terminal
##
## Was submitted as part of the 25 patch
## https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##
## Replaced with avar/test-lib-set-columns-80 per the discussion on
## the patch.
##
# => https://lore.kernel.org/git/patch-1.1-cba5d88ca35-20210621T070114Z-avarab@gmail.com
#avar/progress-tests-80-columns

## Improve t4013 reliability
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210413T122645Z-avarab@gmail.com
avar/t4013-reliability-2

## Pick it up if I ever care about coccicheck again
# => https://lore.kernel.org/git/877dlwotjc.fsf@evledraar.gmail.com/
#avar/fix-coccicheck-4

## Folded into avar/send-email-fixes-and-speedup. Junio wasn't
## interested in it stand-alone. See
## https://lore.kernel.org/git/87a6peyfry.fsf@evledraar.gmail.com/
##
## Remove support for sendemail.smtpssl
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210411T144128Z-avarab@gmail.com/
#avar/send-email-smtp-config-minor

## The 1/2 of this was picked up, 2/2 wasn't OK'd
##
## Minor sparse-index.c fixes
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210505T121028Z-avarab@gmail.com
#avar/sparse-index-fixup

## Fix for a regression in my $remove_trash change
##
## Replaced with 560bf518923 (test-lib: avoid accidental globbing in
## match_pattern_list(), 2021-06-16)
##
# => https://lore.kernel.org/git/patch-1.1-436c723f4f8-20210616T082030Z-avarab@gmail.com
#avar/test-lib-scratch-directory

############################################
# TODO replaced by another un-landed topic #
############################################

## Don't check an enum value by doing negative comparisons in
## builtin/reflog.c. Split off from a WIP
## avar/files-backend-remove-dead-errno-eisdir-2, but then
## re-integrated
##
#avar/reflog-no-negative-comparison-against-enum

## Move raceproof_create_file() around, found it while working on
## avar-review/pr-git-1012/hanwen/einval-sideband-v5.
##
## Dropped, moved into
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-3 itself.
##
#avar/refs-backend-file-move-raceproof-create-file

############################################
# TODO (doesn't compile, fails tests etc.) #
############################################

## Log the N parents on Linux as well on Windows, WIP patch from
## http://lore.kernel.org/git/87o8agp29o.fsf@evledraar.gmail.com
##
#avar-nasamuffin/trace2-log-parent-process-name

## Should index-pack --check-self-contained-and-connected be some
## combination of --strict and --fix-thin instead? The ret = 1 return
## is used in fetch-pack.c
#avar/index-pack-connectivity-check-wip

## Post-avar/files-backend-remove-dead-errno-eisdir-2, fix up
## string-list API some more with common free patterns.

## Post-avar/tests-add-sanitize-leak-test-mode
#avar/tests-add-sanitize-leak-test-mode-wip
#avar/test-add-sanitize-leak-test-mode-ejected-progress-fix-todo

## Post-avar/git-config-bool-or-auto, fails on
## t4021-format-patch-numbered.sh
#avar/git-config-bool-or-auto-wip-enum

## Log the client-agent (and need to work on server-agent?) in serve.c
#avar/wip-agent-trace2-in-serve

#make-dot-not-HEAD-warn-3
## TODO: handle -t "some garbage" case
#avar/object-api-to-no-string-argument
#unconditional-abbrev-redo-2021-rebase
#avar/no-templates
#avar/test-lib-add-GIT_TEST_TIMEOUT-2
#avar/send-email-wip-drop-Git-pm-prereq

## Folded into avar/progress-bar-remove-sparse-mode, except for the
## last patch
#
#avar/get-rid-of-progress-special-snowflake

## My old WIP avar/bundle-uri code
#avar/bundle-uri-wip

######################
# TODO old bkng work #
######################

#reflog-expire-do-not-assert-oid-when-locking-refs
#hash-object-no-zlib
#check-collisions-config-5

##############################
# Other topics (not my code) #
##############################

#########################################################
# Has a "Will merge to 'master'" note in What's Cooking #
#########################################################

## Miscellanious designated initializer & initializer cleanup. Related
## to my now-landed bd4232fac33 (Merge branch 'ab/struct-init',
## 2021-07-16).
##
## NOTE: See avar/initializer-cleanup-code-changes for a related
## side-series.
##
## STACKED ON: avar/tests-add-sanitize-leak-test-mode-9
##
## TODO: The *-3 is for rebasing.
#
# => https://lore.kernel.org/git/cover-v2-0.5-00000000000-20210927T124407Z-avarab@gmail.com
avar/initializer-cleanup-3

## Trivially improve the message when there's no public key match, I
## was hoping to have tests for git-curl-compat.h by proxy, but
## there's no https:// test infrastructure...
#
# => https://lore.kernel.org/git/patch-1.1-6e65734cbce-20210924T100532Z-avarab@gmail.com
avar/curl-explicit-check-for-no-match-public-key

## A cleanup of config.c's git_config_key_is_valid()
##
# => https://lore.kernel.org/git/patch-1.1-ba40601a511-20210928T125516Z-avarab@gmail.com
avar/config-remove-unused-git_config_key_is_valid

## Add a SANITIZE=leak test mode
##
## See also avar/tests-add-sanitize-leak-test-mode-wip and
## avar/test-add-sanitize-leak-test-mode-ejected-progress-fix-todo
##
## NOTE: Split up into avar/fix-memory-leak-in-mailmap,
## avar/fix-memory-leak-in-protocol-caps and other
## avar/fix-memory-leak-* or avar/*-plug-memory-leak below.
##
## TODO: A v9? Hopefully not, but *-9 for rebasing.
#
# => https://lore.kernel.org/git/cover-v8-0.2-00000000000-20210923T091819Z-avarab@gmail.com
avar/tests-add-sanitize-leak-test-mode-9

## A restart of es-avar/config-based-hooks-7 and
## es/config-based-hooks, just the generated hook-list.h + Makefile
## infra.
##
## I proposed this new split-up in
## https://lore.kernel.org/git/875yut8nns.fsf@evledraar.gmail.com/;
## and per
## https://lore.kernel.org/git/cover-0.8-00000000000-20210923T095326Z-avarab@gmail.com
## Junio's going along with it.
#
# => https://lore.kernel.org/git/cover-v2-0.8-00000000000-20210926T185800Z-avarab@gmail.com
avar/Makefile-add-a-generated-hook-list-2

## Align output such as "git stash -h" which has continued "\n" in the
## parse_options() usage messaging.
##
# => https://lore.kernel.org/git/cover-v5-0.4-00000000000-20210921T132350Z-avarab@gmail.com
avar/parse-options-align-newline-continued-output-5

## Trivial "git help" usage fixes, move shellscript logic in the bash
## completion to C.
##
## TODO: Send v4 in response to feedback at
## https://lore.kernel.org/git/cover-v3-0.9-00000000000-20210921T223223Z-avarab@gmail.com/#t
##
# => https://lore.kernel.org/git/cover-v3-0.9-00000000000-20210921T223223Z-avarab@gmail.com
avar/help-builtin-usage-fixes-4

## Change the sparse target to not suck, now we'll generate things
## on-demand. EDIT: The "sparse" target still sucks, but v3 has a
## "sparse-incr" target, which'll do what I want.
##
## NOTE: Junio merged the v2, not the v3 or v4, fine I guess...?
## See https://lore.kernel.org/git/871r4xio37.fsf@evledraar.gmail.com/
##
# => https://lore.kernel.org/git/patch-v4-1.1-f31fa3e8282-20210928T014023Z-avarab@gmail.com
avar/Makefile-make-sparse-non-phony-4

## Refactor test-lib.sh testing into a lib-subtest.sh.
##
## Needed in preparation for avar/support-test-verbose-under-prove-2
##
# => https://lore.kernel.org/git/cover-v4-0.7-00000000000-20210922T111734Z-avarab@gmail.com
avar/t0000-lib-subtest-split-and-refactor-4

############################
# Merged to 'next' already #
############################

#######################################################
# Has a "Will merge to 'next'" note in What's Cooking #
#######################################################

## Miscellanious migration to *_INIT patterns, split off from
## avar/initializer-cleanup, but doesn't depend on it. Unlike
## avar/initializer-cleanup this requires some significant *.c (not
## *.h) code changes.
##
## STACKED ON (but make sure it's independent of!): avar/initializer-cleanup-2
##
## NOTE: Have *-5 for rebasing
##
# https://lore.kernel.org/git/cover-v4-0.5-00000000000-20211002T201434Z-avarab@gmail.com
avar/initializer-cleanup-code-changes-5

## Report problems with loose objects better
##
#
# => https://lore.kernel.org/git/cover-v10-00.17-00000000000-20211001T091051Z-avarab@gmail.com
avar/fsck-error-on-completely-invalid-10

#####################################################################
# Most active -- Things I'm actively pursuing & have been submitted #
#####################################################################

## Last of pass "failure_errno" up from refs.c and
## refs/files-backend.c. I helped / took over submission of this from
## Han-Wen.
##
## Junio queued this up up to 4/8 (inclusive) as
## gitster/hn/refs-errno-cleanup, this is the rest, queued at
## gitster/ab/refs-errno-cleanup.
##
## NOTE: Really a "v5" + N now, i.e. I picked up his v5, submitted 2x
## on top (there was a "v6?", note the question mark), so v7, v8...
##
## Note: The *-6 is unsubmitted, for rebasing
##
# => https://lore.kernel.org/git/cover-v10-0.8-00000000000-20210823T114712Z-avarab@gmail.com
avar-review/pr-git-1012/hanwen/einval-sideband-v5-6

## Per https://lore.kernel.org/git/87lf80l1m6.fsf@evledraar.gmail.com/
## I re-did this myself to change over to the new hook API without any
## config change behavior.
##
## NEEDS: avar/Makefile-add-a-generated-hook-list
##
## NOTE: Maybe I want es-avar/config-based-hooks-2-after-gently after
## this?
##
## ON HOLD while avar/Makefile-add-a-generated-hook-list
## progresses. When it's unblocked let's re-verison and split this.
##
## OLD NOTES follow (reword/delete when re-rolling after
## avar/Makefile-add-a-generated-hook-list):
##
## The version is -1 in public, due to my screwing around.
##
## TODO: Rewrite to not conflict with
## avar/test-run-command-testsuite-nuke
##
## NOTE: The *-7 here is a WIP v6, not needed/sent yet.
#
# => https://lore.kernel.org/git/cover-v5-00.36-00000000000-20210902T125110Z-avarab@gmail.com
es-avar/config-based-hooks-7

## Fix a reported segfault in "git [fetch|pull] --set-upstream" on detached HEAD
##
## Submitted it without noticing
## https://lore.kernel.org/git/xmqqsg0anxix.fsf@gitster.g; As of
## 2021-08-23 that one's languishing, so I sent a v2 of mine with
## s/die/warning/ and whitespace fixes.
##
# => https://lore.kernel.org/git/patch-v4-1.1-0caa9a89a86-20210831T135212Z-avarab@gmail.com
avar/fetch-pull-set-upstream-segfault-4

## fetch-negotiator: don't annoyingly segfault on API misuse
##
## OUTSTANDING: Not picked up, poked Junio at
## https://lore.kernel.org/git/87v93wflm0.fsf@evledraar.gmail.com and
## @ 2021-09-09 at
## https://lore.kernel.org/git/87fsuedl5x.fsf@evledraar.gmail.com
##
# => https://lore.kernel.org/git/patch-1.1-f1da49de63-20210727T000203Z-avarab@gmail.com
avar/fetch-negotiator-bug-not-segfault-on-api-misuse

## Emit stray http.c error with error_errno()
##
## OUTSTANDING: Not picked up, poked Junio at
## https://lore.kernel.org/git/87v93wflm0.fsf@evledraar.gmail.com and
## @ 2021-09-09 at
## https://lore.kernel.org/git/87fsuedl5x.fsf@evledraar.gmail.com
##
# => https://lore.kernel.org/git/patch-1.1-ad71faa6da-20210727T000657Z-avarab@gmail.com
avar/packfile-uri-use-error-errno-2

## Print the correct usage message on "git stash -x" and "git stash
## push -x".
##
## OUTSTANDING: Not picked up, poked @ 2021-09-09 at
## https://lore.kernel.org/git/87fsuedl5x.fsf@evledraar.gmail.com;
##
## UPDATE: Sent a v2 at 2021-09-21, let's see if that does it.
#
# => https://lore.kernel.org/git/patch-v2-1.1-d1b9790904c-20210921T134436Z-avarab@gmail.com
avar/stash-print-correct-usage-on-assumed-push-2

## Add a "global progress" variable and some prep refactoring
##
## Needs the test-mode from avar/test-progress-helper.
##
## This was "ON HOLD" for a while due to SZEDER's
## https://lore.kernel.org/git/20210901050406.GB76263@szeder.dev/; but
## per my
## https://lore.kernel.org/git/cover-v2-0.8-00000000000-20210920T225701Z-avarab@gmail.com/
## I think (and re-rolled a v2) that it should be safe to proceed with
## it.
##
## NOTE: Public version is vX-1. So *-3 is the list v2.
##
## TODO: Need a v3 (from *-3)?
#
# => https://lore.kernel.org/git/cover-v2-0.8-00000000000-20210920T225701Z-avarab@gmail.com/
avar/global-progress-4

## Support "env" matching in the includeIf syntax
##
## TODO: Forgot the [3] reference in commit message, have a WIP *-2 already.
##
## NEEDS (in v2): avar/git-config-key-value-params
##
## TODO: Send a v2?
##
# => https://lore.kernel.org/git/patch-1.1-1fe6f60d2bf-20210924T005553Z-avarab@gmail.com
avar/include-by-env-2

## Fix -h edge cases in grep, show-ref and ls-remote
##
## TODO: This is completely broken, *-2 should address it
##
## NEEDS: avar/parse-options-use-enum-not-int
#
# => https://lore.kernel.org/git/cover-0.3-00000000000-20210924T164820Z-avarab@gmail.com
avar/parse-options-h-2

## Change parse-options.c to do more compile-time goodies with enum.
#
# => https://lore.kernel.org/git/cover-v2-00.11-00000000000-20211001T142631Z-avarab@gmail.com
avar/parse-options-use-enum-not-int-2

## Update the COPYING file in response to
## https://lore.kernel.org/git/xmqqtui4k1j5.fsf@gitster.g/
#
# => https://lore.kernel.org/git/cover-v2-0.5-00000000000-20211005T170031Z-avarab@gmail.com
avar/COPYING-update-for-modern-era-2

## Make output in show_ambiguous_object() translatable.
##
## TODO: A v3 in response to typos etc.
#
# => https://lore.kernel.org/git/cover-v2-0.2-00000000000-20211004T142523Z-avarab@gmail.com
avar/object-make-ambiguous-object-advice-translatable-2

## Basic API cleanups
##
## NOTE: Independent of
## avar/object-make-ambiguous-object-advice-translatable (but
## avar/make-advice-always-emit-config-blurb needs to combine the two)
##
## OUTSTANDING: Not picked up as of https://lore.kernel.org/git/YVuT2aOzcjmgX+K0@nand.local/
##
# https://lore.kernel.org/git/cover-0.5-00000000000-20211004T015432Z-avarab@gmail.com
avar/advice-basic-api-cleanups

## The gitster/en/removing-untracked-fixes topic, rebased to stack on
## my other topics.
##
## I'd previously tried to re-arrange this topic on an earlier
## avar/post-sanitize-leak-test-mode-unpack-trees-and-dir of mine:
## ... https://lore.kernel.org/git/RFC-cover-v4-00.10-00000000000-20211004T004902Z-avarab@gmail.com
##
## STACKED ON: avar/avar/initializer-cleanup-code-changes-5
avar-en/removing-untracked-fixes

## Add and use an API to free "struct unpack_trees" and friends
##
## Conflicted with the in-flight topic from Elijah that partially does
## the same:
## https://lore.kernel.org/git/87lf3etaih.fsf@evledraar.gmail.com/. Initially
## submitted as
## https://lore.kernel.org/git/cover-00.10-00000000000-20211004T002226Z-avarab@gmail.com
##
## NEEDS: avar/tests-add-sanitize-leak-test-mode-9
## STACKED ON: avar-en/removing-untracked-fixes
#
# => https://lore.kernel.org/git/cover-0.2-00000000000-20211006T093405Z-avarab@gmail.com
avar/post-sanitize-leak-test-mode-unpack-trees-and-dir-2

## Post-SANITIZE=leak test mode asserting of existing tests
##
## NEEDS: avar/tests-add-sanitize-leak-test-mode-8
## STACKED ON: avar/post-sanitize-leak-test-mode-unpack-trees-and-dir
##
# => https://lore.kernel.org/git/cover-00.10-00000000000-20211006T094705Z-avarab@gmail.com
avar/tests-post-sanitize-leak-test-mode-existing-tests

## Small memory leak fixes (mostly test tools) with associated test
## changes to whitelist previously failing tests.
##
## NEEDS: avar/tests-add-sanitize-leak-test-mode-8
## STACKED ON: avar/tests-post-sanitize-leak-test-mode-existing-tests
#
# => https://lore.kernel.org/git/cover-0.7-00000000000-20211006T095426Z-avarab@gmail.com
avar/tests-post-sanitize-leak-test-mode-trivial-leaks-with-tests

##########################
# Ready? but unsubmitted #
##########################

## Refactor refs API users from refs_resolve_ref_unsafe() to
## refs_resolve_ref_unsafe_with_errno(). Was waiting on 842d45d293a
## (Merge branch 'ab/refs-files-cleanup', 2021-10-03).
##
## NEEDS: avar-review/pr-git-1012/hanwen/einval-sideband-v5-6
avar/refs-change-refs_resolve_ref_unsafe-to-errno-form

## Post-avar/files-backend-remove-dead-errno-eisdir-2, cleanup the
## builtin/reflog.c etc. code.
avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir

## Change "git reflog" to use parse_options(), add progress output,
## remove dead options parsing etc.
##
## NEEDS: avar/cleanup-refs-api-and-reflog-expire-post-no-eisdir
avar/reflog-cmd-parse-options-usage-etc

## Fix persistent annoying "rm -rf" error in t0004-unwritable.sh.
avar/test-lib-try-re-chmod-trash-directory

## Don't emit permission errors (e.g. in /etc/ on vm.nix.is) twice
avar/grep-double-error

## Document the CC variable at the top of the Makefile
avar/Makefile-document-CC-variable

## A cleanup of unused pkt-line code
avar/remove-unused-pkt-line-code

## A cleanup of xdiff's XDL_PTRFREE
avar/remove-unused-XDL_PTRFREE

## A cleanup of unused bitmap reset function
avar/remove-unused-bitmap-reset

## A cleanup of unused code that someone might complain about
avar/remove-unused-code-but-maybe-someone-cares

## Implement "git --config-key foo.bar --config-value value <cmd>"
avar/git-config-key-value-params

## Support creating bundles from starting points that aren't current
## refs. Previously depended on
## avar/setup-revisions-stdin-parsing-api-6
##
## TODO: Have memory leaks, debug with:
##
##     LSAN_OPTIONS="abort_on_error=1:suppressions=/home/avar/g/git/.git/lsan-suppress.txt:print_suppressions=0:strip_path_prefix=/home/avar/g/git/" ./t6021-bundle-stdin.sh  -vixd
avar/bundle-create-stdin-take-ref-names

## Refactor packfile.h a bit for consistency with
## avar/fsck-error-on-completely-invalid-7 changes.
##
## Doesn't conflict now, but maybe also pick up 5b9278e7bb4 (cache.h:
## move object functions to object-store.h, 2021-03-27) from
## avar/fsck-error-on-completely-invalid-6
avar/move-for-each-object-flags-to-packfile-h

## run-command.h: get rid of lots of uses of "argv" in favor of
## "args"
##
## Would conflict with es-avar/config-based-hooks-7, but I skipped
## those.
avar/run-command-use-less-argv-use-args-instead

## Switch over to using "args" in run-command.h, not ready yet (has an immediate revert)
##
## NEEDS: avar/run-command-use-less-argv-use-args-instead
## NEEDS: es-avar/config-based-hooks-7 (because it'll do a bunch of them implicitly)
## NEEDS: <yet to be written to do the rest>
avar/run-command-h-itself-use-args-not-argv

## Add a test mode for a bash "set -o pipefail" mode. See
## https://lore.kernel.org/git/20210120130447.GB8396@szeder.dev/ for
## the initial submission.
##
## This patch was in avar/tests-add-bash-pipefail-mode-2, but was
## split off from avar/tests-add-bash-pipefail-mode-3, which landed as
## 2c873f97913 (Merge branch 'ab/tests-various-fixup', 2021-02-12)
##
avar/tests-add-bash-set-o-pipefail-mode-restart

## Makefile: Sort and assert the sort of various target lists, and use
## manual list instead of "ls-files" and "find" commands.
##
## STACKED ON: avar/Makefile-make-sparse-non-phony
## NEEDS: avar/makefile-tags-targets-deps-5
avar/sort-targets-and-no-more-find-or-ls-files

## Build command-list.h incrementally, see
## https://lore.kernel.org/git/87r1gqxqxn.fsf@evledraar.gmail.com/
##
## STACKED ON: avar/sort-targets-and-no-more-find-or-ls-files
avar/generate-cmdlist-incrementally

## Clean up various installation-related variables in the Makefile
##
## REPLACED: avar/makefile-respect-no-gettext-in-artifacts-tar
## INCORPORATES: avar/Makefile-delete-check-racy-again
avar/Makefile-install-variable-cleanup

## A rebase of dscho/scalar-the-beginning re:
## http://lore.kernel.org/git/87ilz44kdk.fsf@evledraar.gmail.com
##
## STACKED ON: avar/Makefile-install-variable-cleanup
avar-dscho/scalar-the-beginning

## Fix the Makefile framework in avar-dscho/scalar-the-beginning
##
## NEEDS: avar-dscho/scalar-the-beginning
avar-dscho/scalar-the-beginning-normalize-Makefile

## Fix common memory leak in range-diff
avar/range-diff-apply-free-memory-for-SANITIZE-leak

## A stray cleanup of strvec_push() return value in environment.c
avar/strvec-use-push-return-value

## Further strvec.[ch] API fixes, change it to use size_t. See
## https://lore.kernel.org/git/87v93i8svd.fsf@evledraar.gmail.com/ and
## http://lore.kernel.org/git/87o88z82pc.fsf@evledraar.gmail.com
##
## Jeff King submitted this in
## https://lore.kernel.org/git/YTzEvLHWcfuD20x4@coredump.intra.peff.net/
##
## I then submitted a proposed v2:
#
# => https://lore.kernel.org/git/cover-v2-0.7-00000000000-20210912T001420Z-avarab@gmail.com
avar-jk/strvec-as-size-t-not-int

## Add and use a parse-options.c PARSE_OPT_ERROR_AT_NON_OPTION flag.
##
## Waiting on tb/commit-graph-usage-fix, was waiting on
## lh/systemd-timers, but that landed and I did the fixup
##
## NEEDS: avar/parse-options-h-2
avar/parse-options-add-and-use-error-at-non-option-flag

## Change the --range-diff --creation-factor for format-patch to 100,
## up from 60.
avar/range-diff-creation-factor-for-format-patch

## Fix a memory leak in builtin/commit-graph.c
avar/commit-graph-plug-memory-leak

## Fix a memory leak in builtin/merge-base.c
avar/merge-base-plug-memory-leak

## Fix a memory leak in builtin/repack.c
##
## TODO: Has failures in t0410-partial-clone.sh etc.
#avar/repack-plug-memory-leak

## Fix a memory leak in builtin/show-branch.c
##
## TODO: Has failures in t3202-show-branch.sh
#avar/show-branch-plug-memory-leak

## Refactor format-patch tests a bit to make them more readable
avar/format-patch-test-prep

## Change strvec.[ch] to expose strvec_push_nodup()
avar/strvec-expose-strvec_push_nodup

## Add some more --verbose --verbose output to fetch-pack
avar/fetch-pack-debug-friendlier

## Move http-fetch.c over to parse_options() and clean it up.
avar/http-fetch-parse-options

## Remove the ancient code from http-fetch.c only needed to support
## git-clone.sh
##
## NEEDS: avar/http-fetch-parse-options
##
avar/http-fetch-parse-options-remove-ancient

## Refactor builtin/checkout.c to a better *_INIT pattern
avar/checkout-refactor-memset-to-init

## Refactor out the nasty "ln || ln -s || cp" inline installation
## scripts in the Makefile into a helper script, and fix bugs.
##
## TODO: Send the v2
##
# => https://lore.kernel.org/git/cover-0.7-00000000000-20210329T162327Z-avarab@gmail.com/
avar/makefile-ln-or-cp-script-2

## A handy strbuf utility that makes a few lines of code easier, worth
## it?
avar/strbuf-chomp

## Don't be so lazy about updating the progress bar
avar/progress-bar-more-frequent-updates

#####
##### This whole greater progress topic was initially submitted as
##### https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##### i.e. ending in 795187b3824 (entry: deal with unexpected
##### "Filtering content" total, 2021-06-23)
#####
#####
##### TODO: Maybe d7e79d9702 (avar/progress-support-old-style-usage) helps?
#####
### These are all bundled, and need each other in turn:

## Get rid of the "sparse" mode
##
## STACKED ON: avar/global-progress-4
avar/progress-bar-remove-sparse-mode

## Make the "struct progress" be declared in progress.h, and refactor the test code.
avar/progress-make-progress-h-public-and-change-tests-code
## Change how "is it done?" is passed
avar/progress-is-done-passing
## Refactor "title" to strbuf and refactor/fix display() logic
avar/progess-strbuf-display-refactoring
## Emit progress on first signal, show "stalled"
avar/emit-progress-on-first-signal-if-stalled
## Assertions of progress.c usage,split from
## https://lore.kernel.org/git/20210620200303.2328957-1-szeder.dev@gmail.com
#avar-szeder/progress-bar-assertions
## Needs avar/emit-progress-on-first-signal-if-stalled, show spinner
## etc. on stalled progress.
#avar/wip-nodejs-like-spinner-on-stalling

## Fix the caller in entry.c which may abort its progress, but still
## wants stop_progress()
avar/stop-progress-early-fix
## Add an increment_progress() function for the common
## display_progress(progress, i + 1) cases.
##
## NEEDS: avar-szeder/progress-bar-fixes
avar/add-and-use-increment-progress-function

## TODO: Depended on now-merged avar/test-lib-various-6; Split up from
## avar/test-lib-functions-argument-checking-4
avar/test-lib-helper-file-size-split-to-file-sizes

## TODO: Was waiting on now-merged
## avar/t4018-diff-hunk-header-regex-tests-4-beginning-2, was held off
## as too large per:
##
# => https://lore.kernel.org/git/cover-00.11-00000000000-20210324T014604Z-avarab@gmail.com/
avar/t4018-diff-hunk-header-regex-tests-5

# TODO: utility to dump header etc.
#avar/bundle-wip

## Split up the user guides into guides and "formats"
##
## NEEDS: avar/help-builtin-usage-fixes
#
avar/doc-help-split-up-guides-into-format

## Make a gitformats(5) and e.g. gitformat-bundle(5).
##
## Needs avar/doc-help-split-up-guides-into-format
avar/doc-gitformats

## Fix behavior in the .gitmodules check to not report sections in
## .gitmodules once for each key in the section.
##
## NEEDS avar/add-serve-upload-pack-protocol-tests
avar/gitmodulesdisallowed-section-names-warning-fix-2

## Refactor how protocol v2 code does init, and add an OO version of
## packet_write() called packet_writer_write_len().
##
## STACKED ON: avar-jk/reduce-malloc-in-v2-servers
##
## BUG Failing tests, 9ab8e40185c (ls-refs: move to "struct
## packet_writer" API, 2021-07-05) is the first bad commit!
#avar/object-info-pkt-line-upload-pack-minor-refactoring-init

## Bundle URI design doc
##
## STACKED ON avar/add-basic-blobpackfileuri-test
#avar/bundle-uri-design-doc

## Implement uploadpack.bundleURI support for the server
##
## WAS e63f219b20a (avar/bundle-uri-server-old) before massive rebase
avar/bundle-uri-server

## Implement uploadpack.bundleURI support for the client
##
## NEEDS: avar/bundle-uri-server
avar/bundle-uri-client

## Actually implement the "clone" support (and almost incremental
## "fetch" support)
##
## Prior discussion:
##
## * Jeff King's 2011 patches:
##   https://lore.kernel.org/git/20111110074330.GA27925@sigill.intra.peff.net/
##
## * Me talking with Jonathan Tan about early packfile-uri:
##   https://lore.kernel.org/git/87k1hv6eel.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87pnpbsra8.fsf@evledraar.gmail.com/
##   https://lore.kernel.org/git/87zh35okzy.fsf@evledraar.gmail.com/
##
## * Discussion about early .gitmodules checks for packfile-uri:
##   https://lore.kernel.org/git/87o8hk820f.fsf@evledraar.gmail.com/
##
## NEEDS: avar/bundle-uri-client
# => https://lore.kernel.org/git/RFC-cover-00.13-0000000000-20210805T150534Z-avarab@gmail.com
avar/bundle-uri-client-clone

##############################################
# Waiting on the above (or other dependency) #
##############################################

## Emily's new hook topic on top of my base topic. Picket it from
## 30ffe98601e (hook: allow out-of-repo 'git hook' invocations,
## 2021-07-11), or nasamuffin/config-based-hooks-restart. That's v3
## here:
## https://lore.kernel.org/git/20210819033450.3382652-1-emilyshaffer@google.com/
##
## NEEDS: es-avar/config-based-hooks-7
##
## UPDATE @ 2021-09-01: "30ffe98601e...cf1f8e34a34 config-based-hooks-restart -> nasamuffin/*"
##
## I publicly mentioned the *-3 in:
## https://lore.kernel.org/git/cover-v5-00.36-00000000000-20210902T125110Z-avarab@gmail.com/;
## so I created the *-4.
##
## I then submitted the *-4 per
## https://lore.kernel.org/git/87sfyfgtfh.fsf@evledraar.gmail.com/ and
## Emily's inactivity:
##
## TODO: The *-5 is my WIP with fixups *sigh*, submitted a fixup for
## the v4:
#
# https://lore.kernel.org/git/cover-v4-0.5-00000000000-20210909T122802Z-avarab@gmail.com
# https://lore.kernel.org/git/patch-1.1-38b21b65bee-20210909T125613Z-avarab@gmail.com
avar-nasamuffin/config-based-hooks-restart-5

## Add and use an API to free revisions.[ch] assets
##
## NEEDS: avar/tests-add-sanitize-leak-test-mode-8
## STACKED ON: avar/tests-post-sanitize-leak-test-mode-trivial-leaks-without-tests
avar/post-sanitize-leak-test-mode-add-and-use-revisions-release

## Fix a memory leak in test-prio-queue.c and test-parse-options.c
##
## NEEDS: avar/tests-add-sanitize-leak-test-mode
##
## TODO: I ejected
## avar/tests-post-add-sanitize-leak-test-mode-fix-leaks-wip from
## this.
##
## NOTE: The avar/tests-post-add-sanitize-leak-test-mode-fix-leaks
## name was referenced in a ML post at
## https://lore.kernel.org/git/87a6k8daeu.fsf@evledraar.gmail.com/,
## renamed
##
## TODO: Pick up and test the ejected
## avar/tests-post-add-sanitize-leak-test-mode-fix-leaks-redux-wip-ref-filter-release
avar/tests-post-add-sanitize-leak-test-mode-fix-leaks-redux

## Simplify the logic around the config, --strict and --verify for
## index-pack and pack-object writing of *.idx and *.rev.
##
## A WIP version of this was pasted inline as part of
## https://lore.kernel.org/git/87v93bidhn.fsf@evledraar.gmail.com/;
## referenced at
## https://lore.kernel.org/git/87r1dziczs.fsf@evledraar.gmail.com/
##
## CONFLICTS: avar-tb/idx-rename-race-2
avar/pack-h-simplify-writing-idx-and-rev

# WIP mark more things as passing under SANITIZE=leak. Ejected from
# avar/tests-add-sanitize-leak-test-mode-3
#avar/tests-add-sanitize-leak-test-mode-3

## WIP make the format-patch Message-IDs prettier.
##
## Had some WIP for %(if) and %(else) in the format in
## avar/format-patch-prettier-message-id-wip
##
## NEEDS: avar/format-patch-test-prep
avar/format-patch-prettier-message-id

# Make advise() always emit the config blurb at the end. Has a
# semantic conflict with es-avar/config-based-hooks-6.
#
## NEEDS: avar/object-make-ambiguous-object-advice-translatable
## NEEDS: avar/advice-basic-api-cleanups
# CONFLICTS: es-avar/config-based-hooks-6
avar/make-advice-always-emit-config-blurb

## Post avar/t4018-diff-hunk-header-regex-tests-5
# => https://lore.kernel.org/git/20210215155020.2804-1-avarab@gmail.com/
avar/diff-W-context-4

## Post avar/pcre2-fixes-diffcore-pickaxe-pcre-etc-4
avar/pcre2-conversion-of-diffcore-pickaxe

## Post avar/tree-walk-api-refactor-prep
avar/tree-walk-api-refactor-6
## TODO: No tests fails on this, but building this at cd6c70171f2
## (tree-walk.h API: move canon_mode() back out of
## decode_tree_entry(), 2021-03-04) fails with:
##
##    ~/g/git/git -P blame builtin/init-db.c
##
## It's something to do with the old git.git entries that have odd modes:
##
## diff --git a/tree-walk.c b/tree-walk.c
## index 35a1683d801..e761cec542d 100644
## --- a/tree-walk.c
## +++ b/tree-walk.c
## @@ -52,6 +52,12 @@ static int decode_tree_entry(struct tree_desc *desc, const char *buf, unsigned l
##         desc->entry.pathlen = len - 1;
##         oidread(&desc->entry.oid, (const unsigned char *)path + len);
##
## +       if (mode != canon_mode(mode))
## +               error("%s (%o to %o; %d to %d, %o to %o): %s", oid_to_hex(&desc->entry.oid),
## +                     mode, canon_mode(mode), S_ISDIR(mode), S_ISDIR(canon_mode(mode)),
## +                     (mode & 0777), (canon_mode(mode) & 0777),
## +                     path);
## +
##         return 0;
##  }
##
## vm git (avar/tree-walk-api-canon-mode-switch $>) 0 $ ~/g/git/git -P blame -M0 builtin/init-db.c
## error: cf550e258cff644726561052d129a03c4f7d2717 (100664 to 100644; 0 to 0, 664 to 644): README
## error: 88c2fa8d95b2cf6c0b2cd78c074659885625766d (100664 to 100644; 0 to 0, 664 to 644): cache.h
## error: 3c47d79a16305d326a65768fe9f37ee25928510b (100664 to 100644; 0 to 0, 664 to 644): cat-file.c
## error: 7d16691aa9d51b5b4670d5837b3527ee7c7da79c (100664 to 100644; 0 to 0, 664 to 644): check-files.c
## error: 8d5e4cd148f6111ab7e0bfb7f9142693e08f66bd (100664 to 100644; 0 to 0, 664 to 644): checkout-cache.c
## error: 50fe19652f1b440c4123f92af886e47bb418bb11 (100664 to 100644; 0 to 0, 664 to 644): commit-tree.c
## error: 826812af83f1f267014860f285fc03286bc5329e (100664 to 100644; 0 to 0, 664 to 644): diff-tree.c
## error: 3fbcd2c7e99fa5e27fa7edad0e2bd65d3b557fe7 (100664 to 100644; 0 to 0, 664 to 644): fsck-cache.c
## error: ff2b11a3b33ecba970f59bef3ba63dcc29b53855 (100664 to 100644; 0 to 0, 664 to 644): init-db.c
## error: feeding unmodified init-db.c to diffcore
## fatal: internal error in blame::find_origin (X)
avar/tree-walk-api-canon-mode-switch

## Post avar/t0000-lib-subtest-split-and-refactor
avar/support-test-verbose-under-prove-2

## Post avar/doc-make-lint-fixes-2
avar/doc-config-includes

## Post avar/object-as-type-simplified-3
##
## In a WIP state, see the discussion at
## https://lore.kernel.org/git/YGV8UOsYUQt7Lpto@coredump.intra.peff.net/
## and the messy branch I have here. Test case at
## https://lore.kernel.org/git/YGTGgFI19fS7Uv6I@coredump.intra.peff.net/
##
## There used to be a *-4 but it was misnumbered, moved to *-3. Some
## version of this was on-list as
## https://lore.kernel.org/git/cover-00.11-00000000000-20210328T021238Z-avarab@gmail.com/
avar/object-is-type-error-refactor-3

#############################################
# Work in progress, but barely passes tests #
#############################################

## Make the cat-file usage and options etc. less confusing
## https://lore.kernel.org/git/87tuhuikhf.fsf@evledraar.gmail.com/
avar/cat-file-batch-all-objects-cmdmod

## Free memory in various transport, http and curl related functions
##
## See avar/http-curl-transport-add-missing-free-post-wip for some
## more which segfaults, it's to do with do_take_over() and struct
## casting etc. Memory management mess.
##
## NEEDS: avar/http-curl-transport-add-missing-free
##
## TODO: Has an unresolved edge case/bug, see mid-series TODO hack.
avar/http-curl-transport-add-missing-free

## The range-diff command will segfault on e.g.:
##
##     GIT_PROGRESS_DELAY=0 ~/g/git/git -P --exec-path=$PWD range-diff --progress --creation-factor=100 origin/master...git-for-windows/main
##
## Narrowly fix that segfault. I have the WIP
## avar/string-list-overflow-range-diff with a tangle of doing
## progress output etc.
#avar/range-diff-int-overflow-segfault

## The range-diff command will segfault on e.g.:
##
##     GIT_PROGRESS_DELAY=0 ~/g/git/git -P --exec-path=$PWD range-diff --progress --creation-factor=100 origin/master...git-for-windows/main
##
## This adds progress to it, and fixes the bug
#avar/string-list-overflow-range-diff

## Make t0027 faster, down from 20s to 13-15s so far.
avar/test-faster-t0027

## The WIP inline patch at for a "rerere" segfault reported by brian
## m. carlson:
## https://lore.kernel.org/git/87tuiufr3c.fsf@evledraar.gmail.com/
avar-bc/git-rerere-forget-segfault-fix

## Refactor fetch.c to make a couple of variables be lazily generated
## by their users.
avar/fetch-format-lazy

## Better free() behavior and general better string-list.h API. See
## avar/string-list-strmap-api-free-etc-fixes-old for some strmap
## etc. changes
##
## Maybe take the approach in
## avar/string-list-better-free-maybe-alternate instead? See
## https://lore.kernel.org/git/CAPig+cRAKJyzuMwPNdmC+BobrMjk5TF-o3Ort8R0E77ij=g6_A@mail.gmail.com/
##
## NEEDS: avar/initializer-cleanup
avar/string-list-strmap-api-free-etc-fixes
#avar/string-list-better-free-maybe-alternate

## Clarify the "advertise" callback in serve.c. I had a WIP of
## avar/bundle-uri where I did:
##
## int bundle_uri_advertise(struct repository *r, struct strbuf *value)
## {
## 	if (!advertise_bundle_uri
## 		die(_("we support 'bundle-uri' but do not have it configured"));
## 	return advertise_bundle_uri;
## }
##
avar/serve-add-comment-about-advertise-caveat

## A WIP patch to respect NO_GETTEXT=Y in Windows CI. See
## https://lore.kernel.org/git/878s2m8ns9.fsf@evledraar.gmail.com/
#avar/makefile-respect-no-gettext-in-artifacts-tar

## Optimize cat-file --batch-check, see my
## https://lore.kernel.org/git/87eecf8ork.fsf@evledraar.gmail.com/
## (this one is slightly improved)
##
avar/optimize-cat-filebatch-object-write-for-common-case

## The change to the hash_algos, split off from
## avar/initializer-cleanup, conflicts with reftable work.
avar/initializer-cleanup-hash-algos

## Make the "git remote -v" output prettier and more dense. Align the
## remote names, and don't show both "fetch" and "push" URL lines in
## the common case where they're the same.
avar/remote-prettier-show-v-output

## Stress test the test suite under a new GC racy mode, and fix racy
## bugs.
##
## Needs to be made to pass under GIT_TEST_GC=true
## GIT_TEST_GC_AUTO_DETACH=true
##
#avar/more-gc-detach-under-lock

####################
# TODO: Categorize #
####################

avar/fsck-doc

## Will segfault on orphan + post-checkout hook (the "to" OID is null)
#avar/worktree-add-orphan
#avar/makefile-misc-crap-improved-make-clean
avar/test-lib-test-oid-to-dir

#########################################################
# Not picked up (or later ejected) by Junio, re-pursue? #
#########################################################

## Be more gentle in setup_git_directory_gently()
##
## TODO: Make this more gentle? Have a per-command flag in git.c?
##
# => https://lore.kernel.org/git/patch-1.1-fc26c46d39-20210722T140648Z-avarab@gmail.com
avar/do-not-die-on-setup-gently-2

## Documentation/Makefile: don't re-build on 'git version' changes
##
## TODO: Junio likes the "regression", maybe formalize the "build with
## a custom git version" part of this?
##
# => https://lore.kernel.org/git/patch-1.1-911881ce19f-20210702T115617Z-avarab@gmail.com
avar/make-asciidoc-flags

## Stop saying "write new commands in Perl or SH"
##
# => https://lore.kernel.org/git/patch-1.1-98b1f938f7d-20210417T122959Z-avarab@gmail.com/
avar/doc-codingguidelines-2

## TODO: Needs a v2 re-roll per https://lore.kernel.org/git/875z15kor5.fsf@evledraar.gmail.com/
## TODO@2021-05-19: Needs fsck.c and notes.c conflict resolution with master
##
## TODO@2021-07-30: Re-started and re-based a v3, not submitted yet
##
# => https://lore.kernel.org/git/cover-00.19-00000000000-20210331T190531Z-avarab@gmail.com/
avar/tree-walk-api-refactor-prep-3

## TODO: Re-roll per https://lore.kernel.org/git/87o8eogs2r.fsf@evledraar.gmail.com/ etc.
## Refactor "git config" tristate
# => https://lore.kernel.org/git/cover-0.6-0000000000-20210408T133125Z-avarab@gmail.com/
avar/git-config-bool-or-auto

## Various object.c refactoring (stacked one on top of
## another).
##
## There's a textual conflict with BMC's hash-object.c changes. See
## https://lore.kernel.org/git/87mttx121j.fsf@evledraar.gmail.com/
#

## TODO: Send a v3
##
## STACKED ON: avar/fsck-error-on-completely-invalid-7
##
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T124428Z-avarab@gmail.com
avar/object-api-misc-small-3

## TODO: Send a v3
##
## NEEDS: avar/object-api-misc-small-3
# => https://lore.kernel.org/git/cover-00.10-0000000000-20210420T125415Z-avarab@gmail.com
avar/object-api-enum-object-type-misc-3

## TODO: Send a v3
##
## NEEDS: avar/object-api-enum-object-type-misc-3
# => https://lore.kernel.org/git/cover-0.8-0000000000-20210420T133218Z-avarab@gmail.com
avar/object-as-type-simplified-3

## TODO: Address these and send a v4:
## => https://lore.kernel.org/git/xmqqr1it92da.fsf@gitster.g/
## => https://lore.kernel.org/git/xmqqmtth91wx.fsf@gitster.g/
##
## Use 'test -f "$@"' for argument checking
#
# => https://lore.kernel.org/git/cover-0.4-00000000000-20210423T072824Z-avarab@gmail.com
avar/test-lib-functions-argument-checking-4

## Refactor tests related to old test variables. This was larger but
## partially rolled into
## avar/dead-git-sh-setup-code-and-move-to-last-users4, rebased on it.
##
## TODO: Send a v2 with what's left here? Need to address the comments
## in the v1 review.
##
# => https://lore.kernel.org/git/20210311001447.28254-1-avarab@gmail.com/
avar/sh-remove-sha1-variables-2

################################
# Ejected by Junio, re-pursue? #
################################

## Do "mv $@+ $@" for object files, so I can run "make test" while git
## builds, and AIX builds don't suck. Now on top of my
## avar/makefile-delete-on-error. Junio didn't like it:
##
## TODO: The *-3 is a rebased unsubmitted version.
#
# => https://lore.kernel.org/git/cover-0.6-00000000000-20210329T161723Z-avarab@gmail.com/
#avar/makefile-rename-git-binary-not-in-place-3

## Get rid of "Alice" and "Bob" references in our documentation.
##
## "Let's shelve this one for now, as it does not seem to solve any
## real problems (other than ceasing to use Alice and Bob in contexts
## that do not call for Eve)." --
## https://lore.kernel.org/git/xmqq8s2ga19f.fsf@gitster.g
#
# => https://lore.kernel.org/git/cover-0.6-00000000000-20210615T161330Z-avarab@gmail.com
#avar/doc-get-rid-of-alice-and-bob

## Junio had avar/progress-api-use-minor~1 is in next @ 2021-07-03 and
## merged it to master @ 2021-07-09. This tip was ejected. Revisit it
## along with my other "progress" topic(s).
##
## Has a gient thread at
## https://lore.kernel.org/git/8f336b1b-6cb7-8277-79d5-0f331159b00c@gmail.com/
## about whether 2/2 was off by one or not.
avar/progress-api-use-minor-maybe-again

avar/test-lib-bail-out-on-accidental-prove-invocation-2
avar/lookup-object-init-to-NULL

## Split the building of "fuzz" objects to only run in CI, not needed
## to build "git"
#avar/makefile-do-not-build-fuzz-under-all

## Not accepted per: https://lore.kernel.org/git/xmqqeeffe669.fsf@gitster.g/
##
## Declare C99 variadic macros a hard dependency
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210412T105422Z-avarab@gmail.com/
avar/variadic-macros

#################
# Ejected by me #
#################

## Jeff King's grep.c const correctness in
## https://lore.kernel.org/git/YUlVZk1xXulAqdef@coredump.intra.peff.net/
#avar-jk/grep-const

## My proposed patch-on-top which does "const char *" -> "const char *
## const" etc. where possible.
##
## NEEDS: avar-jk/grep-const
##
# => https://lore.kernel.org/git/patch-1.1-c317e6e125e-20210921T124416Z-avarab@gmail.com
#avar-jk/grep-const-more

## Was part of v1 of avar/Makefile-make-sparse-non-phony, but ejected
## in later iterations.
#avar/Makefile-hcc-rule-do-one-append-in-brackets

## Make GENERATE_COMPILATION_DATABASE=yes error properly when not
## under clang
##
## I thought it would be replaced by cb/make-compdb-fix, he submitted
## his first (I didn't notice), but Junio picked up 1/2 here of mine
## instead.
##
## Re-pursue as a bigger code deletion in
## https://lore.kernel.org/git/87tuic5cdo.fsf@evledraar.gmail.com/ ?
##
#avar/Makefile-error-on-GENERATE_COMPILATION_DATABASE-yes-failure

## Prep for changes I need for "bundle create --stdin".
##
## Stalled for a while, re-rolled
##
# https://lore.kernel.org/git/cover-0.5-00000000000-20210726T124425Z-avarab@gmail.com
#avar/setup-revisions-stdin-parsing-api-6

## Try to make the "hdr-check" target non-.PHONY, but I can't just
## depend on the *.o like the "sparse" target, since some *.h don't
## have a corresponding *.c.
##
## EJECTED FROM: avar/Makefile-make-sparse-non-phony-2
##
## Also change "echo >f; echo >>f" to { echo; echo; } >f
#
# => https://lore.kernel.org/git/cover-0.3-00000000000-20210921T224944Z-avarab@gmail.com
#avar/Makefile-make-sparse-non-phony

## My review of Eric Sunshine's notes leading whitespace fixes. See
## http://lore.kernel.org/git/20210830072118.91921-1-sunshine@sunshineco.com
## for his.
#avar-es/notes-leading-whitespace-on-empty-lines

## Ejected 82db40ebf8a (rev-list tests: test for behavior with invalid
## object types, 2021-05-18) from
## avar/fsck-error-on-completely-invalid-7 (was in
## avar/fsck-error-on-completely-invalid-6) in response to
## http://lore.kernel.org/git/YUOryeVj1WNk1Sqd@nand.local
#avar/fsck-error-on-completely-invalid-6

## In v2 the "while we're at it" designated initializer change + code
## formating was ejected. See
## https://lore.kernel.org/git/patch-v2-1.1-0ddf38b47ac-20210911T182631Z-avarab@gmail.com/
#
#avar/test-tool-run-command-buggy-init-pattern

## Cleanup unused stuff in git-sh-setup. Ejected in
## avar/dead-git-sh-setup-code-and-move-to-last-users-3 due to (IMO
## spurious) backwards compatibility arguments. Maybe follow-up on
## https://lore.kernel.org/git/87tuiwjfvi.fsf@evledraar.gmail.com/
#avar/dead-git-sh-setup-code-and-move-to-last-users-2

## Fully remove the "test-tool run-command testsuite" sub-sub-command,
## it's unused.
##
## UPDATE: It's unused, but Johannes would prefer for it to stay per
## https://lore.kernel.org/git/nycvar.QRO.7.76.6.2109091323150.59@tvgsbejvaqbjf.bet/
#
# => https://lore.kernel.org/git/patch-1.1-d1e464da0a9-20210906T002938Z-avarab@gmail.com
#avar/test-run-command-testsuite-nuke

## Actual nuking of unused git-sh-setup code, ejected from
## avar/dead-git-sh-setup-code-and-move-to-last-users-2 per
## https://lore.kernel.org/git/xmqqbl5aip0e.fsf@gitster.g/
#
#avar/dead-git-sh-setup-code-and-move-to-last-users

## A rescue of the splitting of the t/helper/test-read-cache.c RFC
## patch from
## https://lore.kernel.org/git/20210317132814.30175-6-avarab@gmail.com/
##
## EJECTED per my
## https://lore.kernel.org/git/87tuj7xhqo.fsf@evledraar.gmail.com/
#
# => https://lore.kernel.org/git/cover-v2-0.4-00000000000-20210824T091204Z-avarab@gmail.com
#avar/split-up-test-tool-read-cache-2

## Less hardcoded 8192 in strbuf.c + make strbuf_fread() use a default
##
## Related to but does not interdepend on
## avar/imap-send-refactor-stdin-reading
##
## TODO: A bunch of feedback for a v2, seems to be a non-starter. Dropped it.
##
# => https://lore.kernel.org/git/cover-0.3-00000000000-20210707T103712Z-avarab@gmail.com
#avar/strbuf-hint-hardcoding-and-strbuf-fread-hint-default

## Ejected b00e7c02aee (serve.c: add call_{advertise,command}()
## indirection, 2021-06-28) and 271b4650d27 (serve: add support for a
## "startup" git_config() callback, 2021-03-24) from
## avar/transport-use-git-config-callback-4. Maybe I'll want it back?
#
#avar/transport-use-git-config-callback-3

## Adjust Makefile and config.mak.uname to stop hardcoding
## command-list.h and config-list.h; Needed for eventually adding
## hook-list.h in avar/add-hook-list-h
##
## NOTE: Created v3 to rebase on master, not sent yet (and maybe won't
## be)
##
## NOTE: Re-folded into es-avar/config-based-hooks-5, Junio wasn't
## picking it up separately.
##
# => https://lore.kernel.org/git/cover-0.3-0000000000-20210629T190137Z-avarab@gmail.com
#avar/stop-hardcoding-generated-h-3

## Add a hook-list.h source of truth, and some prep for
## es-avar/config-based-hooks-4
##
## TODO: Remove René's SOB?
## https://lore.kernel.org/git/76bd9738-65e8-3696-7934-8090b5912427@web.de/
## Junio did it already when he queued it.
##
## NOTE: Created v3 to rebase on master, not sent yet (and maybe won't
## be)
##
## NOTE: Re-folded into es-avar/config-based-hooks-5, Junio wasn't
## picking it up separately.
#
# => https://lore.kernel.org/git/cover-0.3-0000000000-20210629T183325Z-avarab@gmail.com
#avar/add-hook-list-h-3

## Adds various tests for "fetch", "ls-refs", "object-info"
## etc. etc. Used to be fetch-etc-testbasic-blobpackfileuri-test,
## that's now a part of this.
##
## TODO: Has a couple of tests in avar/test-lib-get-rid-of-packetize-3
## that could go back in.
##
## Let's have this wait for the whole bundle-uri etc. saga
#avar/add-serve-upload-pack-protocol-tests

## Don't just die() in upload-pack.c and friends, instead transmit ERR
## packets in most/all cases.
##
## See prior art (discovered after I wrote this) and discussion at:
## https://public-inbox.org/git/20190305041139.GA19800@sigill.intra.peff.net/
## and
## https://lore.kernel.org/git/20190829141307.GE1797@sigill.intra.peff.net/
##
## NEEDS avar/add-serve-upload-pack-protocol-tests, but on top of
## avar/object-info-pkt-line-upload-pack-minor-refactoring-init for
## stacking.
#avar/serve-upload-pack-protocol-error-handling

## Rewrite [de]packetize() to use test-tool pkt-line instead, and
## refactor various test scripts + add a couple of more tests.
##
## The v4 of this topic dropped most of that, maybe pick it up again?
##
# => https://lore.kernel.org/git/cover-0.5-0000000000-20210714T005115Z-avarab@gmail.com
#avar/test-lib-get-rid-of-packetize-3

## The v2 version of this ejected the strftime() format attribute
## checking. See
## https://lore.kernel.org/git/cover-0.6-0000000000-20210713T080411Z-avarab@gmail.com
#avar/add-missing-format-specifiers

## Make the progress tests work under -v on a wide (or narrow, COLUMNS
## != 80) terminal
##
## Was submitted as part of the 25 patch
## https://lore.kernel.org/git/cover-00.25-00000000000-20210623T155626Z-avarab@gmail.com
##
## Replaced with avar/test-lib-set-columns-80 per the discussion on
## the patch.
##
# => https://lore.kernel.org/git/patch-1.1-cba5d88ca35-20210621T070114Z-avarab@gmail.com
#avar/progress-tests-80-columns

## Improve t4013 reliability
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210413T122645Z-avarab@gmail.com
avar/t4013-reliability-2

## Pick it up if I ever care about coccicheck again
# => https://lore.kernel.org/git/877dlwotjc.fsf@evledraar.gmail.com/
#avar/fix-coccicheck-4

## Folded into avar/send-email-fixes-and-speedup. Junio wasn't
## interested in it stand-alone. See
## https://lore.kernel.org/git/87a6peyfry.fsf@evledraar.gmail.com/
##
## Remove support for sendemail.smtpssl
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210411T144128Z-avarab@gmail.com/
#avar/send-email-smtp-config-minor

## The 1/2 of this was picked up, 2/2 wasn't OK'd
##
## Minor sparse-index.c fixes
# => https://lore.kernel.org/git/cover-0.2-00000000000-20210505T121028Z-avarab@gmail.com
#avar/sparse-index-fixup

## Fix for a regression in my $remove_trash change
##
## Replaced with 560bf518923 (test-lib: avoid accidental globbing in
## match_pattern_list(), 2021-06-16)
##
# => https://lore.kernel.org/git/patch-1.1-436c723f4f8-20210616T082030Z-avarab@gmail.com
#avar/test-lib-scratch-directory

############################################
# TODO replaced by another un-landed topic #
############################################

## Don't check an enum value by doing negative comparisons in
## builtin/reflog.c. Split off from a WIP
## avar/files-backend-remove-dead-errno-eisdir-2, but then
## re-integrated
##
#avar/reflog-no-negative-comparison-against-enum

## Move raceproof_create_file() around, found it while working on
## avar-review/pr-git-1012/hanwen/einval-sideband-v5.
##
## Dropped, moved into
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-3 itself.
##
#avar/refs-backend-file-move-raceproof-create-file

############################################
# TODO (doesn't compile, fails tests etc.) #
############################################

## A test mode to check if we return -1 from main? See
## https://lore.kernel.org/git/871r5e45jw.fsf@evledraar.gmail.com/
##
## Per http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf
## 7.20.4.3 the return value of main() is implementation defineed, in
## POSIX it's defined as ret & 0xff, so -1 becomes 255.
#avar/cmd-main-return-zero-or-positive

## A WIP based on
## avar/Makefile-error-on-GENERATE_COMPILATION_DATABASE-yes-failure to
## properly add *.dep files to the dependency graph, maybe a stupid
## idea. See
## https://lore.kernel.org/git/8735pw6w8z.fsf@evledraar.gmail.com/
#avar/Makefile-COMPUTE_HEADER_DEPENDENCIES-in-two-steps

## Post avar/fsck-error-on-completely-invalid-7?
##
## TODO: Rebase on avar/fsck-error-on-completely-invalid-7
#avar/cat-file-and-other-allow-unknown-type-refactoring

## Try to make "git help" deal with "git" and "git -h". Leaks with
## SANITIZE=leak, as simple as realloc on the munged argv array?
#avar/git-cmd-dispatch-to-help-instead-of-hardcoding

## scalar: MSFT "git-ng". Re-did the whole Makefile bits to be much
## simpler. See
## http://lore.kernel.org/git/87r1dydp4m.fsf@evledraar.gmail.com
##
## Fails compiling with:
##     make: *** No rule to make target 'scalar.o', needed by 'scalar'.  Stop.
#avar/dscho/scalar-the-beginning-v3

## A refactoring of how we do getopts stuff on top of
## ttaylorr/tb/midx-bitmap-hashcache
##
## See https://lore.kernel.org/git/87v93bidhn.fsf@evledraar.gmail.com/
## and https://lore.kernel.org/git/87v93adr8r.fsf@evledraar.gmail.com/
## where this patch was inlined.
##
## NEEDS: ttaylorr/tb/midx-bitmap-hashcache
##
## NOTE @ 2021-09-09: Can't be bothered to solve the current
## conflicts, re-visit.
#
# => https://lore.kernel.org/git/87v93adr8r.fsf@evledraar.gmail.com/
#avar-tb/midx-bitmap-hashcache-opts-refactor

## Log the N parents on Linux as well on Windows, WIP patch from
## http://lore.kernel.org/git/87o8agp29o.fsf@evledraar.gmail.com
##
#avar-nasamuffin/trace2-log-parent-process-name

## Should index-pack --check-self-contained-and-connected be some
## combination of --strict and --fix-thin instead? The ret = 1 return
## is used in fetch-pack.c
#avar/index-pack-connectivity-check-wip

## Post-avar/files-backend-remove-dead-errno-eisdir-2, fix up
## string-list API some more with common free patterns.

## Post-avar/tests-add-sanitize-leak-test-mode
#avar/tests-add-sanitize-leak-test-mode-wip
#avar/test-add-sanitize-leak-test-mode-ejected-progress-fix-todo

## Post-avar/git-config-bool-or-auto, fails on
## t4021-format-patch-numbered.sh
#avar/git-config-bool-or-auto-wip-enum

## Log the client-agent (and need to work on server-agent?) in serve.c
#avar/wip-agent-trace2-in-serve

#make-dot-not-HEAD-warn-3
## TODO: handle -t "some garbage" case
#avar/object-api-to-no-string-argument
#unconditional-abbrev-redo-2021-rebase
#avar/no-templates
#avar/test-lib-add-GIT_TEST_TIMEOUT-2
#avar/send-email-wip-drop-Git-pm-prereq

## Folded into avar/progress-bar-remove-sparse-mode, except for the
## last patch
#
#avar/get-rid-of-progress-special-snowflake

## Fix tree mode fsck-ing. Will rely on
## avar/tree-walk-api-canon-mode-switch etc.
#avar/fix-tree-mode-fsck

## My old WIP avar/bundle-uri code
#avar/bundle-uri-wip

## Date overflow checks and fixes
#fsck-date-overflow-with-tz

## Old security test that was left hanging. Needs forward-porting to
## t7450-bad-git-dotfiles.sh
#v2.17.1-extra-security-test

######################
# TODO old bkng work #
######################

#reflog-expire-do-not-assert-oid-when-locking-refs
#hash-object-no-zlib
#check-collisions-config-5

#######################################################################################
# Others work I rebased / tried out etc. but outstanding. hopefully re-rolled by them #
#######################################################################################

## A gitster/hn/reftable rebased on
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-5 + fixups. For
## the original see pr-git-1054/hanwen/libreftable-v3 at:
## https://lore.kernel.org/git/pull.1054.v3.git.git.1629207607.gitgitgadget@gmail.com/
##
## To diff the two:
##
##    git range-diff origin/master..pr-git-1054/hanwen/libreftable-v3 avar-review/pr-git-1012/hanwen/einval-sideband-v5-5..avar-hanwen/reftable
##
## See https://lore.kernel.org/git/87a6lbgqey.fsf@evledraar.gmail.com/
## for a side discussion about the greater status of this topic
## v.s. avar/files-backend-remove-dead-errno-eisdir-5 and
## avar-review/pr-git-1012/hanwen/einval-sideband-v5-5
##
## See https://lore.kernel.org/git/877dgch4rn.fsf@evledraar.gmail.com/
## for my general skepticism that this is anywhere near ready.
##
## This has fixups on top to make it work with my base serieses noted
## above.
##
## NOTE: The *-2 is unsubmitted, created for a rebase, hopefully
## Han-Wen picks it up from me again...
##
## NOTE: Ejected @ 2021-09-02, has SANITIZE=leak failures in core
## tests, and Han-Wen will re-roll eventually...
#
# => https://lore.kernel.org/git/cover-v4-00.28-00000000000-20210823T120208Z-avarab@gmail.com
# => https://lore.kernel.org/git/patch-1.1-f7d9c8af0c-20210827T055608Z-avarab@gmail.com (fixup)
#avar-hanwen/reftable-2

